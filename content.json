{"meta":{"title":"Max's Blog","subtitle":"keep hungry, then you'll be really hungry","description":"HH的博客","author":"Max Qi","url":"http://yoursite.com"},"pages":[{"title":"About","date":"2017-07-04T10:00:00.000Z","updated":"2018-09-15T02:25:03.343Z","comments":false,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"姓名：Max, Qi github：cherishher wechat：qh951295 简介： 上图是我拍过最好看的一张 真人是个小胖子 2014 SEU 2018 CUHK 篮球、羽毛球、台球都会 LOL老玩家，宿舍嘴强ADC，弹幕uzi 刺激战场和王者荣耀可以带妹下分 吉他自学一年，基本可以弹唱 小吃货，喜欢浪 征婚～"},{"title":"Tags","date":"2018-07-04T10:33:41.394Z","updated":"2018-07-04T10:33:41.393Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":"这里是tags页面"},{"title":"","date":"2018-08-05T16:31:41.708Z","updated":"2018-08-05T16:31:40.694Z","comments":true,"path":"img/伪分布式 Hadoop 部署 Mac版 - 简书.html","permalink":"http://yoursite.com/img/伪分布式 Hadoop 部署 Mac版 - 简书.html","excerpt":"","text":"伪分布式 Hadoop 部署 Mac版 - 简书 var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"//hm.baidu.com/hm.js?0c0e9d9b1e7d617b3e6842e85b9fb068\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })(); fieldset[disabled] .multiselect { pointer-events: none; } .multiselect__spinner { position: absolute; right: 1px; top: 1px; width: 48px; height: 35px; background: #fff; display: block; } .multiselect__spinner:after, .multiselect__spinner:before { position: absolute; content: \"\"; top: 50%; left: 50%; margin: -8px 0 0 -8px; width: 16px; height: 16px; border-radius: 100%; border-color: #41b883 transparent transparent; border-style: solid; border-width: 2px; box-shadow: 0 0 0 1px transparent; } .multiselect__spinner:before { animation: a 2.4s cubic-bezier(.41,.26,.2,.62); animation-iteration-count: infinite; } .multiselect__spinner:after { animation: a 2.4s cubic-bezier(.51,.09,.21,.8); animation-iteration-count: infinite; } .multiselect__loading-enter-active, .multiselect__loading-leave-active { transition: opacity .4s ease-in-out; opacity: 1; } .multiselect__loading-enter, .multiselect__loading-leave-active { opacity: 0; } .multiselect, .multiselect__input, .multiselect__single { font-family: inherit; font-size: 14px; -ms-touch-action: manipulation; touch-action: manipulation; } .multiselect { box-sizing: content-box; display: block; position: relative; width: 100%; min-height: 40px; text-align: left; color: #35495e; } .multiselect * { box-sizing: border-box; } .multiselect:focus { outline: none; } .multiselect--disabled { opacity: .6; } .multiselect--active { z-index: 1; } .multiselect--active:not(.multiselect--above) .multiselect__current, .multiselect--active:not(.multiselect--above) .multiselect__input, .multiselect--active:not(.multiselect--above) .multiselect__tags { border-bottom-left-radius: 0; border-bottom-right-radius: 0; } .multiselect--active .multiselect__select { transform: rotate(180deg); } .multiselect--above.multiselect--active .multiselect__current, .multiselect--above.multiselect--active .multiselect__input, .multiselect--above.multiselect--active .multiselect__tags { border-top-left-radius: 0; border-top-right-radius: 0; } .multiselect__input, .multiselect__single { position: relative; display: inline-block; min-height: 20px; line-height: 20px; border: none; border-radius: 5px; background: #fff; padding: 0 0 0 5px; width: 100%; transition: border .1s ease; box-sizing: border-box; margin-bottom: 8px; vertical-align: top; } .multiselect__tag~.multiselect__input, .multiselect__tag~.multiselect__single { width: auto; } .multiselect__input:hover, .multiselect__single:hover { border-color: #cfcfcf; } .multiselect__input:focus, .multiselect__single:focus { border-color: #a8a8a8; outline: none; } .multiselect__single { padding-left: 6px; margin-bottom: 8px; } .multiselect__tags-wrap { display: inline; } .multiselect__tags { min-height: 40px; display: block; padding: 8px 40px 0 8px; border-radius: 5px; border: 1px solid #e8e8e8; background: #fff; } .multiselect__tag { position: relative; display: inline-block; padding: 4px 26px 4px 10px; border-radius: 5px; margin-right: 10px; color: #fff; line-height: 1; background: #41b883; margin-bottom: 5px; white-space: nowrap; overflow: hidden; max-width: 100%; text-overflow: ellipsis; } .multiselect__tag-icon { cursor: pointer; margin-left: 7px; position: absolute; right: 0; top: 0; bottom: 0; font-weight: 700; font-style: normal; width: 22px; text-align: center; line-height: 22px; transition: all .2s ease; border-radius: 5px; } .multiselect__tag-icon:after { content: \"\\D7\"; color: #266d4d; font-size: 14px; } .multiselect__tag-icon:focus, .multiselect__tag-icon:hover { background: #369a6e; } .multiselect__tag-icon:focus:after, .multiselect__tag-icon:hover:after { color: #fff; } .multiselect__current { min-height: 40px; overflow: hidden; padding: 8px 12px 0; padding-right: 30px; white-space: nowrap; border-radius: 5px; border: 1px solid #e8e8e8; } .multiselect__current, .multiselect__select { line-height: 16px; box-sizing: border-box; display: block; margin: 0; text-decoration: none; cursor: pointer; } .multiselect__select { position: absolute; width: 40px; height: 38px; right: 1px; top: 1px; padding: 4px 8px; text-align: center; transition: transform .2s ease; } .multiselect__select:before { position: relative; right: 0; top: 65%; color: #999; margin-top: 4px; border-style: solid; border-width: 5px 5px 0; border-color: #999 transparent transparent; content: \"\"; } .multiselect__placeholder { color: #adadad; display: inline-block; margin-bottom: 10px; padding-top: 2px; } .multiselect--active .multiselect__placeholder { display: none; } .multiselect__content-wrapper { position: absolute; display: block; background: #fff; width: 100%; max-height: 240px; overflow: auto; border: 1px solid #e8e8e8; border-top: none; border-bottom-left-radius: 5px; border-bottom-right-radius: 5px; z-index: 1; -webkit-overflow-scrolling: touch; } .multiselect__content { list-style: none; display: inline-block; padding: 0; margin: 0; min-width: 100%; vertical-align: top; } .multiselect--above .multiselect__content-wrapper { bottom: 100%; border-bottom-left-radius: 0; border-bottom-right-radius: 0; border-top-left-radius: 5px; border-top-right-radius: 5px; border-bottom: none; border-top: 1px solid #e8e8e8; } .multiselect__content::webkit-scrollbar { display: none; } .multiselect__element { display: block; } .multiselect__option { display: block; padding: 12px; min-height: 40px; line-height: 16px; text-decoration: none; text-transform: none; vertical-align: middle; position: relative; cursor: pointer; white-space: nowrap; } .multiselect__option:after { top: 0; right: 0; position: absolute; line-height: 40px; padding-right: 12px; padding-left: 20px; } .multiselect__option--highlight { background: #41b883; outline: none; color: #fff; } .multiselect__option--highlight:after { content: attr(data-select); background: #41b883; color: #fff; } .multiselect__option--selected { background: #f3f3f3; color: #35495e; font-weight: 700; } .multiselect__option--selected:after { content: attr(data-selected); color: silver; } .multiselect__option--selected.multiselect__option--highlight { background: #ff6a6a; color: #fff; } .multiselect__option--selected.multiselect__option--highlight:after { background: #ff6a6a; content: attr(data-deselect); color: #fff; } .multiselect--disabled { background: #ededed; pointer-events: none; } .multiselect--disabled .multiselect__current, .multiselect--disabled .multiselect__select, .multiselect__option--disabled { background: #ededed; color: #a6a6a6; } .multiselect__option--disabled { cursor: text; pointer-events: none; } .multiselect__option--disabled.multiselect__option--highlight { background: #dedede!important; } .multiselect-enter-active, .multiselect-leave-active { transition: all .15s ease; } .multiselect-enter, .multiselect-leave-active { opacity: 0; } .multiselect__strong { margin-bottom: 8px; line-height: 20px; display: inline-block; vertical-align: top; } [dir=rtl] .multiselect { text-align: right; } [dir=rtl] .multiselect__select { right: auto; left: 1px; } [dir=rtl] .multiselect__tags { padding: 8px 8px 0 40px; } [dir=rtl] .multiselect__content { text-align: right; } [dir=rtl] .multiselect__option:after { right: auto; left: 0; } [dir=rtl] .multiselect__clear { right: auto; left: 12px; } [dir=rtl] .multiselect__spinner { right: auto; left: 1px; } @keyframes a { 0% { transform: rotate(0); } to { transform: rotate(2turn); } }@font-face { font-family: 'KaTeX_AMS'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_AMS-Regular-3d8245dcb4489694a6a263b05c1cca01.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_AMS-Regular-ac1d46d953d403677171697581a284d2.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_AMS-Regular-c67be87adba7d31c013be127b936233d.ttf) format('truetype'); font-weight: normal; font-style: normal; } @font-face { font-family: 'KaTeX_Caligraphic'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Caligraphic-Bold-970d3e76493b82fccf21ad5888ddee77.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Caligraphic-Bold-445f96a387df0d13ded71f27c608516d.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Caligraphic-Bold-3f61a84d76e80396489d32bc9dd8d444.ttf) format('truetype'); font-weight: bold; font-style: normal; } @font-face { font-family: 'KaTeX_Caligraphic'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Caligraphic-Regular-0ef0f2e356a2e1c457b6585d34edae77.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Caligraphic-Regular-74f6918c7d2b768ffd32048102bc0172.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Caligraphic-Regular-c3bc8fcec0e85a50cabf71e4e8074991.ttf) format('truetype'); font-weight: normal; font-style: normal; } @font-face { font-family: 'KaTeX_Fraktur'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Fraktur-Bold-950649ba5e5cfd37cdad74095411d350.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Fraktur-Bold-1aca7ef7f976fb54a207ffc8aa180e38.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Fraktur-Bold-e11e6bf02fc41279a540d3655abf3b07.ttf) format('truetype'); font-weight: bold; font-style: normal; } @font-face { font-family: 'KaTeX_Fraktur'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Fraktur-Regular-135ccd74931753318f6f52f3fce19018.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Fraktur-Regular-c5b430bfcb3e5423b77401afcdb69b66.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Fraktur-Regular-a9509497466d16e6b7265a223ea39093.ttf) format('truetype'); font-weight: normal; font-style: normal; } @font-face { font-family: 'KaTeX_Main'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-Bold-82bce349c8ff0927380b5177e9258ad0.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-Bold-29d4b276c622ff1d1376d9afcbd2f25a.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-Bold-db576c7d5d6eb6ebefc9b334f4140d42.ttf) format('truetype'); font-weight: bold; font-style: normal; } @font-face { font-family: 'KaTeX_Main'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-BoldItalic-13900e552dbf51aead905f897043226c.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-BoldItalic-3f3be43bbdd58a4a86c8eddd3d39a26a.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-BoldItalic-cec43f729e0e6810c3433f6020ec676e.ttf) format('truetype'); font-weight: bold; font-style: italic; } @font-face { font-family: 'KaTeX_Main'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-Italic-b488f60f79c9d1f533def644385d8219.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-Italic-f8a754484e776e94b6116dfbcb1761a7.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-Italic-85b3329fdb41fadfb0fdc01ec5290b2f.ttf) format('truetype'); font-weight: normal; font-style: italic; } @font-face { font-family: 'KaTeX_Main'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-Regular-999cd6bac6e8118065ac500d4f133c63.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-Regular-485696cf1d821baac6ae06c42e09faef.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-Regular-f4fe6dca4a5f5520ae0caab31848aae3.ttf) format('truetype'); font-weight: normal; font-style: normal; } @font-face { font-family: 'KaTeX_Math'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Math-Italic-7a31741a44e58952cb4b8a763c206fcd.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Math-Italic-8eb56b3ff5b141cd3732a24e65c2b339.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Math-Italic-10740d7488d690a743339650103f1cb3.ttf) format('truetype'); font-weight: normal; font-style: italic; } @font-face { font-family: 'KaTeX_SansSerif'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_SansSerif-Bold-0d0f967a34b828083a11bb264e578c32.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_SansSerif-Bold-99bd87431ac7ef8f27591f72d7812509.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_SansSerif-Bold-771a1f955e7ff2106402b58d1e8a1ad2.ttf) format('truetype'); font-weight: bold; font-style: normal; } @font-face { font-family: 'KaTeX_SansSerif'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_SansSerif-Italic-b1ac79b9b69c954bbeb8fc02500832e0.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_SansSerif-Italic-9c3f03ec809c6f298d716cbda8260fcb.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_SansSerif-Italic-cb729d47fbd26ff0ae62bb840085e5b5.ttf) format('truetype'); font-weight: normal; font-style: italic; } @font-face { font-family: 'KaTeX_SansSerif'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_SansSerif-Regular-23f1730fda70ec6ec6aa789979890cba.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_SansSerif-Regular-fc90839714a9e877682309c3daf7493e.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_SansSerif-Regular-43b0cb92c2405f175772931ccd68002e.ttf) format('truetype'); font-weight: normal; font-style: normal; } @font-face { font-family: 'KaTeX_Script'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Script-Regular-ae1fad1f4d1c227c9d567da8ea9f988c.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Script-Regular-60febfa114c5e32f0ce73050476aa39f.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Script-Regular-e9169ca7b32608b6235ec9ffff742a71.ttf) format('truetype'); font-weight: normal; font-style: normal; } @font-face { font-family: 'KaTeX_Size1'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size1-Regular-fda0824e8cfb676664ad063c367cfce3.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size1-Regular-1d6cf6b89f694dc76e13ecc4e8214dd2.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size1-Regular-f2e296ef7cef0f6f16912e5d171929b2.ttf) format('truetype'); font-weight: normal; font-style: normal; } @font-face { font-family: 'KaTeX_Size2'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size2-Regular-a7a0eb93afb696cb9b4efb87e6cd45a3.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size2-Regular-f48e83b7bcaa68a86a78e8edfee1a04e.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size2-Regular-0767ede65042583bcc06f09055f4d7ca.ttf) format('truetype'); font-weight: normal; font-style: normal; } @font-face { font-family: 'KaTeX_Size3'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size3-Regular-397bd6872be7adff4f000c49fa85a9c3.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size3-Regular-0387ab387ace32f15b43c3a4a39f187f.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size3-Regular-882f723427a0986846fe786bd8d6f6c7.ttf) format('truetype'); font-weight: normal; font-style: normal; } @font-face { font-family: 'KaTeX_Size4'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size4-Regular-3c14ed11dd8eea981c93bf283193856d.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size4-Regular-726db3bd435c8a6e45e44741dae67263.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size4-Regular-27901d5ce93d8971c416d9123fedb911.ttf) format('truetype'); font-weight: normal; font-style: normal; } @font-face { font-family: 'KaTeX_Typewriter'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Typewriter-Regular-895baecfbf4ef298fdfe943fb117c15e.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Typewriter-Regular-696705de367f02534e8abb38b55af067.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Typewriter-Regular-6374f53e08c02d7b9ec594e2fb0c5fe8.ttf) format('truetype'); font-weight: normal; font-style: normal; } .katex-display { display: block; margin: 1em 0; text-align: center; } .katex-display > .katex { display: inline-block; text-align: initial; } .katex { font: normal 1.21em KaTeX_Main, Times New Roman, serif; line-height: 1.2; white-space: nowrap; text-indent: 0; text-rendering: auto; } .katex * { -ms-high-contrast-adjust: none !important; } .katex .katex-html { display: inline-block; } .katex .katex-mathml { position: absolute; clip: rect(1px, 1px, 1px, 1px); padding: 0; border: 0; height: 1px; width: 1px; overflow: hidden; } .katex .base { position: relative; display: inline-block; } .katex .strut { display: inline-block; } .katex .textbf { font-weight: bold; } .katex .textit { font-style: italic; } .katex .textrm { font-family: KaTeX_Main; } .katex .textsf { font-family: KaTeX_SansSerif; } .katex .texttt { font-family: KaTeX_Typewriter; } .katex .mathit { font-family: KaTeX_Math; font-style: italic; } .katex .mathrm { font-style: normal; } .katex .mathbf { font-family: KaTeX_Main; font-weight: bold; } .katex .boldsymbol { font-family: KaTeX_Math; font-weight: bold; font-style: italic; } .katex .amsrm { font-family: KaTeX_AMS; } .katex .mathbb { font-family: KaTeX_AMS; } .katex .mathcal { font-family: KaTeX_Caligraphic; } .katex .mathfrak { font-family: KaTeX_Fraktur; } .katex .mathtt { font-family: KaTeX_Typewriter; } .katex .mathscr { font-family: KaTeX_Script; } .katex .mathsf { font-family: KaTeX_SansSerif; } .katex .mainit { font-family: KaTeX_Main; font-style: italic; } .katex .mainrm { font-family: KaTeX_Main; font-style: normal; } .katex .vlist-t { display: inline-table; table-layout: fixed; } .katex .vlist-r { display: table-row; } .katex .vlist { display: table-cell; vertical-align: bottom; position: relative; } .katex .vlist > span { display: block; height: 0; position: relative; } .katex .vlist > span > span { display: inline-block; } .katex .vlist > span > .pstrut { overflow: hidden; width: 0; } .katex .vlist-t2 { margin-right: -2px; } .katex .vlist-s { display: table-cell; vertical-align: bottom; font-size: 1px; width: 2px; } .katex .msupsub { text-align: left; } .katex .mfrac > span > span { text-align: center; } .katex .mfrac .frac-line { display: inline-block; width: 100%; } .katex .mspace { display: inline-block; } .katex .mspace.negativethinspace { margin-left: -0.16667em; } .katex .mspace.muspace { width: 0.055556em; } .katex .mspace.thinspace { width: 0.16667em; } .katex .mspace.negativemediumspace { margin-left: -0.22222em; } .katex .mspace.mediumspace { width: 0.22222em; } .katex .mspace.thickspace { width: 0.27778em; } .katex .mspace.sixmuspace { width: 0.333333em; } .katex .mspace.eightmuspace { width: 0.444444em; } .katex .mspace.enspace { width: 0.5em; } .katex .mspace.twelvemuspace { width: 0.666667em; } .katex .mspace.quad { width: 1em; } .katex .mspace.qquad { width: 2em; } .katex .llap, .katex .rlap, .katex .clap { width: 0; position: relative; } .katex .llap > .inner, .katex .rlap > .inner, .katex .clap > .inner { position: absolute; } .katex .llap > .fix, .katex .rlap > .fix, .katex .clap > .fix { display: inline-block; } .katex .llap > .inner { right: 0; } .katex .rlap > .inner, .katex .clap > .inner { left: 0; } .katex .clap > .inner > span { margin-left: -50%; margin-right: 50%; } .katex .rule { display: inline-block; border: solid 0; position: relative; } .katex .overline .overline-line, .katex .underline .underline-line { display: inline-block; width: 100%; } .katex .sqrt > .root { margin-left: 0.27777778em; margin-right: -0.55555556em; } .katex .sizing, .katex .fontsize-ensurer { display: inline-block; } .katex .sizing.reset-size1.size1, .katex .fontsize-ensurer.reset-size1.size1 { font-size: 1em; } .katex .sizing.reset-size1.size2, .katex .fontsize-ensurer.reset-size1.size2 { font-size: 1.2em; } .katex .sizing.reset-size1.size3, .katex .fontsize-ensurer.reset-size1.size3 { font-size: 1.4em; } .katex .sizing.reset-size1.size4, .katex .fontsize-ensurer.reset-size1.size4 { font-size: 1.6em; } .katex .sizing.reset-size1.size5, .katex .fontsize-ensurer.reset-size1.size5 { font-size: 1.8em; } .katex .sizing.reset-size1.size6, .katex .fontsize-ensurer.reset-size1.size6 { font-size: 2em; } .katex .sizing.reset-size1.size7, .katex .fontsize-ensurer.reset-size1.size7 { font-size: 2.4em; } .katex .sizing.reset-size1.size8, .katex .fontsize-ensurer.reset-size1.size8 { font-size: 2.88em; } .katex .sizing.reset-size1.size9, .katex .fontsize-ensurer.reset-size1.size9 { font-size: 3.456em; } .katex .sizing.reset-size1.size10, .katex .fontsize-ensurer.reset-size1.size10 { font-size: 4.148em; } .katex .sizing.reset-size1.size11, .katex .fontsize-ensurer.reset-size1.size11 { font-size: 4.976em; } .katex .sizing.reset-size2.size1, .katex .fontsize-ensurer.reset-size2.size1 { font-size: 0.83333333em; } .katex .sizing.reset-size2.size2, .katex .fontsize-ensurer.reset-size2.size2 { font-size: 1em; } .katex .sizing.reset-size2.size3, .katex .fontsize-ensurer.reset-size2.size3 { font-size: 1.16666667em; } .katex .sizing.reset-size2.size4, .katex .fontsize-ensurer.reset-size2.size4 { font-size: 1.33333333em; } .katex .sizing.reset-size2.size5, .katex .fontsize-ensurer.reset-size2.size5 { font-size: 1.5em; } .katex .sizing.reset-size2.size6, .katex .fontsize-ensurer.reset-size2.size6 { font-size: 1.66666667em; } .katex .sizing.reset-size2.size7, .katex .fontsize-ensurer.reset-size2.size7 { font-size: 2em; } .katex .sizing.reset-size2.size8, .katex .fontsize-ensurer.reset-size2.size8 { font-size: 2.4em; } .katex .sizing.reset-size2.size9, .katex .fontsize-ensurer.reset-size2.size9 { font-size: 2.88em; } .katex .sizing.reset-size2.size10, .katex .fontsize-ensurer.reset-size2.size10 { font-size: 3.45666667em; } .katex .sizing.reset-size2.size11, .katex .fontsize-ensurer.reset-size2.size11 { font-size: 4.14666667em; } .katex .sizing.reset-size3.size1, .katex .fontsize-ensurer.reset-size3.size1 { font-size: 0.71428571em; } .katex .sizing.reset-size3.size2, .katex .fontsize-ensurer.reset-size3.size2 { font-size: 0.85714286em; } .katex .sizing.reset-size3.size3, .katex .fontsize-ensurer.reset-size3.size3 { font-size: 1em; } .katex .sizing.reset-size3.size4, .katex .fontsize-ensurer.reset-size3.size4 { font-size: 1.14285714em; } .katex .sizing.reset-size3.size5, .katex .fontsize-ensurer.reset-size3.size5 { font-size: 1.28571429em; } .katex .sizing.reset-size3.size6, .katex .fontsize-ensurer.reset-size3.size6 { font-size: 1.42857143em; } .katex .sizing.reset-size3.size7, .katex .fontsize-ensurer.reset-size3.size7 { font-size: 1.71428571em; } .katex .sizing.reset-size3.size8, .katex .fontsize-ensurer.reset-size3.size8 { font-size: 2.05714286em; } .katex .sizing.reset-size3.size9, .katex .fontsize-ensurer.reset-size3.size9 { font-size: 2.46857143em; } .katex .sizing.reset-size3.size10, .katex .fontsize-ensurer.reset-size3.size10 { font-size: 2.96285714em; } .katex .sizing.reset-size3.size11, .katex .fontsize-ensurer.reset-size3.size11 { font-size: 3.55428571em; } .katex .sizing.reset-size4.size1, .katex .fontsize-ensurer.reset-size4.size1 { font-size: 0.625em; } .katex .sizing.reset-size4.size2, .katex .fontsize-ensurer.reset-size4.size2 { font-size: 0.75em; } .katex .sizing.reset-size4.size3, .katex .fontsize-ensurer.reset-size4.size3 { font-size: 0.875em; } .katex .sizing.reset-size4.size4, .katex .fontsize-ensurer.reset-size4.size4 { font-size: 1em; } .katex .sizing.reset-size4.size5, .katex .fontsize-ensurer.reset-size4.size5 { font-size: 1.125em; } .katex .sizing.reset-size4.size6, .katex .fontsize-ensurer.reset-size4.size6 { font-size: 1.25em; } .katex .sizing.reset-size4.size7, .katex .fontsize-ensurer.reset-size4.size7 { font-size: 1.5em; } .katex .sizing.reset-size4.size8, .katex .fontsize-ensurer.reset-size4.size8 { font-size: 1.8em; } .katex .sizing.reset-size4.size9, .katex .fontsize-ensurer.reset-size4.size9 { font-size: 2.16em; } .katex .sizing.reset-size4.size10, .katex .fontsize-ensurer.reset-size4.size10 { font-size: 2.5925em; } .katex .sizing.reset-size4.size11, .katex .fontsize-ensurer.reset-size4.size11 { font-size: 3.11em; } .katex .sizing.reset-size5.size1, .katex .fontsize-ensurer.reset-size5.size1 { font-size: 0.55555556em; } .katex .sizing.reset-size5.size2, .katex .fontsize-ensurer.reset-size5.size2 { font-size: 0.66666667em; } .katex .sizing.reset-size5.size3, .katex .fontsize-ensurer.reset-size5.size3 { font-size: 0.77777778em; } .katex .sizing.reset-size5.size4, .katex .fontsize-ensurer.reset-size5.size4 { font-size: 0.88888889em; } .katex .sizing.reset-size5.size5, .katex .fontsize-ensurer.reset-size5.size5 { font-size: 1em; } .katex .sizing.reset-size5.size6, .katex .fontsize-ensurer.reset-size5.size6 { font-size: 1.11111111em; } .katex .sizing.reset-size5.size7, .katex .fontsize-ensurer.reset-size5.size7 { font-size: 1.33333333em; } .katex .sizing.reset-size5.size8, .katex .fontsize-ensurer.reset-size5.size8 { font-size: 1.6em; } .katex .sizing.reset-size5.size9, .katex .fontsize-ensurer.reset-size5.size9 { font-size: 1.92em; } .katex .sizing.reset-size5.size10, .katex .fontsize-ensurer.reset-size5.size10 { font-size: 2.30444444em; } .katex .sizing.reset-size5.size11, .katex .fontsize-ensurer.reset-size5.size11 { font-size: 2.76444444em; } .katex .sizing.reset-size6.size1, .katex .fontsize-ensurer.reset-size6.size1 { font-size: 0.5em; } .katex .sizing.reset-size6.size2, .katex .fontsize-ensurer.reset-size6.size2 { font-size: 0.6em; } .katex .sizing.reset-size6.size3, .katex .fontsize-ensurer.reset-size6.size3 { font-size: 0.7em; } .katex .sizing.reset-size6.size4, .katex .fontsize-ensurer.reset-size6.size4 { font-size: 0.8em; } .katex .sizing.reset-size6.size5, .katex .fontsize-ensurer.reset-size6.size5 { font-size: 0.9em; } .katex .sizing.reset-size6.size6, .katex .fontsize-ensurer.reset-size6.size6 { font-size: 1em; } .katex .sizing.reset-size6.size7, .katex .fontsize-ensurer.reset-size6.size7 { font-size: 1.2em; } .katex .sizing.reset-size6.size8, .katex .fontsize-ensurer.reset-size6.size8 { font-size: 1.44em; } .katex .sizing.reset-size6.size9, .katex .fontsize-ensurer.reset-size6.size9 { font-size: 1.728em; } .katex .sizing.reset-size6.size10, .katex .fontsize-ensurer.reset-size6.size10 { font-size: 2.074em; } .katex .sizing.reset-size6.size11, .katex .fontsize-ensurer.reset-size6.size11 { font-size: 2.488em; } .katex .sizing.reset-size7.size1, .katex .fontsize-ensurer.reset-size7.size1 { font-size: 0.41666667em; } .katex .sizing.reset-size7.size2, .katex .fontsize-ensurer.reset-size7.size2 { font-size: 0.5em; } .katex .sizing.reset-size7.size3, .katex .fontsize-ensurer.reset-size7.size3 { font-size: 0.58333333em; } .katex .sizing.reset-size7.size4, .katex .fontsize-ensurer.reset-size7.size4 { font-size: 0.66666667em; } .katex .sizing.reset-size7.size5, .katex .fontsize-ensurer.reset-size7.size5 { font-size: 0.75em; } .katex .sizing.reset-size7.size6, .katex .fontsize-ensurer.reset-size7.size6 { font-size: 0.83333333em; } .katex .sizing.reset-size7.size7, .katex .fontsize-ensurer.reset-size7.size7 { font-size: 1em; } .katex .sizing.reset-size7.size8, .katex .fontsize-ensurer.reset-size7.size8 { font-size: 1.2em; } .katex .sizing.reset-size7.size9, .katex .fontsize-ensurer.reset-size7.size9 { font-size: 1.44em; } .katex .sizing.reset-size7.size10, .katex .fontsize-ensurer.reset-size7.size10 { font-size: 1.72833333em; } .katex .sizing.reset-size7.size11, .katex .fontsize-ensurer.reset-size7.size11 { font-size: 2.07333333em; } .katex .sizing.reset-size8.size1, .katex .fontsize-ensurer.reset-size8.size1 { font-size: 0.34722222em; } .katex .sizing.reset-size8.size2, .katex .fontsize-ensurer.reset-size8.size2 { font-size: 0.41666667em; } .katex .sizing.reset-size8.size3, .katex .fontsize-ensurer.reset-size8.size3 { font-size: 0.48611111em; } .katex .sizing.reset-size8.size4, .katex .fontsize-ensurer.reset-size8.size4 { font-size: 0.55555556em; } .katex .sizing.reset-size8.size5, .katex .fontsize-ensurer.reset-size8.size5 { font-size: 0.625em; } .katex .sizing.reset-size8.size6, .katex .fontsize-ensurer.reset-size8.size6 { font-size: 0.69444444em; } .katex .sizing.reset-size8.size7, .katex .fontsize-ensurer.reset-size8.size7 { font-size: 0.83333333em; } .katex .sizing.reset-size8.size8, .katex .fontsize-ensurer.reset-size8.size8 { font-size: 1em; } .katex .sizing.reset-size8.size9, .katex .fontsize-ensurer.reset-size8.size9 { font-size: 1.2em; } .katex .sizing.reset-size8.size10, .katex .fontsize-ensurer.reset-size8.size10 { font-size: 1.44027778em; } .katex .sizing.reset-size8.size11, .katex .fontsize-ensurer.reset-size8.size11 { font-size: 1.72777778em; } .katex .sizing.reset-size9.size1, .katex .fontsize-ensurer.reset-size9.size1 { font-size: 0.28935185em; } .katex .sizing.reset-size9.size2, .katex .fontsize-ensurer.reset-size9.size2 { font-size: 0.34722222em; } .katex .sizing.reset-size9.size3, .katex .fontsize-ensurer.reset-size9.size3 { font-size: 0.40509259em; } .katex .sizing.reset-size9.size4, .katex .fontsize-ensurer.reset-size9.size4 { font-size: 0.46296296em; } .katex .sizing.reset-size9.size5, .katex .fontsize-ensurer.reset-size9.size5 { font-size: 0.52083333em; } .katex .sizing.reset-size9.size6, .katex .fontsize-ensurer.reset-size9.size6 { font-size: 0.5787037em; } .katex .sizing.reset-size9.size7, .katex .fontsize-ensurer.reset-size9.size7 { font-size: 0.69444444em; } .katex .sizing.reset-size9.size8, .katex .fontsize-ensurer.reset-size9.size8 { font-size: 0.83333333em; } .katex .sizing.reset-size9.size9, .katex .fontsize-ensurer.reset-size9.size9 { font-size: 1em; } .katex .sizing.reset-size9.size10, .katex .fontsize-ensurer.reset-size9.size10 { font-size: 1.20023148em; } .katex .sizing.reset-size9.size11, .katex .fontsize-ensurer.reset-size9.size11 { font-size: 1.43981481em; } .katex .sizing.reset-size10.size1, .katex .fontsize-ensurer.reset-size10.size1 { font-size: 0.24108004em; } .katex .sizing.reset-size10.size2, .katex .fontsize-ensurer.reset-size10.size2 { font-size: 0.28929605em; } .katex .sizing.reset-size10.size3, .katex .fontsize-ensurer.reset-size10.size3 { font-size: 0.33751205em; } .katex .sizing.reset-size10.size4, .katex .fontsize-ensurer.reset-size10.size4 { font-size: 0.38572806em; } .katex .sizing.reset-size10.size5, .katex .fontsize-ensurer.reset-size10.size5 { font-size: 0.43394407em; } .katex .sizing.reset-size10.size6, .katex .fontsize-ensurer.reset-size10.size6 { font-size: 0.48216008em; } .katex .sizing.reset-size10.size7, .katex .fontsize-ensurer.reset-size10.size7 { font-size: 0.57859209em; } .katex .sizing.reset-size10.size8, .katex .fontsize-ensurer.reset-size10.size8 { font-size: 0.69431051em; } .katex .sizing.reset-size10.size9, .katex .fontsize-ensurer.reset-size10.size9 { font-size: 0.83317261em; } .katex .sizing.reset-size10.size10, .katex .fontsize-ensurer.reset-size10.size10 { font-size: 1em; } .katex .sizing.reset-size10.size11, .katex .fontsize-ensurer.reset-size10.size11 { font-size: 1.19961427em; } .katex .sizing.reset-size11.size1, .katex .fontsize-ensurer.reset-size11.size1 { font-size: 0.20096463em; } .katex .sizing.reset-size11.size2, .katex .fontsize-ensurer.reset-size11.size2 { font-size: 0.24115756em; } .katex .sizing.reset-size11.size3, .katex .fontsize-ensurer.reset-size11.size3 { font-size: 0.28135048em; } .katex .sizing.reset-size11.size4, .katex .fontsize-ensurer.reset-size11.size4 { font-size: 0.32154341em; } .katex .sizing.reset-size11.size5, .katex .fontsize-ensurer.reset-size11.size5 { font-size: 0.36173633em; } .katex .sizing.reset-size11.size6, .katex .fontsize-ensurer.reset-size11.size6 { font-size: 0.40192926em; } .katex .sizing.reset-size11.size7, .katex .fontsize-ensurer.reset-size11.size7 { font-size: 0.48231511em; } .katex .sizing.reset-size11.size8, .katex .fontsize-ensurer.reset-size11.size8 { font-size: 0.57877814em; } .katex .sizing.reset-size11.size9, .katex .fontsize-ensurer.reset-size11.size9 { font-size: 0.69453376em; } .katex .sizing.reset-size11.size10, .katex .fontsize-ensurer.reset-size11.size10 { font-size: 0.83360129em; } .katex .sizing.reset-size11.size11, .katex .fontsize-ensurer.reset-size11.size11 { font-size: 1em; } .katex .delimsizing.size1 { font-family: KaTeX_Size1; } .katex .delimsizing.size2 { font-family: KaTeX_Size2; } .katex .delimsizing.size3 { font-family: KaTeX_Size3; } .katex .delimsizing.size4 { font-family: KaTeX_Size4; } .katex .delimsizing.mult .delim-size1 > span { font-family: KaTeX_Size1; } .katex .delimsizing.mult .delim-size4 > span { font-family: KaTeX_Size4; } .katex .nulldelimiter { display: inline-block; width: 0.12em; } .katex .delimcenter { position: relative; } .katex .op-symbol { position: relative; } .katex .op-symbol.small-op { font-family: KaTeX_Size1; } .katex .op-symbol.large-op { font-family: KaTeX_Size2; } .katex .op-limits > .vlist-t { text-align: center; } .katex .accent > .vlist-t { text-align: center; } .katex .accent .accent-body { width: 0; position: relative; } .katex .overlay { display: block; } .katex .mtable .vertical-separator { display: inline-block; margin: 0 -0.125em; width: 0.25em; } .katex .mtable .arraycolsep { display: inline-block; } .katex .mtable .col-align-c > .vlist-t { text-align: center; } .katex .mtable .col-align-l > .vlist-t { text-align: left; } .katex .mtable .col-align-r > .vlist-t { text-align: right; } .katex .svg-align { text-align: left; } .katex svg { display: block; position: absolute; width: 100%; fill: currentColor; stroke: currentColor; fill-rule: nonzero; fill-opacity: 1; stroke-width: 1; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-dasharray: none; stroke-dashoffset: 0; stroke-opacity: 1; } .katex svg path { stroke: none; } .katex .vertical-separator svg { width: 0.25em; } .katex .stretchy { width: 100%; display: block; } .katex .stretchy:before, .katex .stretchy:after { content: \"\"; } .katex .hide-tail { width: 100%; position: relative; overflow: hidden; } .katex .halfarrow-left { position: absolute; left: 0; width: 50.1%; overflow: hidden; } .katex .halfarrow-right { position: absolute; right: 0; width: 50%; overflow: hidden; } .katex .brace-left { position: absolute; left: 0; width: 25.1%; overflow: hidden; } .katex .brace-center { position: absolute; left: 25%; width: 50%; overflow: hidden; } .katex .brace-right { position: absolute; right: 0; width: 25.1%; overflow: hidden; } .katex .x-arrow-pad { padding: 0 0.5em; } .katex .x-arrow, .katex .mover, .katex .munder { text-align: center; } .katex .boxpad { padding: 0 0.3em 0 0.3em; } .katex .fbox { box-sizing: border-box; border: 0.04em solid black; } .katex .fcolorbox { box-sizing: border-box; border: 0.04em solid; } .katex .cancel-pad { padding: 0 0.2em 0 0.2em; } .katex .mord + .cancel-lap, .katex .mbin + .cancel-lap { margin-left: -0.2em; } .katex .cancel-lap + .mord, .katex .cancel-lap + .mbin, .katex .cancel-lap + .msupsub { margin-left: -0.2em; } .katex .sout { border-bottom-style: solid; border-bottom-width: 0.08em; } #free-reward-panel .reward-users-modal main { padding: 0; } @charset \"UTF-8\"; /* * 变量 */ .reward-note-modal .v-modal { width: 620px; text-align: center; } .reward-note-modal .v-modal form { margin: 0 auto 25px auto; padding: 0 40px; } .reward-note-modal .v-modal .reward-intro { margin-top: 20px; margin-bottom: 20px; font-size: 16px; } .reward-note-modal .v-modal .reward-intro .avatar { cursor: default !important; width: 36px; height: 36px; margin-right: 10px; display: inline-block; } .reward-note-modal .v-modal .reward-intro .intro { margin-right: 5px; font-weight: bold; vertical-align: middle; } .reward-note-modal .v-modal .reward-intro i { color: #EA6F5A; vertical-align: middle; } .reward-note-modal .v-modal .main-inputs { margin: 25px 0; } .reward-note-modal .v-modal .main-inputs .amount-group { margin: 0 -5px; } .reward-note-modal .v-modal .main-inputs .amount-group input { display: none; } .reward-note-modal .v-modal .main-inputs .amount-group input:checked + .option { color: #EA6F5A; border-color: #EA6F5A; } .reward-note-modal .v-modal .main-inputs .amount-group .custom-amount:checked + .option .custom-text { opacity: 0; } .reward-note-modal .v-modal .main-inputs .amount-group .custom-amount:checked + .option .custom-amount-input { opacity: 1; } .reward-note-modal .v-modal .main-inputs .amount-group .option { position: relative; margin: 0 5px 15px; width: 156px; height: 56px; line-height: 54px; border: 1px solid #E6E6E6; border-radius: 4px; font-weight: normal; color: #999999; cursor: pointer; } .reward-note-modal .v-modal .main-inputs .amount-group .option i { font-size: 16px; vertical-align: middle; } .reward-note-modal .v-modal .main-inputs .amount-group .option .amount { font-size: 28px; vertical-align: middle; } .reward-note-modal .v-modal .main-inputs .amount-group .option .piece { font-size: 13px; vertical-align: sub; } .reward-note-modal .v-modal .main-inputs .amount-group .option .custom-amount-input { position: absolute; top: 0; z-index: -1; width: 100%; opacity: 0; } .reward-note-modal .v-modal .main-inputs .amount-group .option .custom-amount-input i { position: absolute; top: 0; left: 10px; } .reward-note-modal .v-modal .main-inputs .amount-group .option .custom-amount-input .piece { position: absolute; top: 4px; right: 10px; } .reward-note-modal .v-modal .main-inputs .amount-group .option .custom-amount-input input { display: block; margin: 0 auto; width: 80px; height: 54px; line-height: 54px; border: none; font-size: 28px; text-align: center; background: transparent; -moz-appearance: textfield; } .reward-note-modal .v-modal .main-inputs .amount-group .option .custom-amount-input input::-webkit-outer-spin-button, .reward-note-modal .v-modal .main-inputs .amount-group .option .custom-amount-input input::-webkit-inner-spin-button { -webkit-appearance: none !important; } .reward-note-modal .v-modal .main-inputs .message { padding: 15px 20px; margin-bottom: 0; font-size: 14px; border: 1px solid #E6E6E6; color: #333333; border-radius: 4px; background-color: rgba(180, 180, 180, 0.1); } .reward-note-modal .v-modal .main-inputs .message textarea { width: 100%; height: 44px; padding: 0; margin: 0; resize: none; background: none !important; border: none !important; -webkit-box-sizing: border-box; box-sizing: border-box; -webkit-box-shadow: none; box-shadow: none; } .reward-note-modal .v-modal .main-inputs .message textarea:focus { outline: none; } .reward-note-modal .v-modal .reward-info .amount { font-size: 28px; font-weight: bold; color: #EA6F5A; } .reward-note-modal .v-modal .reward-info .pay-method { font-size: 14px; } .reward-note-modal .v-modal .reward-info .pay-method a { color: #3194D0; } .reward-note-modal .v-modal .choose-pay { margin: 0 -5px; } .reward-note-modal .v-modal .choose-pay input { display: none; } .reward-note-modal .v-modal .choose-pay input:checked + .option { color: #EA6F5A; border-color: #EA6F5A; } .reward-note-modal .v-modal .choose-pay .option { margin: 20px 5px 10px; width: 156px; height: 56px; line-height: 54px; text-align: center; border: 1px solid #E6E6E6; border-radius: 4px; cursor: pointer; } .reward-note-modal .v-modal .choose-pay .option img { height: 30px; } .reward-note-modal .v-modal .choose-pay .option img.day.alipay, .reward-note-modal .v-modal .choose-pay .option img.night.alipay { min-width: 85px; } .reward-note-modal .v-modal .choose-pay .option img.day.wechat, .reward-note-modal .v-modal .choose-pay .option img.night.wechat { min-width: 112px; } .reward-note-modal .v-modal .choose-pay .option img.night { display: none; } .reward-note-modal .v-modal .choose-pay .tooltip { width: 230px; } .reward-note-modal .v-modal .modal-footer { padding: 0 15px 20px; border: none; background-color: transparent; text-align: center; } .reward-note-modal .v-modal .modal-footer .btn { padding: 8px 45px; font-size: 24px; } .reward-note-modal .v-modal .btn-pay { padding: 8px 25px; font-size: 16px; color: #ffffff; background-color: #F5A623; } .weixin-pay, .success-pay { text-align: center; } .weixin-pay .v-modal, .success-pay .v-modal { width: 350px; } .weixin-pay .ic-successed, .success-pay .ic-successed { font-size: 60px; color: #3db922; } .weixin-pay h2, .weixin-pay h3, .success-pay h2, .success-pay h3 { margin-bottom: 20px; color: #333333; } .weixin-pay h2, .success-pay h2 { margin: 0 0 40px 0; font-size: 24px; } .weixin-pay .bind-text, .success-pay .bind-text { position: relative; margin-bottom: 30px; font-size: 14px; color: #999999; } .weixin-pay .bind-text:before, .weixin-pay .bind-text:after, .success-pay .bind-text:before, .success-pay .bind-text:after { content: \"\"; border-top: 1px solid #999; display: block; position: absolute; width: 40px; top: 8px; } .weixin-pay .bind-text:before, .success-pay .bind-text:before { left: 30px; } .weixin-pay .bind-text:after, .success-pay .bind-text:after { right: 30px; } .weixin-pay .share-bind, .success-pay .share-bind { display: block; margin-bottom: 30px; } .weixin-pay .share-bind i, .success-pay .share-bind i { margin-right: 4px; font-size: 22px; vertical-align: middle; } .weixin-pay .share-bind.wechat i, .success-pay .share-bind.wechat i { color: #00BB29; } .weixin-pay .share-bind.weibo i, .success-pay .share-bind.weibo i { color: #E05244; } .weixin-pay .wx-qr-code, .success-pay .wx-qr-code { display: inline-block; } .weixin-pay .wx-qr-code img, .success-pay .wx-qr-code img { margin: 0 auto; padding: 10px; width: 200px; background-color: #ffffff; } .weixin-pay .pay-amount, .success-pay .pay-amount { margin: 20px 0; color: #787878; } .weixin-pay .pay-amount span, .success-pay .pay-amount span { color: #F5A623; } @charset \"UTF-8\"; /* * 变量 */ .v-modal-wrap { position: fixed; left: 0; top: 0; right: 0; bottom: 0; z-index: 9999; background-color: transparent; } .v-modal-wrap.modal-leave-active { -webkit-transition: opacity 0.3s; -o-transition: opacity 0.3s; transition: opacity 0.3s; } .v-modal-wrap.modal-enter-active .v-modal-mask, .v-modal-wrap.modal-leave-active .v-modal-mask { opacity: 0; } .v-modal-wrap.modal-enter-active .v-modal, .v-modal-wrap.modal-leave-active .v-modal { -webkit-transform: translate(-50%, -70%); -ms-transform: translate(-50%, -70%); transform: translate(-50%, -70%); opacity: 0; } .v-modal-wrap .v-modal-mask { background-color: rgba(255, 255, 255, 0.7); position: absolute; left: 0; right: 0; top: 0; bottom: 0; -webkit-transition: opacity 0.3s; -o-transition: opacity 0.3s; transition: opacity 0.3s; opacity: 1; } .v-modal-wrap .v-modal { position: absolute; left: 50%; top: 50%; -webkit-transform: translate(-50%, -50%); -ms-transform: translate(-50%, -50%); transform: translate(-50%, -50%); border-radius: 6px; border: 1px solid rgba(0, 0, 0, 0.1); background-color: #fff; -webkit-box-shadow: 0 5px 25px rgba(0, 0, 0, 0.1); box-shadow: 0 5px 25px rgba(0, 0, 0, 0.1); -webkit-transition: opacity 0.3s, -webkit-transform 0.3s; transition: opacity 0.3s, -webkit-transform 0.3s; -o-transition: opacity 0.3s, transform 0.3s; transition: opacity 0.3s, transform 0.3s; transition: opacity 0.3s, transform 0.3s, -webkit-transform 0.3s; opacity: 1; display: -webkit-box; display: -webkit-flex; display: -ms-flexbox; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; -webkit-flex-direction: column; -ms-flex-direction: column; flex-direction: column; overflow: hidden; } .v-modal-wrap .v-modal > header:before, .v-modal-wrap .v-modal > header:after, .v-modal-wrap .v-modal > main:before, .v-modal-wrap .v-modal > main:after, .v-modal-wrap .v-modal > footer:before, .v-modal-wrap .v-modal > footer:after { content: ''; clear: both; display: table; } .v-modal-wrap .v-modal > header { padding: 20px; border-bottom: 1px solid #F0F0F0; } .v-modal-wrap .v-modal > header h4 { margin: 0; color: #333; text-align: left; } .v-modal-wrap .v-modal .close { position: absolute; right: 16px; top: 20px; font-size: 26px; line-height: 20px; color: rgba(0, 0, 0, 0.8); } .v-modal-wrap .v-modal .close:hover { color: #000000; } .v-modal-wrap .v-modal > main { padding: 20px 20px 20px 20px; font-size: 15px; color: #333; -webkit-box-flex: 1; -webkit-flex-grow: 1; -ms-flex-positive: 1; flex-grow: 1; overflow-x: hidden; overflow-y: auto; } .v-modal-wrap .v-modal > footer { padding: 20px; background-color: #fff; } .v-modal-wrap .v-modal > footer button { padding: 0; margin: 0; background-color: transparent; border: 0; float: right; } .v-modal-wrap .v-modal > footer button:focus { outline: 0; } .v-modal-wrap .v-modal > footer .submit { padding: 4px 12px; border: 1px solid; border-radius: 20px; } .v-modal-wrap .v-modal > footer .cancel { margin-top: 5px; } .v-modal-wrap .v-modal > footer .cancel:hover { color: #333333; } .reader-night-mode .v-modal-wrap .v-modal-mask { background-color: rgba(63, 63, 63, 0.7); } .reader-night-mode .v-modal-wrap .v-modal { background-color: #3f3f3f; } .reader-night-mode .v-modal-wrap .v-modal header { border-color: #2F2F2F; } .reader-night-mode .v-modal-wrap .v-modal header h4 { color: #C8C8C8; } .reader-night-mode .v-modal-wrap .v-modal .close { color: #C8C8C8; } .reader-night-mode .v-modal-wrap .v-modal .close:hover { color: #ffffff; } .reader-night-mode .v-modal-wrap .v-modal main { color: #C8C8C8; } .reader-night-mode .v-modal-wrap .v-modal footer { background-color: #3f3f3f; } .reader-night-mode .v-modal-wrap .v-modal footer .cancel:hover { color: #C8C8C8; } @charset \"UTF-8\"; /* * 变量 */ .like[data-v-6ddd02c6] { display: inline-block; } .like .like-group[data-v-6ddd02c6] { position: relative; padding: 13px 0 15px 0; font-size: 0; border: 1px solid #EA6F5A; border-radius: 40px; } .like .like-group[data-v-6ddd02c6]:hover { background-color: rgba(236, 97, 73, 0.05); } .like .like-group .btn-like[data-v-6ddd02c6] { display: inline-block; font-size: 19px; } .like .like-group .btn-like[data-v-6ddd02c6]:before { content: ''; position: absolute; left: 12px; top: 2px; width: 50px; height: 50px; background-image: url(//cdn2.jianshu.io/assets/web/like_animation_steps-62a00a7b52377d3069927cdb8e61fd34.png); background-position: left; background-repeat: no-repeat; background-size: 1000px 50px; } .like .like-group .btn-like a[data-v-6ddd02c6] { position: relative; padding: 18px 30px 18px 55px; color: #EA6F5A; } .like .like-group .modal-wrap[data-v-6ddd02c6] { font-size: 18px; border-left: 1px solid rgba(236, 97, 73, 0.4); display: inline-block; margin-left: -15px; } .like .like-group .modal-wrap a[data-v-6ddd02c6] { color: #EA6F5A; padding: 18px 26px 18px 18px; } .like .like-group.like-animation[data-v-6ddd02c6], .like .like-group.active[data-v-6ddd02c6] { background-color: #EA6F5A; } .like .like-group.like-animation .btn-like a[data-v-6ddd02c6], .like .like-group.active .btn-like a[data-v-6ddd02c6] { color: white; } .like .like-group.like-animation .modal-wrap[data-v-6ddd02c6], .like .like-group.active .modal-wrap[data-v-6ddd02c6] { border-left: 1px solid white; } .like .like-group.like-animation .modal-wrap a[data-v-6ddd02c6], .like .like-group.active .modal-wrap a[data-v-6ddd02c6] { color: white; } .like .like-group.like-animation .btn-like[data-v-6ddd02c6]:before { -webkit-animation: likeBlast-data-v-6ddd02c6 0.6s 1 steps(19); animation: likeBlast-data-v-6ddd02c6 0.6s 1 steps(19); background-position: right; } @-webkit-keyframes likeBlast { 0% { background-position: left; } 100% { background-position: right; } } @keyframes likeBlast-data-v-6ddd02c6 { 0% { background-position: left; } 100% { background-position: right; } } .like .like-group.active .btn-like[data-v-6ddd02c6]:before { background-position: right; } @charset \"UTF-8\"; /* * 变量 */ .main { position: relative; margin: 0 auto; padding: 0 0 30px 0; width: 620px; } .main .title { padding-left: 8px; border-left: 3px solid #EA6F5A; line-height: 1; font-size: 15px; } .main .collection-settings { position: absolute; top: 2px; right: 0; font-size: 13px; color: #A0A0A0; } .main .collection-settings span { padding-left: 4px; } .main .include-collection { width: 100%; padding-top: 20px; display: -webkit-box; display: -webkit-flex; display: -ms-flexbox; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; -webkit-flex-direction: row; -ms-flex-direction: row; flex-direction: row; -webkit-box-pack: start; -webkit-justify-content: flex-start; -ms-flex-pack: start; justify-content: flex-start; -webkit-box-align: center; -webkit-align-items: center; -ms-flex-align: center; align-items: center; -webkit-flex-wrap: wrap; -ms-flex-wrap: wrap; flex-wrap: wrap; } .main .include-collection .item { display: inline-block; margin: 0 12px 12px 0; min-height: 32px; background-color: white; border: 1px solid #DCDCDC; border-radius: 4px; vertical-align: top; overflow: hidden; } .main .include-collection .item img { width: 32px; height: 32px; } .main .include-collection .item .name { display: inline-block; padding: 0 10px; font-size: 14px; } .main .include-collection .add-collection-wrap { margin: 0 12px 12px 0; } .main .include-collection .add-collection { padding: 8px 12px; font-size: 14px; border: 1px solid #DCDCDC; border-radius: 4px; } .main .include-collection .add-collection i { margin-right: 4px; color: #969696; } .main .recommend-note a { position: relative; margin: 20px 2px 0 0; width: 200px; height: 160px; display: inline-block; } .main .recommend-note a:after { content: \"\"; position: absolute; width: 200px; height: 160px; border-radius: 0 0 4px 4px; -webkit-box-shadow: inset 0px -80px 50px -22px rgba(0, 0, 0, 0.6); box-shadow: inset 0px -80px 50px -22px rgba(0, 0, 0, 0.6); top: 0; left: 0; z-index: 1; } .main .recommend-note .name { position: absolute; bottom: 40px; left: 10px; right: 10px; font-size: 17px; font-weight: bold; color: #ffffff; z-index: 2; } .main .recommend-note .author { position: absolute; bottom: 10px; left: 10px; right: 10px; z-index: 2; } .main .recommend-note .avatar { width: 20px; height: 20px; display: inline-block; } .main .recommend-note .avatar img { border-radius: 50%; } .main .recommend-note .author-name { font-size: 12px; color: #ffffff; display: inline-block; vertical-align: -1px; } .main .show-more { margin: 0 12px 12px 0; font-size: 14px; color: #A0A0A0; } #featured-comment-list { margin-top: 30px; margin-bottom: -15px; } @charset \"UTF-8\"; /* * 变量 */ .pc-bind-phone-modal .modal-content, .pc-bind-phone-modal .modal-body { overflow: visible; } .pc-bind-phone-modal .dropdown-menu { max-height: 300px; overflow: auto; } .pc-bind-phone-modal .dropdown-menu .tag { background-color: #efefef; color: #4A4A4A; height: 28px; line-height: 28px; padding-left: 25px; font-size: 12px; } .reader-night-mode .pc-bind-phone-modal .dropdown-menu .tag { background-color: #2F2F2F; color: #999999; } @charset \"UTF-8\"; /* * 变量 */ .tips-card-loading[data-v-f3bf5228], .tips-card[data-v-f3bf5228] { width: 460px; position: relative; left: 0; top: 0; border-radius: 6px; -webkit-box-sizing: border-box; box-sizing: border-box; background-color: #ffffff; -webkit-box-shadow: 0 5px 25px rgba(0, 0, 0, 0.1); box-shadow: 0 5px 25px rgba(0, 0, 0, 0.1); border: 1px solid #d9d9d9; } .tips-card-loading[data-v-f3bf5228] { height: 200px; display: -webkit-box; display: -webkit-flex; display: -ms-flexbox; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; -webkit-flex-direction: row; -ms-flex-direction: row; flex-direction: row; -webkit-box-pack: center; -webkit-justify-content: center; -ms-flex-pack: center; justify-content: center; -webkit-box-align: center; -webkit-align-items: center; -ms-flex-align: center; align-items: center; position: relative; } .tips-card-loading div[data-v-f3bf5228] { background-color: #EAEAEA; } .tips-card-loading .avatar[data-v-f3bf5228] { width: 72px !important; height: 72px !important; border-radius: 50%; position: absolute; left: 20px; top: 20px; } .tips-card-loading .name[data-v-f3bf5228] { width: 120px; height: 20px; position: absolute; left: 110px; top: 31px; } .tips-card-loading .content[data-v-f3bf5228] { position: absolute; left: 110px; top: 62px; width: 238px; height: 39.2px; background-color: transparent; } .tips-card-loading .content .text[data-v-f3bf5228], .tips-card-loading .content .text-delay[data-v-f3bf5228] { height: 14px; position: absolute; left: 0; width: 100%; } .tips-card-loading .content .text[data-v-f3bf5228] { top: 2px; -webkit-animation: loading-data-v-f3bf5228 1s ease-in-out infinite; animation: loading-data-v-f3bf5228 1s ease-in-out infinite; } .tips-card-loading .content .text-delay[data-v-f3bf5228] { bottom: 3px; -webkit-animation: loading-data-v-f3bf5228 1s ease-in-out -0.5s infinite; animation: loading-data-v-f3bf5228 1s ease-in-out -0.5s infinite; } @keyframes loading-data-v-f3bf5228 { 0% { width: 60%; } 50% { width: 100%; } 100% { width: 60%; } } @-webkit-keyframes loading { 0% { width: 60%; } 50% { width: 100%; } 100% { width: 60%; } } .tips-card-loading .meta[data-v-f3bf5228] { width: 30px; height: 42px; position: absolute; bottom: 20px; background-color: transparent; } .tips-card-loading .meta.meta-1[data-v-f3bf5228] { left: 30px; } .tips-card-loading .meta.meta-2[data-v-f3bf5228] { left: 90px; } .tips-card-loading .meta.meta-3[data-v-f3bf5228] { left: 150px; } .tips-card-loading .meta .count[data-v-f3bf5228], .tips-card-loading .meta .type[data-v-f3bf5228] { position: absolute; } .tips-card-loading .meta .count[data-v-f3bf5228] { left: -5px; top: 6px; height: 18px; width: 40px; } .tips-card-loading .meta .type[data-v-f3bf5228] { left: 1px; bottom: 2px; height: 13px; width: 28px; } .tips-card-loading .button[data-v-f3bf5228] { position: absolute; bottom: 17px; width: 90px; height: 40px; border-radius: 40px; } .tips-card-loading .message[data-v-f3bf5228] { right: 120px; } .tips-card-loading .follow[data-v-f3bf5228] { right: 17px; } .tips-card[data-v-f3bf5228] { z-index: 10; } .tips-card .card-content[data-v-f3bf5228] { padding: 20px 20px 0 20px; } .tips-card .card-content .summary[data-v-f3bf5228] { padding: 8px 0 20px 90px; min-height: 92px; position: relative; } .tips-card .card-content .summary .avatar[data-v-f3bf5228] { position: absolute; left: 0; top: 0; width: 72px; height: 72px; cursor: pointer; border-radius: 50%; background-color: #EAEAEA; background-position: center; background-repeat: no-repeat; background-size: cover; } .tips-card .card-content .summary .name[data-v-f3bf5228] { height: 26px; margin-right: 3px; margin-bottom: 8px; display: -webkit-box; display: -webkit-flex; display: -ms-flexbox; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; -webkit-flex-direction: row; -ms-flex-direction: row; flex-direction: row; -webkit-box-pack: start; -webkit-justify-content: flex-start; -ms-flex-pack: start; justify-content: flex-start; -webkit-box-align: center; -webkit-align-items: center; -ms-flex-align: center; align-items: center; } .tips-card .card-content .summary .name .nickname[data-v-f3bf5228] { color: #333333; font-size: 19px; font-weight: bold; overflow: hidden; -o-text-overflow: ellipsis; text-overflow: ellipsis; white-space: nowrap; cursor: pointer; } .tips-card .card-content .summary .name .sex[data-v-f3bf5228], .tips-card .card-content .summary .name .badge[data-v-f3bf5228] { -webkit-flex-shrink: 0; -ms-flex-negative: 0; flex-shrink: 0; display: inline-block; } .tips-card .card-content .summary .name .sex[data-v-f3bf5228] { font-size: 19px; width: 19px; margin: 0 4px; } .tips-card .card-content .summary .intro[data-v-f3bf5228] { overflow: hidden; -o-text-overflow: ellipsis; text-overflow: ellipsis; display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; margin-bottom: 12px; font-size: 14px; line-height: 1.5; color: #333333; } .tips-card .card-content .summary .intro.block[data-v-f3bf5228] { color: #999999; } .tips-card .card-content .summary .list .item[data-v-f3bf5228] { display: block; margin-bottom: 5px; font-size: 13px; color: #999999; cursor: pointer; overflow: hidden; -o-text-overflow: ellipsis; text-overflow: ellipsis; white-space: nowrap; } .tips-card .card-content .summary .list .item i[data-v-f3bf5228] { margin-right: 2px; } .tips-card .card-footer[data-v-f3bf5228] { border-top: 1px solid #F0F0F0; padding: 15px; display: -webkit-box; display: -webkit-flex; display: -ms-flexbox; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; -webkit-flex-direction: row; -ms-flex-direction: row; flex-direction: row; -webkit-box-pack: justify; -webkit-justify-content: space-between; -ms-flex-pack: justify; justify-content: space-between; -webkit-box-align: center; -webkit-align-items: center; -ms-flex-align: center; align-items: center; overflow: hidden; _zoom: 1; } .tips-card .card-footer .profile[data-v-f3bf5228] { width: 198px; overflow: hidden; _zoom: 1; float: left; } .tips-card .card-footer .profile div[data-v-f3bf5228] { float: left; width: 60px; height: 44px; display: -webkit-box; display: -webkit-flex; display: -ms-flexbox; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; -webkit-flex-direction: column; -ms-flex-direction: column; flex-direction: column; -webkit-box-pack: center; -webkit-justify-content: center; -ms-flex-pack: center; justify-content: center; -webkit-box-align: center; -webkit-align-items: center; -ms-flex-align: center; align-items: center; } .tips-card .card-footer .profile div span[data-v-f3bf5228] { display: block; width: 100%; text-align: center; } .tips-card .card-footer .profile div .type[data-v-f3bf5228] { font-size: 13px; color: #999999; } .tips-card .card-footer .profile div .count[data-v-f3bf5228] { font-size: 18px; color: #333333; } .tips-card .card-footer .social[data-v-f3bf5228] { display: -webkit-box; display: -webkit-flex; display: -ms-flexbox; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; -webkit-flex-direction: row; -ms-flex-direction: row; flex-direction: row; -webkit-box-pack: end; -webkit-justify-content: flex-end; -ms-flex-pack: end; justify-content: flex-end; -webkit-box-align: center; -webkit-align-items: center; -ms-flex-align: center; align-items: center; float: right; overflow: hidden; _zoom: 1; } .tips-card .card-footer .social .message[data-v-f3bf5228] { border: 1px solid rgba(59, 194, 29, 0.7); color: #42C02E; margin: 0 10px 0 16px; font-size: 15px; padding: 8px 0; width: 90px; border-radius: 40px; text-align: center; cursor: pointer; float: left; -webkit-box-sizing: border-box; box-sizing: border-box; } .tips-card .card-footer .social .message[data-v-f3bf5228]:hover { border: 1px solid #42C02E; color: #42C02E; background-color: rgba(59, 194, 29, 0.05); } .tips-card .card-footer .social .user-follow-button[data-v-f3bf5228] { font-size: 15px; padding: 8px 0; width: 100px; } .arrow[data-v-f3bf5228] { position: absolute; width: 100%; height: 10px; left: 0; z-index: 20; pointer-events: none; } .arrow i[data-v-f3bf5228] { position: absolute; left: 50%; margin: 0; margin-left: -10px; border-width: 10px; border-color: transparent; padding: 0; } .arrow em[data-v-f3bf5228] { display: block; position: absolute; left: -9px; border-width: 9px; border-color: transparent; margin: 0; padding: 0; } .arrow-type-top[data-v-f3bf5228] { bottom: 1px; } .arrow-type-top i[data-v-f3bf5228] { border-top-color: #d9d9d9; border-style: solid dashed dashed; top: 0; } .arrow-type-top em[data-v-f3bf5228] { border-style: solid dashed dashed; border-top-color: #ffffff; top: -10px; } .arrow-type-bottom[data-v-f3bf5228] { top: 1px; } .arrow-type-bottom i[data-v-f3bf5228] { border-bottom-color: #d9d9d9; border-style: dashed dashed solid; top: -10px; } .arrow-type-bottom em[data-v-f3bf5228] { border-style: dashed dashed solid; border-bottom-color: #ffffff; top: -8px; } .reader-night-mode .tips-card-loading[data-v-f3bf5228] { background-color: #3F3F3F; border-color: #2F2F2F; } .reader-night-mode .tips-card-loading .avatar[data-v-f3bf5228], .reader-night-mode .tips-card-loading .name[data-v-f3bf5228], .reader-night-mode .tips-card-loading .text[data-v-f3bf5228], .reader-night-mode .tips-card-loading .text-delay[data-v-f3bf5228], .reader-night-mode .tips-card-loading .count[data-v-f3bf5228], .reader-night-mode .tips-card-loading .type[data-v-f3bf5228], .reader-night-mode .tips-card-loading .button[data-v-f3bf5228] { background-color: #545454; } .reader-night-mode .tips-card[data-v-f3bf5228] { background-color: #3F3F3F; border-color: #2F2F2F; } .reader-night-mode .tips-card .card-content .summary .name .nickname[data-v-f3bf5228] { color: #C8C8C8; } .reader-night-mode .tips-card .card-content .summary .name .nickname[data-v-f3bf5228]:hover { color: #ffffff; } .reader-night-mode .tips-card .card-content .summary .intro[data-v-f3bf5228] { color: #C8C8C8; } .reader-night-mode .tips-card .card-footer[data-v-f3bf5228] { border-top-color: #2F2F2F; } .reader-night-mode .tips-card .card-footer .profile div .count[data-v-f3bf5228] { color: #C8C8C8; } .reader-night-mode .arrow.arrow-type-top em[data-v-f3bf5228] { border-top-color: #3F3F3F; } .reader-night-mode .arrow.arrow-type-top i[data-v-f3bf5228] { border-top-color: #2F2F2F; } .reader-night-mode .arrow.arrow-type-bottom em[data-v-f3bf5228] { border-bottom-color: #3F3F3F; } .reader-night-mode .arrow.arrow-type-bottom i[data-v-f3bf5228] { border-bottom-color: #2F2F2F; } .v-tooltip-container, .v-tooltip-content { display: inline-block; } .v-tooltip-container { position: relative; } .v-tooltip-container .v-tooltip-content { -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; } .v-tooltip-container .v-tooltip-wrap { position: absolute; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-top { bottom: 100%; left: 50%; -webkit-transform: translateX(-50%); -ms-transform: translateX(-50%); transform: translateX(-50%); padding-bottom: 10px; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-bottom { top: 100%; left: 50%; -webkit-transform: translateX(-50%); -ms-transform: translateX(-50%); transform: translateX(-50%); padding-top: 10px; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-left { top: 50%; right: 100%; -webkit-transform: translateY(-50%); -ms-transform: translateY(-50%); transform: translateY(-50%); padding-right: 10px; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-right { top: 50%; left: 100%; -webkit-transform: translateY(-50%); -ms-transform: translateY(-50%); transform: translateY(-50%); padding-left: 10px; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-top-start { bottom: 100%; left: 0; padding-bottom: 10px; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-top-end { bottom: 100%; right: 0; padding-bottom: 10px; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-bottom-start { top: 100%; left: 0; padding-top: 10px; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-bottom-end { top: 100%; right: 0; padding-top: 10px; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-left-start { top: 0; right: 100%; padding-right: 10px; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-left-end { bottom: 0; right: 100%; padding-right: 10px; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-right-start { top: 0; left: 100%; padding-left: 10px; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-right-end { bottom: 0; left: 100%; padding-left: 10px; } @charset \"UTF-8\"; /* * 变量 */ .like-button[data-v-cdecbe24] { position: relative; padding-left: 23px; } .like-button[data-v-cdecbe24]:before { content: ''; position: absolute; left: -16px; top: -16px; width: 50px; height: 50px; background-image: url(//cdn2.jianshu.io/assets/web/zan_animation_steps-8d65a474b670eb6a022516f4e0b8e9a4.png); background-position: left; background-repeat: no-repeat; background-size: 1050px 50px; } .like-button[data-v-cdecbe24]:hover:before { background-position: -50px; } .like-button.zan-animation span[data-v-cdecbe24], .like-button.active span[data-v-cdecbe24] { color: #333333; } body.reader-night-mode .like-button.zan-animation span[data-v-cdecbe24], body.reader-night-mode .like-button.active span[data-v-cdecbe24] { color: #C8C8C8; } .like-button.zan-animation[data-v-cdecbe24]:before { -webkit-animation: likeBlast-data-v-cdecbe24 0.6s 1 steps(19); animation: likeBlast-data-v-cdecbe24 0.6s 1 steps(19); background-position: right; } @-webkit-keyframes likeBlast { 0% { background-position: -50px; } 100% { background-position: right; } } @keyframes likeBlast-data-v-cdecbe24 { 0% { background-position: -50px; } 100% { background-position: right; } } .like-button.active[data-v-cdecbe24]:before { background-position: right; } 写文章 注册 登录 夜间模式 开 关 宋体 黑体 简 繁 首页 下载App × 伪分布式 Hadoop 部署 Mac版 SpikeKing 关注 2017.09.03 18:39* 字数 1059 阅读 374评论 1喜欢 1 欢迎Follow我的GitHub, 关注我的简书. 配置Hadoop，单机伪分布式模式，用于学习Hadoop的原理，实际工作仍需要Hadoop集群。设备为Mac操作系统。 Hadoop SSH 开启本机的远程登录，位于 系统偏好设置 -&gt; 共享 SSH 登录本机 ➜ ~ ssh localhost Last login: Sun Sep 3 08:02:53 2017 默认需要键入密码，可以复制已有的SSH密匙至本机的验证密匙，避免每次都需要输入密码。 cat $HOME/.ssh/id_rsa.pub &gt;&gt; $HOME/.ssh/authorized_keys Homebrew 使用Homebrew安装Hadoop，默认会设置一些系统参数，避免手动修改，Homebrew官网。 执行安装命令 ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" 安装失败的卸载命令 ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall)\" /Library/Caches/权限不足，导致错误 ==&gt; Cleaning up /Library/Caches/Homebrew... ==&gt; Migrating /Library/Caches/Homebrew to /Users/wangchenlong/Library/Caches/Homebrew... ==&gt; Deleting /Library/Caches/Homebrew... Warning: Failed to delete /Library/Caches/Homebrew. 修改文件夹归属到当前用户 sudo chown -R $USER /usr/local/* sudo chown -R $USER /Users/wangchenlong/Library/* 安装成功 ➜ ~ brew --version Homebrew 1.3.1 Homebrew/homebrew-core (git revision 1278; last commit 2017-09-02) 在修改用户权限时，导致pip的python实效，需要重新安装pip，报错 pip installation /usr/local/opt/python/bin/python2.7: bad interpreter: No such file or directory 修复pip，参考 重新安装pip curl https://bootstrap.pypa.io/ez_setup.py -o - | sudo python sudo easy_install pip Hadoop安装 使用brew安装hadoop ➜ ~ brew install hadoop ==&gt; Downloading https://www.apache.org/dyn/closer.cgi?path=hadoop/common/hadoop-2.8.1/hadoop-2.8.1.tar.gz ==&gt; Best Mirror http://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/hadoop-2.8.1/hadoop-2.8.1.tar.gz ######################################################################## 100.0% ==&gt; Caveats In Hadoop's config file: /usr/local/opt/hadoop/libexec/etc/hadoop/hadoop-env.sh, /usr/local/opt/hadoop/libexec/etc/hadoop/mapred-env.sh and /usr/local/opt/hadoop/libexec/etc/hadoop/yarn-env.sh $JAVA_HOME has been set to be the output of: /usr/libexec/java_home ==&gt; Summary 🍺 /usr/local/Cellar/hadoop/2.8.1: 25,233 files, 2.1GB, built in 1 minute 1 second Hadoop的安装位置：/usr/local/Cellar/hadoop/2.8.1 显示目录归属的用户，确保为当前用户 ls -lad /usr/local /usr/local/Cellar 为了使用方便，设置Hadoop的环境变量HADOOP_HOME，我使用的Shell是oh-my-zsh，默认的配置是.zshrc，在末尾添加环境变量即可，参考 #Hadoop Settings export HADOOP_HOME=/usr/local/Cellar/hadoop/2.8.1/libexec 测试 ➜ ~ echo $HADOOP_HOME /usr/local/Cellar/hadoop/2.8.1/libexec ➜ ~ vi /etc/hosts，添加本机的地址映射 127.0.0.1 bd01.wangchenlong.org HDFS配置 重启电脑后，Hadoop服务全部关闭，需要重新启动。 进入Hadoop的配置目录 ➜ ~ cd ${HADOOP_HOME}/etc/hadoop ➜ hadoop git:(master) ✗ pwd /usr/local/Cellar/hadoop/2.8.1/libexec/etc/hadoop ➜ hadoop git:(master) ✗ ls capacity-scheduler.xml kms-env.sh configuration.xsl kms-log4j.properties container-executor.cfg kms-site.xml core-site.xml log4j.properties hadoop-env.sh mapred-env.sh hadoop-metrics.properties mapred-queues.xml.template hadoop-metrics2.properties mapred-site.xml hadoop-policy.xml mapred-site.xml.template hdfs-site.xml slaves httpfs-env.sh ssl-client.xml.example httpfs-log4j.properties ssl-server.xml.example httpfs-signature.secret yarn-env.sh httpfs-site.xml yarn-site.xml kms-acls.xml ➜ hadoop git:(master) ✗ 配置HDFS，编辑core-site.xml文件 ➜ hadoop git:(master) ✗ vi core-site.xml ➜ hadoop git:(master) ✗ open core-site.xml 添加两个属性，hadoop.tmp.dir用于存储HDFS的临时文件，fs.default.name用于指定HDFS的访问端口。临时文件，如果使用/tmp文件夹，每次重启电脑都会清空，因此，我们创建永久性质的临时文件夹./Hadoop/opt/data/tmp，提前使用mkdir创建。 &lt;configuration&gt; &lt;property&gt; &lt;name&gt;hadoop.tmp.dir&lt;/name&gt; &lt;!-- 永久存储的tmp文件. --&gt; &lt;value&gt;/Users/wangchenlong/Hadoop/opt/data/tmp/hadoop-${user.name}&lt;/value&gt; &lt;description&gt;A base for other temporary directories.&lt;/description&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;fs.default.name&lt;/name&gt; &lt;value&gt;hdfs://bd01.wangchenlong.org:8020&lt;/value&gt; &lt;/property&gt; &lt;/configuration&gt; 编辑hdfs-site.xml文件，HDFS在存储时的复制数量dfs.replication，我们是单机，只需要存储1份。 &lt;configuration&gt; &lt;property&gt; &lt;name&gt;dfs.replication&lt;/name&gt; &lt;value&gt;1&lt;/value&gt; &lt;/property&gt; &lt;/configuration&gt; 格式化HDFS hdfs namenode -format 如果在临时文件夹./Hadoop/opt/data/tmp/hadoop-wangchenlong/dfs/中，创建了dfs文件夹，则表示格式化成功。检查dfs/name/current文件夹 -rw-r--r-- 1 wangchenlong staff 218 Sep 3 14:36 VERSION -rw-r--r-- 1 wangchenlong staff 329 Sep 3 14:36 fsimage_0000000000000000000 -rw-r--r-- 1 wangchenlong staff 62 Sep 3 14:36 fsimage_0000000000000000000.md5 -rw-r--r-- 1 wangchenlong staff 2 Sep 3 14:36 seen_txid fsimage是持久化存储的文件，fsimage.md5是文件的校验，seen_txid是HDFS的版本 VERSION的信息，namespaceID是NameNode的唯一ID；clusterID是集群ID，NameNode与DataNode的集群ID一致，表示同一个集群 namespaceID=742879587 clusterID=CID-679809f6-9f1f-4d6c-a35f-ac519ad543c2 cTime=1504420584572 storageType=NAME_NODE blockpoolID=BP-1330604992-169.254.59.178-1504420584572 layoutVersion=-63 JPS(Java Virtual Machine Process Status Tool)是JDK提供的一个显示当前所有Java进程pid的命令，也可以用于显示Hadoop的进程信息。 ➜ ~ jps 767 Jps ➜ ~ Hadoop的命令，都位于sbin中，使用hadoop-daemon.sh启动NameNode ➜ ~ cd ${HADOOP_HOME}/sbin ➜ sbin git:(master) ✗ ls distribute-exclude.sh refresh-namenodes.sh stop-all.sh hadoop-daemon.sh slaves.sh stop-balancer.sh hadoop-daemons.sh start-all.sh stop-dfs.sh hdfs-config.sh start-balancer.sh stop-secure-dns.sh httpfs.sh start-dfs.sh stop-yarn.sh kms.sh start-secure-dns.sh yarn-daemon.sh mr-jobhistory-daemon.sh start-yarn.sh yarn-daemons.sh ➜ sbin git:(master) ✗ ./hadoop-daemon.sh start namenode starting namenode, logging to /usr/local/Cellar/hadoop/2.8.1/libexec/logs/hadoop-wangchenlong-namenode-wangchenlong.local.out ➜ sbin git:(master) ✗ jps 840 NameNode 907 Jps ➜ sbin git:(master) ✗ 启动DataNode。如果无法启动DataNode，因为多次格式化NameNode，可能会导致VERSION中的namespaceID不一致，删除hadoop-${user.name}文件夹，重新格式化即可。 ➜ sbin git:(master) ✗ ./hadoop-daemon.sh start datanode starting datanode, logging to /usr/local/Cellar/hadoop/2.8.1/libexec/logs/hadoop-wangchenlong-datanode-wangchenlong.local.out ➜ sbin git:(master) ✗ jps 840 NameNode 984 Jps 启动SecondaryNameNode ➜ sbin git:(master) ✗ ./hadoop-daemon.sh start secondarynamenode starting secondarynamenode, logging to /usr/local/Cellar/hadoop/2.8.1/libexec/logs/hadoop-wangchenlong-secondarynamenode-wangchenlong.local.out ➜ sbin git:(master) ✗ jps 1105 SecondaryNameNode 1139 Jps 840 NameNode 最终情况的Java进程，需要NameNode、DataNode、SecondaryNameNode都存在。 ➜ sbin git:(master) ✗ jps 1105 SecondaryNameNode 2484 DataNode 840 NameNode 2522 Jps 在HDFS上，创建文件夹demo-test，上传一个任意文件wcl.txt。 ➜ sbin git:(master) ✗ hdfs dfs -mkdir /demo-test ➜ sbin git:(master) ✗ hdfs dfs -ls / Found 1 items drwxr-xr-x - wangchenlong supergroup 0 2017-09-03 15:19 /demo-test ➜ ~ hdfs dfs -put wcl.txt /demo-test ➜ ~ hdfs dfs -ls /demo-test Found 1 items -rw-r--r-- 1 wangchenlong supergroup 23 2017-09-03 15:21 /demo-test/wcl.txt ➜ ~ 关闭HDFS的命令汇总 ./hadoop-daemon.sh stop namenode ./hadoop-daemon.sh stop secondarynamenode ./hadoop-daemon.sh stop datanode 启动HDFS的命令汇总 cd $HADOOP_HOME/sbin ./hadoop-daemon.sh start namenode ./hadoop-daemon.sh start secondarynamenode ./hadoop-daemon.sh start datanode 配置Yarn 进入配置目录，复制MapReduce的模板 cd ${HADOOP_HOME}/etc/hadoop cp mapred-site.xml.template mapred-site.xml 编辑mapred-site.xml，MapReduce的框架设置为Yarn。 &lt;configuration&gt; &lt;property&gt; &lt;name&gt;mapreduce.framework.name&lt;/name&gt; &lt;value&gt;yarn&lt;/value&gt; &lt;/property&gt; &lt;/configuration&gt; 配置Yarn的属性，yarn-site.xml。yarn.nodemanager.aux-services是Yarn的NodeManager，用于管理node，使用MR的随机洗牌模式；yarn.resourcemanager.hostname是Yarn的资源管理器（ResourceManager），使用本机地址。 &lt;configuration&gt; &lt;!-- Site specific YARN configuration properties --&gt; &lt;property&gt; &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt; &lt;value&gt;mapreduce_shuffle&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt; &lt;value&gt;bd01.wangchenlong.org&lt;/value&gt; &lt;/property&gt; &lt;/configuration&gt; 启动NodeManager和ResourceManager，先进入命令文件夹，再启动yarn-daemon脚本，最后使用jps检查是否成功。 ➜ sbin git:(master) ✗ ./yarn-daemon.sh start nodemanager starting nodemanager, logging to /usr/local/Cellar/hadoop/2.8.1/libexec/logs/yarn-wangchenlong-nodemanager-wangchenlong.local.out ➜ sbin git:(master) ✗ ./yarn-daemon.sh start resourcemanager starting resourcemanager, logging to /usr/local/Cellar/hadoop/2.8.1/libexec/logs/yarn-wangchenlong-resourcemanager-wangchenlong.local.out ➜ sbin git:(master) ✗ jps 3028 SecondaryNameNode 2966 DataNode 3736 ResourceManager 2905 NameNode 3769 Jps 3661 NodeManager ➜ sbin git:(master) ✗ Yarn的端口是8088，访问 http://bd01.wangchenlong.org:8088/ Yarn MR作业 MR的数据存储使用HDFS，MR的框架使用Yarn，执行MR作业 - 单词统计。 在./Hadoop/opt/data中，创建文本wc.input hadoop mapreduce hive hbase spark storm sqoop hadoop hive spark hadoop 将文件上传至HDFS的demo-test文件夹 ➜ data hdfs dfs -put wc.input /demo-test ➜ data hdfs dfs -ls /demo-test Found 2 items -rw-r--r-- 1 wangchenlong supergroup 71 2017-09-03 16:05 /demo-test/wc.input -rw-r--r-- 1 wangchenlong supergroup 23 2017-09-03 15:21 /demo-test/wcl.txt ➜ data 进入Hadoop的示例文件夹share ➜ data cd ${HADOOP_HOME}/share/hadoop/mapreduce ➜ mapreduce git:(master) ✗ ls hadoop-mapreduce-client-app-2.8.1.jar hadoop-mapreduce-client-jobclient-2.8.1-tests.jar lib hadoop-mapreduce-client-common-2.8.1.jar hadoop-mapreduce-client-jobclient-2.8.1.jar lib-examples hadoop-mapreduce-client-core-2.8.1.jar hadoop-mapreduce-client-shuffle-2.8.1.jar sources hadoop-mapreduce-client-hs-2.8.1.jar hadoop-mapreduce-examples-2.8.1.jar hadoop-mapreduce-client-hs-plugins-2.8.1.jar jdiff ➜ mapreduce git:(master) ✗ 执行MR作业 yarn jar hadoop-mapreduce-examples-2.8.1.jar wordcount /demo-test/wc.input /demo-output/ 查看输出结果 ➜ mapreduce git:(master) ✗ hdfs dfs -cat /demo-output/part-r-00000 17/09/03 16:12:27 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable hadoop 3 hbase 1 hive 2 mapreduce 1 spark 2 sqoop 1 storm 1 ➜ mapreduce git:(master) ✗ 开启Yarn的历史服务 cd ${HADOOP_HOME}/sbin ./mr-jobhistory-daemon.sh start historyserver 停止命令汇总 ./mr-jobhistory-daemon.sh stop historyserver ./yarn-daemon.sh stop nodemanager ./yarn-daemon.sh stop resourcemanager 启动命令汇总 ./yarn-daemon.sh start nodemanager ./yarn-daemon.sh start resourcemanager ./mr-jobhistory-daemon.sh start historyserver MR作业的执行日志，The url to track the job可能无法访问，替换为相应的host即可。 INFO client.RMProxy: Connecting to ResourceManager at bd01.wangchenlong.org/127.0.0.1:8032 INFO input.FileInputFormat: Total input files to process : 1 INFO mapreduce.JobSubmitter: number of splits:1 INFO mapreduce.JobSubmitter: Submitting tokens for job: job_1504434568655_0001 INFO impl.YarnClientImpl: Submitted application application_1504434568655_0001 INFO mapreduce.Job: The url to track the job: http://localhost:8088/proxy/application_1504434568655_0001/ INFO mapreduce.Job: Running job: job_1504434568655_0001 17/09/03 18:30:13 INFO mapreduce.Job: Job job_1504434568655_0001 running in uber mode : false 17/09/03 18:30:13 INFO mapreduce.Job: map 0% reduce 0% 17/09/03 18:30:32 INFO mapreduce.Job: map 100% reduce 0% 17/09/03 18:30:52 INFO mapreduce.Job: map 100% reduce 100% 17/09/03 18:30:53 INFO mapreduce.Job: Job job_1504434568655_0001 completed successfully OK, that's all! Enjoy it! 文章都看到这了, 那就捧个\"钱场\"呗! 赞赏支持 数据挖掘📒 © 著作权归作者所有 举报文章 关注 SpikeKing 写了 103258 字，被 10085 人关注，获得了 4182 个喜欢 美图云视觉技术部 春雨医生 中科院自动化所 北京交通大学 本科及硕士 微信公众号：深度算法 ID：DeepAlgorithm 欢迎Follow我的GitHub: https://github.com/SpikeKing 2018 新作《高级Android开发强化实战》 京东：https://item.jd.com/12385680.html 喜欢 1 下载app生成长微博图片 更多分享 登录 后发表评论 1条评论 只看作者 关闭评论 按时间倒序按时间正序 小H109 2楼 · 2017.09.11 19:14 这种伪分布式部署，后期要扩容要如何扩容？ 赞 回复 被以下专题收入，发现更多相似内容 程序员Python 运维我爱编程 HDFS 随着全球经济的不断发展，大数据时代早已悄悄到来，而Hadoop又是大数据环境的基础，想入门大数据行业首先需要了解Hadoop的知识。2017年年初apache发行了Hadoop3.0，也意味着一直有一群人在对Hadoop不断的做优化，不仅如此，各个Hadoop的商业版本也有... CatherinePlans Hadoop、HBase、Hive、Spark分布式系统架构 Hadoop、HBase、Hive、Spark分布式系统架构，本文通过全套部署方法来让大家深入系统内部以充分理解分布式系统架构和他们之间的关系。 机器学习、数据挖掘等各种大数据处理都离不开各种开源分布式系统，hadoop用户分布式存储和map-reduce计算，spar... 0o失魂鱼o0 hadoop 完全分布式搭建指南 简述 hadoop 集群一共有4种部署模式，详见《hadoop 生态圈介绍》。完全分布式模式将hadoop部署在至少两台机子上，数据块副本的数量通常也设置为2以上，拥有Namenode和Secondary Namenode。 所有四种模式的部署指南见：hadoop 伪分布式... 浊流 Hadoop、HBase、Hive、Spark分布式系统架构 引用：http://www.jianshu.com/p/575b912a4781 Hadoop、HBase、Hive、Spark分布式系统架构，本文通过全套部署方法来让大家深入系统内部以充分理解分布式系统架构和他们之间的关系。 机器学习、数据挖掘等各种大数据处理都离不开各种... 纤尘22 hadoop 伪分布式搭建指南 简述 hadoop 集群一共有4种部署模式，详见《hadoop 生态圈介绍》。伪分布式模式将hadoop安装在一台机器上，通常用来用作实验、开发和调试用。 所有四种模式的部署指南见：hadoop 伪分布式搭建指南hadoop 完全分布式搭建指南hadoop HA高可用集群模... 浊流 河北宣化：公益团队送温暖 蔚州大地献爱心 中国公益在线：（公益记者 冯永军 李宝龙摄影/孙明进）河北宣化讯：2016年10月15日早8点，公益记者随同宣化区公E时代、宣化区爱心公益促进会以及北京黄家村助学小组（公E时代代表）组成蔚县北口村联合助学团队，开始了蔚县助学之旅。在去的途中，由于高速封闭，助学团被迫走上了颠... 中国公益在线 iOS 几种延时执行方法 1 GCD double delayInSeconds = 2.0; // 延时2秒执行返回 dispatch_time_t popTime = dispatch_time(DISPATCH_TIME_NOW, (int64_t)(delayInSeconds * NSEC... 来敲代码 SWIFT3.0 富文本的使用 class funcchangeStringColor(content:String,rang:NSRange,color:UIColor,fontSize:Int) -&gt;NSMutableAttributedString{ letattributeString =NSMu... 害羞的猪 记录高考·day11【17.6.19】 哇刚过十我就给因为“学习繁忙”给忘了 …主要还是在唠嗑吧，每天都超后悔自己这一天没做什么事情，特别是现在自己这么匆忙，总觉得可能别人更重要吧，又给自己带来重创。 晚上说话有点驴头不对马嘴，可能这就是准高三有时的迷茫吧 坐在盾上吃包子 {\"user_signed_in\":false,\"locale\":\"zh-CN\",\"os\":\"mac\",\"read_mode\":\"day\",\"read_font\":\"font2\",\"note_show\":{\"is_author\":false,\"is_following_author\":false,\"is_liked_note\":false,\"follow_state\":0,\"uuid\":\"ec8e77f6-a773-42af-be16-397367d8ad42\"},\"note\":{\"id\":16636676,\"slug\":\"bca08edaf0c8\",\"user_id\":749674,\"notebook_id\":15168437,\"commentable\":true,\"likes_count\":1,\"views_count\":374,\"public_wordage\":1059,\"comments_count\":1,\"featured_comments_count\":0,\"total_rewards_count\":0,\"is_author\":false,\"paid_type\":\"free\",\"paid\":false,\"paid_content_accessible\":false,\"author\":{\"nickname\":\"SpikeKing\",\"total_wordage\":103258,\"followers_count\":10085,\"total_likes_count\":4182}}} (function(){ var bp = document.createElement('script'); var curProtocol = window.location.protocol.split(':')[0]; if (curProtocol === 'https') { bp.src = 'https://zz.bdstatic.com/linksubmit/push.js'; } else { bp.src = 'http://push.zhanzhang.baidu.com/push.js'; } var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(bp, s); })(); #yddContainer{display:block;font-family:Microsoft YaHei;position:relative;width:100%;height:100%;top:-4px;left:-4px;font-size:12px;border:1px solid}#yddTop{display:block;height:22px}#yddTopBorderlr{display:block;position:static;height:17px;padding:2px 28px;line-height:17px;font-size:12px;color:#5079bb;font-weight:bold;border-style:none solid;border-width:1px}#yddTopBorderlr .ydd-sp{position:absolute;top:2px;height:0;overflow:hidden}.ydd-icon{left:5px;width:17px;padding:0px 0px 0px 0px;padding-top:17px;background-position:-16px -44px}.ydd-close{right:5px;width:16px;padding-top:16px;background-position:left -44px}#yddKeyTitle{float:left;text-decoration:none}#yddMiddle{display:block;margin-bottom:10px}.ydd-tabs{display:block;margin:5px 0;padding:0 5px;height:18px;border-bottom:1px solid}.ydd-tab{display:block;float:left;height:18px;margin:0 5px -1px 0;padding:0 4px;line-height:18px;border:1px solid;border-bottom:none}.ydd-trans-container{display:block;line-height:160%}.ydd-trans-container a{text-decoration:none;}#yddBottom{position:absolute;bottom:0;left:0;width:100%;height:22px;line-height:22px;overflow:hidden;background-position:left -22px}.ydd-padding010{padding:0 10px}#yddWrapper{color:#252525;z-index:10001;background:url(chrome-extension://eopjamdnofihpioajgfdikhhbobonhbb/ab20.png);}#yddContainer{background:#fff;border-color:#4b7598}#yddTopBorderlr{border-color:#f0f8fc}#yddWrapper .ydd-sp{background-image:url(chrome-extension://eopjamdnofihpioajgfdikhhbobonhbb/ydd-sprite.png)}#yddWrapper a,#yddWrapper a:hover,#yddWrapper a:visited{color:#50799b}#yddWrapper .ydd-tabs{color:#959595}.ydd-tabs,.ydd-tab{background:#fff;border-color:#d5e7f3}#yddBottom{color:#363636}#yddWrapper{min-width:250px;max-width:400px;}"},{"title":"","date":"2018-08-05T16:32:03.648Z","updated":"2018-08-05T16:32:02.635Z","comments":true,"path":"img/伪分布式 Hadoop 部署 Mac版2.html","permalink":"http://yoursite.com/img/伪分布式 Hadoop 部署 Mac版2.html","excerpt":"","text":"伪分布式 Hadoop 部署 Mac版 - 简书 var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"//hm.baidu.com/hm.js?0c0e9d9b1e7d617b3e6842e85b9fb068\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })(); fieldset[disabled] .multiselect { pointer-events: none; } .multiselect__spinner { position: absolute; right: 1px; top: 1px; width: 48px; height: 35px; background: #fff; display: block; } .multiselect__spinner:after, .multiselect__spinner:before { position: absolute; content: \"\"; top: 50%; left: 50%; margin: -8px 0 0 -8px; width: 16px; height: 16px; border-radius: 100%; border-color: #41b883 transparent transparent; border-style: solid; border-width: 2px; box-shadow: 0 0 0 1px transparent; } .multiselect__spinner:before { animation: a 2.4s cubic-bezier(.41,.26,.2,.62); animation-iteration-count: infinite; } .multiselect__spinner:after { animation: a 2.4s cubic-bezier(.51,.09,.21,.8); animation-iteration-count: infinite; } .multiselect__loading-enter-active, .multiselect__loading-leave-active { transition: opacity .4s ease-in-out; opacity: 1; } .multiselect__loading-enter, .multiselect__loading-leave-active { opacity: 0; } .multiselect, .multiselect__input, .multiselect__single { font-family: inherit; font-size: 14px; -ms-touch-action: manipulation; touch-action: manipulation; } .multiselect { box-sizing: content-box; display: block; position: relative; width: 100%; min-height: 40px; text-align: left; color: #35495e; } .multiselect * { box-sizing: border-box; } .multiselect:focus { outline: none; } .multiselect--disabled { opacity: .6; } .multiselect--active { z-index: 1; } .multiselect--active:not(.multiselect--above) .multiselect__current, .multiselect--active:not(.multiselect--above) .multiselect__input, .multiselect--active:not(.multiselect--above) .multiselect__tags { border-bottom-left-radius: 0; border-bottom-right-radius: 0; } .multiselect--active .multiselect__select { transform: rotate(180deg); } .multiselect--above.multiselect--active .multiselect__current, .multiselect--above.multiselect--active .multiselect__input, .multiselect--above.multiselect--active .multiselect__tags { border-top-left-radius: 0; border-top-right-radius: 0; } .multiselect__input, .multiselect__single { position: relative; display: inline-block; min-height: 20px; line-height: 20px; border: none; border-radius: 5px; background: #fff; padding: 0 0 0 5px; width: 100%; transition: border .1s ease; box-sizing: border-box; margin-bottom: 8px; vertical-align: top; } .multiselect__tag~.multiselect__input, .multiselect__tag~.multiselect__single { width: auto; } .multiselect__input:hover, .multiselect__single:hover { border-color: #cfcfcf; } .multiselect__input:focus, .multiselect__single:focus { border-color: #a8a8a8; outline: none; } .multiselect__single { padding-left: 6px; margin-bottom: 8px; } .multiselect__tags-wrap { display: inline; } .multiselect__tags { min-height: 40px; display: block; padding: 8px 40px 0 8px; border-radius: 5px; border: 1px solid #e8e8e8; background: #fff; } .multiselect__tag { position: relative; display: inline-block; padding: 4px 26px 4px 10px; border-radius: 5px; margin-right: 10px; color: #fff; line-height: 1; background: #41b883; margin-bottom: 5px; white-space: nowrap; overflow: hidden; max-width: 100%; text-overflow: ellipsis; } .multiselect__tag-icon { cursor: pointer; margin-left: 7px; position: absolute; right: 0; top: 0; bottom: 0; font-weight: 700; font-style: normal; width: 22px; text-align: center; line-height: 22px; transition: all .2s ease; border-radius: 5px; } .multiselect__tag-icon:after { content: \"\\D7\"; color: #266d4d; font-size: 14px; } .multiselect__tag-icon:focus, .multiselect__tag-icon:hover { background: #369a6e; } .multiselect__tag-icon:focus:after, .multiselect__tag-icon:hover:after { color: #fff; } .multiselect__current { min-height: 40px; overflow: hidden; padding: 8px 12px 0; padding-right: 30px; white-space: nowrap; border-radius: 5px; border: 1px solid #e8e8e8; } .multiselect__current, .multiselect__select { line-height: 16px; box-sizing: border-box; display: block; margin: 0; text-decoration: none; cursor: pointer; } .multiselect__select { position: absolute; width: 40px; height: 38px; right: 1px; top: 1px; padding: 4px 8px; text-align: center; transition: transform .2s ease; } .multiselect__select:before { position: relative; right: 0; top: 65%; color: #999; margin-top: 4px; border-style: solid; border-width: 5px 5px 0; border-color: #999 transparent transparent; content: \"\"; } .multiselect__placeholder { color: #adadad; display: inline-block; margin-bottom: 10px; padding-top: 2px; } .multiselect--active .multiselect__placeholder { display: none; } .multiselect__content-wrapper { position: absolute; display: block; background: #fff; width: 100%; max-height: 240px; overflow: auto; border: 1px solid #e8e8e8; border-top: none; border-bottom-left-radius: 5px; border-bottom-right-radius: 5px; z-index: 1; -webkit-overflow-scrolling: touch; } .multiselect__content { list-style: none; display: inline-block; padding: 0; margin: 0; min-width: 100%; vertical-align: top; } .multiselect--above .multiselect__content-wrapper { bottom: 100%; border-bottom-left-radius: 0; border-bottom-right-radius: 0; border-top-left-radius: 5px; border-top-right-radius: 5px; border-bottom: none; border-top: 1px solid #e8e8e8; } .multiselect__content::webkit-scrollbar { display: none; } .multiselect__element { display: block; } .multiselect__option { display: block; padding: 12px; min-height: 40px; line-height: 16px; text-decoration: none; text-transform: none; vertical-align: middle; position: relative; cursor: pointer; white-space: nowrap; } .multiselect__option:after { top: 0; right: 0; position: absolute; line-height: 40px; padding-right: 12px; padding-left: 20px; } .multiselect__option--highlight { background: #41b883; outline: none; color: #fff; } .multiselect__option--highlight:after { content: attr(data-select); background: #41b883; color: #fff; } .multiselect__option--selected { background: #f3f3f3; color: #35495e; font-weight: 700; } .multiselect__option--selected:after { content: attr(data-selected); color: silver; } .multiselect__option--selected.multiselect__option--highlight { background: #ff6a6a; color: #fff; } .multiselect__option--selected.multiselect__option--highlight:after { background: #ff6a6a; content: attr(data-deselect); color: #fff; } .multiselect--disabled { background: #ededed; pointer-events: none; } .multiselect--disabled .multiselect__current, .multiselect--disabled .multiselect__select, .multiselect__option--disabled { background: #ededed; color: #a6a6a6; } .multiselect__option--disabled { cursor: text; pointer-events: none; } .multiselect__option--disabled.multiselect__option--highlight { background: #dedede!important; } .multiselect-enter-active, .multiselect-leave-active { transition: all .15s ease; } .multiselect-enter, .multiselect-leave-active { opacity: 0; } .multiselect__strong { margin-bottom: 8px; line-height: 20px; display: inline-block; vertical-align: top; } [dir=rtl] .multiselect { text-align: right; } [dir=rtl] .multiselect__select { right: auto; left: 1px; } [dir=rtl] .multiselect__tags { padding: 8px 8px 0 40px; } [dir=rtl] .multiselect__content { text-align: right; } [dir=rtl] .multiselect__option:after { right: auto; left: 0; } [dir=rtl] .multiselect__clear { right: auto; left: 12px; } [dir=rtl] .multiselect__spinner { right: auto; left: 1px; } @keyframes a { 0% { transform: rotate(0); } to { transform: rotate(2turn); } }@font-face { font-family: 'KaTeX_AMS'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_AMS-Regular-3d8245dcb4489694a6a263b05c1cca01.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_AMS-Regular-ac1d46d953d403677171697581a284d2.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_AMS-Regular-c67be87adba7d31c013be127b936233d.ttf) format('truetype'); font-weight: normal; font-style: normal; } @font-face { font-family: 'KaTeX_Caligraphic'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Caligraphic-Bold-970d3e76493b82fccf21ad5888ddee77.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Caligraphic-Bold-445f96a387df0d13ded71f27c608516d.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Caligraphic-Bold-3f61a84d76e80396489d32bc9dd8d444.ttf) format('truetype'); font-weight: bold; font-style: normal; } @font-face { font-family: 'KaTeX_Caligraphic'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Caligraphic-Regular-0ef0f2e356a2e1c457b6585d34edae77.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Caligraphic-Regular-74f6918c7d2b768ffd32048102bc0172.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Caligraphic-Regular-c3bc8fcec0e85a50cabf71e4e8074991.ttf) format('truetype'); font-weight: normal; font-style: normal; } @font-face { font-family: 'KaTeX_Fraktur'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Fraktur-Bold-950649ba5e5cfd37cdad74095411d350.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Fraktur-Bold-1aca7ef7f976fb54a207ffc8aa180e38.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Fraktur-Bold-e11e6bf02fc41279a540d3655abf3b07.ttf) format('truetype'); font-weight: bold; font-style: normal; } @font-face { font-family: 'KaTeX_Fraktur'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Fraktur-Regular-135ccd74931753318f6f52f3fce19018.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Fraktur-Regular-c5b430bfcb3e5423b77401afcdb69b66.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Fraktur-Regular-a9509497466d16e6b7265a223ea39093.ttf) format('truetype'); font-weight: normal; font-style: normal; } @font-face { font-family: 'KaTeX_Main'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-Bold-82bce349c8ff0927380b5177e9258ad0.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-Bold-29d4b276c622ff1d1376d9afcbd2f25a.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-Bold-db576c7d5d6eb6ebefc9b334f4140d42.ttf) format('truetype'); font-weight: bold; font-style: normal; } @font-face { font-family: 'KaTeX_Main'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-BoldItalic-13900e552dbf51aead905f897043226c.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-BoldItalic-3f3be43bbdd58a4a86c8eddd3d39a26a.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-BoldItalic-cec43f729e0e6810c3433f6020ec676e.ttf) format('truetype'); font-weight: bold; font-style: italic; } @font-face { font-family: 'KaTeX_Main'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-Italic-b488f60f79c9d1f533def644385d8219.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-Italic-f8a754484e776e94b6116dfbcb1761a7.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-Italic-85b3329fdb41fadfb0fdc01ec5290b2f.ttf) format('truetype'); font-weight: normal; font-style: italic; } @font-face { font-family: 'KaTeX_Main'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-Regular-999cd6bac6e8118065ac500d4f133c63.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-Regular-485696cf1d821baac6ae06c42e09faef.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Main-Regular-f4fe6dca4a5f5520ae0caab31848aae3.ttf) format('truetype'); font-weight: normal; font-style: normal; } @font-face { font-family: 'KaTeX_Math'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Math-Italic-7a31741a44e58952cb4b8a763c206fcd.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Math-Italic-8eb56b3ff5b141cd3732a24e65c2b339.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Math-Italic-10740d7488d690a743339650103f1cb3.ttf) format('truetype'); font-weight: normal; font-style: italic; } @font-face { font-family: 'KaTeX_SansSerif'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_SansSerif-Bold-0d0f967a34b828083a11bb264e578c32.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_SansSerif-Bold-99bd87431ac7ef8f27591f72d7812509.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_SansSerif-Bold-771a1f955e7ff2106402b58d1e8a1ad2.ttf) format('truetype'); font-weight: bold; font-style: normal; } @font-face { font-family: 'KaTeX_SansSerif'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_SansSerif-Italic-b1ac79b9b69c954bbeb8fc02500832e0.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_SansSerif-Italic-9c3f03ec809c6f298d716cbda8260fcb.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_SansSerif-Italic-cb729d47fbd26ff0ae62bb840085e5b5.ttf) format('truetype'); font-weight: normal; font-style: italic; } @font-face { font-family: 'KaTeX_SansSerif'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_SansSerif-Regular-23f1730fda70ec6ec6aa789979890cba.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_SansSerif-Regular-fc90839714a9e877682309c3daf7493e.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_SansSerif-Regular-43b0cb92c2405f175772931ccd68002e.ttf) format('truetype'); font-weight: normal; font-style: normal; } @font-face { font-family: 'KaTeX_Script'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Script-Regular-ae1fad1f4d1c227c9d567da8ea9f988c.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Script-Regular-60febfa114c5e32f0ce73050476aa39f.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Script-Regular-e9169ca7b32608b6235ec9ffff742a71.ttf) format('truetype'); font-weight: normal; font-style: normal; } @font-face { font-family: 'KaTeX_Size1'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size1-Regular-fda0824e8cfb676664ad063c367cfce3.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size1-Regular-1d6cf6b89f694dc76e13ecc4e8214dd2.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size1-Regular-f2e296ef7cef0f6f16912e5d171929b2.ttf) format('truetype'); font-weight: normal; font-style: normal; } @font-face { font-family: 'KaTeX_Size2'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size2-Regular-a7a0eb93afb696cb9b4efb87e6cd45a3.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size2-Regular-f48e83b7bcaa68a86a78e8edfee1a04e.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size2-Regular-0767ede65042583bcc06f09055f4d7ca.ttf) format('truetype'); font-weight: normal; font-style: normal; } @font-face { font-family: 'KaTeX_Size3'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size3-Regular-397bd6872be7adff4f000c49fa85a9c3.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size3-Regular-0387ab387ace32f15b43c3a4a39f187f.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size3-Regular-882f723427a0986846fe786bd8d6f6c7.ttf) format('truetype'); font-weight: normal; font-style: normal; } @font-face { font-family: 'KaTeX_Size4'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size4-Regular-3c14ed11dd8eea981c93bf283193856d.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size4-Regular-726db3bd435c8a6e45e44741dae67263.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Size4-Regular-27901d5ce93d8971c416d9123fedb911.ttf) format('truetype'); font-weight: normal; font-style: normal; } @font-face { font-family: 'KaTeX_Typewriter'; src: url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Typewriter-Regular-895baecfbf4ef298fdfe943fb117c15e.woff2) format('woff2'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Typewriter-Regular-696705de367f02534e8abb38b55af067.woff) format('woff'), url(//cdn2.jianshu.io/assets/_/_/_/_/shared/node_modules/katex/dist/fonts/KaTeX_Typewriter-Regular-6374f53e08c02d7b9ec594e2fb0c5fe8.ttf) format('truetype'); font-weight: normal; font-style: normal; } .katex-display { display: block; margin: 1em 0; text-align: center; } .katex-display > .katex { display: inline-block; text-align: initial; } .katex { font: normal 1.21em KaTeX_Main, Times New Roman, serif; line-height: 1.2; white-space: nowrap; text-indent: 0; text-rendering: auto; } .katex * { -ms-high-contrast-adjust: none !important; } .katex .katex-html { display: inline-block; } .katex .katex-mathml { position: absolute; clip: rect(1px, 1px, 1px, 1px); padding: 0; border: 0; height: 1px; width: 1px; overflow: hidden; } .katex .base { position: relative; display: inline-block; } .katex .strut { display: inline-block; } .katex .textbf { font-weight: bold; } .katex .textit { font-style: italic; } .katex .textrm { font-family: KaTeX_Main; } .katex .textsf { font-family: KaTeX_SansSerif; } .katex .texttt { font-family: KaTeX_Typewriter; } .katex .mathit { font-family: KaTeX_Math; font-style: italic; } .katex .mathrm { font-style: normal; } .katex .mathbf { font-family: KaTeX_Main; font-weight: bold; } .katex .boldsymbol { font-family: KaTeX_Math; font-weight: bold; font-style: italic; } .katex .amsrm { font-family: KaTeX_AMS; } .katex .mathbb { font-family: KaTeX_AMS; } .katex .mathcal { font-family: KaTeX_Caligraphic; } .katex .mathfrak { font-family: KaTeX_Fraktur; } .katex .mathtt { font-family: KaTeX_Typewriter; } .katex .mathscr { font-family: KaTeX_Script; } .katex .mathsf { font-family: KaTeX_SansSerif; } .katex .mainit { font-family: KaTeX_Main; font-style: italic; } .katex .mainrm { font-family: KaTeX_Main; font-style: normal; } .katex .vlist-t { display: inline-table; table-layout: fixed; } .katex .vlist-r { display: table-row; } .katex .vlist { display: table-cell; vertical-align: bottom; position: relative; } .katex .vlist > span { display: block; height: 0; position: relative; } .katex .vlist > span > span { display: inline-block; } .katex .vlist > span > .pstrut { overflow: hidden; width: 0; } .katex .vlist-t2 { margin-right: -2px; } .katex .vlist-s { display: table-cell; vertical-align: bottom; font-size: 1px; width: 2px; } .katex .msupsub { text-align: left; } .katex .mfrac > span > span { text-align: center; } .katex .mfrac .frac-line { display: inline-block; width: 100%; } .katex .mspace { display: inline-block; } .katex .mspace.negativethinspace { margin-left: -0.16667em; } .katex .mspace.muspace { width: 0.055556em; } .katex .mspace.thinspace { width: 0.16667em; } .katex .mspace.negativemediumspace { margin-left: -0.22222em; } .katex .mspace.mediumspace { width: 0.22222em; } .katex .mspace.thickspace { width: 0.27778em; } .katex .mspace.sixmuspace { width: 0.333333em; } .katex .mspace.eightmuspace { width: 0.444444em; } .katex .mspace.enspace { width: 0.5em; } .katex .mspace.twelvemuspace { width: 0.666667em; } .katex .mspace.quad { width: 1em; } .katex .mspace.qquad { width: 2em; } .katex .llap, .katex .rlap, .katex .clap { width: 0; position: relative; } .katex .llap > .inner, .katex .rlap > .inner, .katex .clap > .inner { position: absolute; } .katex .llap > .fix, .katex .rlap > .fix, .katex .clap > .fix { display: inline-block; } .katex .llap > .inner { right: 0; } .katex .rlap > .inner, .katex .clap > .inner { left: 0; } .katex .clap > .inner > span { margin-left: -50%; margin-right: 50%; } .katex .rule { display: inline-block; border: solid 0; position: relative; } .katex .overline .overline-line, .katex .underline .underline-line { display: inline-block; width: 100%; } .katex .sqrt > .root { margin-left: 0.27777778em; margin-right: -0.55555556em; } .katex .sizing, .katex .fontsize-ensurer { display: inline-block; } .katex .sizing.reset-size1.size1, .katex .fontsize-ensurer.reset-size1.size1 { font-size: 1em; } .katex .sizing.reset-size1.size2, .katex .fontsize-ensurer.reset-size1.size2 { font-size: 1.2em; } .katex .sizing.reset-size1.size3, .katex .fontsize-ensurer.reset-size1.size3 { font-size: 1.4em; } .katex .sizing.reset-size1.size4, .katex .fontsize-ensurer.reset-size1.size4 { font-size: 1.6em; } .katex .sizing.reset-size1.size5, .katex .fontsize-ensurer.reset-size1.size5 { font-size: 1.8em; } .katex .sizing.reset-size1.size6, .katex .fontsize-ensurer.reset-size1.size6 { font-size: 2em; } .katex .sizing.reset-size1.size7, .katex .fontsize-ensurer.reset-size1.size7 { font-size: 2.4em; } .katex .sizing.reset-size1.size8, .katex .fontsize-ensurer.reset-size1.size8 { font-size: 2.88em; } .katex .sizing.reset-size1.size9, .katex .fontsize-ensurer.reset-size1.size9 { font-size: 3.456em; } .katex .sizing.reset-size1.size10, .katex .fontsize-ensurer.reset-size1.size10 { font-size: 4.148em; } .katex .sizing.reset-size1.size11, .katex .fontsize-ensurer.reset-size1.size11 { font-size: 4.976em; } .katex .sizing.reset-size2.size1, .katex .fontsize-ensurer.reset-size2.size1 { font-size: 0.83333333em; } .katex .sizing.reset-size2.size2, .katex .fontsize-ensurer.reset-size2.size2 { font-size: 1em; } .katex .sizing.reset-size2.size3, .katex .fontsize-ensurer.reset-size2.size3 { font-size: 1.16666667em; } .katex .sizing.reset-size2.size4, .katex .fontsize-ensurer.reset-size2.size4 { font-size: 1.33333333em; } .katex .sizing.reset-size2.size5, .katex .fontsize-ensurer.reset-size2.size5 { font-size: 1.5em; } .katex .sizing.reset-size2.size6, .katex .fontsize-ensurer.reset-size2.size6 { font-size: 1.66666667em; } .katex .sizing.reset-size2.size7, .katex .fontsize-ensurer.reset-size2.size7 { font-size: 2em; } .katex .sizing.reset-size2.size8, .katex .fontsize-ensurer.reset-size2.size8 { font-size: 2.4em; } .katex .sizing.reset-size2.size9, .katex .fontsize-ensurer.reset-size2.size9 { font-size: 2.88em; } .katex .sizing.reset-size2.size10, .katex .fontsize-ensurer.reset-size2.size10 { font-size: 3.45666667em; } .katex .sizing.reset-size2.size11, .katex .fontsize-ensurer.reset-size2.size11 { font-size: 4.14666667em; } .katex .sizing.reset-size3.size1, .katex .fontsize-ensurer.reset-size3.size1 { font-size: 0.71428571em; } .katex .sizing.reset-size3.size2, .katex .fontsize-ensurer.reset-size3.size2 { font-size: 0.85714286em; } .katex .sizing.reset-size3.size3, .katex .fontsize-ensurer.reset-size3.size3 { font-size: 1em; } .katex .sizing.reset-size3.size4, .katex .fontsize-ensurer.reset-size3.size4 { font-size: 1.14285714em; } .katex .sizing.reset-size3.size5, .katex .fontsize-ensurer.reset-size3.size5 { font-size: 1.28571429em; } .katex .sizing.reset-size3.size6, .katex .fontsize-ensurer.reset-size3.size6 { font-size: 1.42857143em; } .katex .sizing.reset-size3.size7, .katex .fontsize-ensurer.reset-size3.size7 { font-size: 1.71428571em; } .katex .sizing.reset-size3.size8, .katex .fontsize-ensurer.reset-size3.size8 { font-size: 2.05714286em; } .katex .sizing.reset-size3.size9, .katex .fontsize-ensurer.reset-size3.size9 { font-size: 2.46857143em; } .katex .sizing.reset-size3.size10, .katex .fontsize-ensurer.reset-size3.size10 { font-size: 2.96285714em; } .katex .sizing.reset-size3.size11, .katex .fontsize-ensurer.reset-size3.size11 { font-size: 3.55428571em; } .katex .sizing.reset-size4.size1, .katex .fontsize-ensurer.reset-size4.size1 { font-size: 0.625em; } .katex .sizing.reset-size4.size2, .katex .fontsize-ensurer.reset-size4.size2 { font-size: 0.75em; } .katex .sizing.reset-size4.size3, .katex .fontsize-ensurer.reset-size4.size3 { font-size: 0.875em; } .katex .sizing.reset-size4.size4, .katex .fontsize-ensurer.reset-size4.size4 { font-size: 1em; } .katex .sizing.reset-size4.size5, .katex .fontsize-ensurer.reset-size4.size5 { font-size: 1.125em; } .katex .sizing.reset-size4.size6, .katex .fontsize-ensurer.reset-size4.size6 { font-size: 1.25em; } .katex .sizing.reset-size4.size7, .katex .fontsize-ensurer.reset-size4.size7 { font-size: 1.5em; } .katex .sizing.reset-size4.size8, .katex .fontsize-ensurer.reset-size4.size8 { font-size: 1.8em; } .katex .sizing.reset-size4.size9, .katex .fontsize-ensurer.reset-size4.size9 { font-size: 2.16em; } .katex .sizing.reset-size4.size10, .katex .fontsize-ensurer.reset-size4.size10 { font-size: 2.5925em; } .katex .sizing.reset-size4.size11, .katex .fontsize-ensurer.reset-size4.size11 { font-size: 3.11em; } .katex .sizing.reset-size5.size1, .katex .fontsize-ensurer.reset-size5.size1 { font-size: 0.55555556em; } .katex .sizing.reset-size5.size2, .katex .fontsize-ensurer.reset-size5.size2 { font-size: 0.66666667em; } .katex .sizing.reset-size5.size3, .katex .fontsize-ensurer.reset-size5.size3 { font-size: 0.77777778em; } .katex .sizing.reset-size5.size4, .katex .fontsize-ensurer.reset-size5.size4 { font-size: 0.88888889em; } .katex .sizing.reset-size5.size5, .katex .fontsize-ensurer.reset-size5.size5 { font-size: 1em; } .katex .sizing.reset-size5.size6, .katex .fontsize-ensurer.reset-size5.size6 { font-size: 1.11111111em; } .katex .sizing.reset-size5.size7, .katex .fontsize-ensurer.reset-size5.size7 { font-size: 1.33333333em; } .katex .sizing.reset-size5.size8, .katex .fontsize-ensurer.reset-size5.size8 { font-size: 1.6em; } .katex .sizing.reset-size5.size9, .katex .fontsize-ensurer.reset-size5.size9 { font-size: 1.92em; } .katex .sizing.reset-size5.size10, .katex .fontsize-ensurer.reset-size5.size10 { font-size: 2.30444444em; } .katex .sizing.reset-size5.size11, .katex .fontsize-ensurer.reset-size5.size11 { font-size: 2.76444444em; } .katex .sizing.reset-size6.size1, .katex .fontsize-ensurer.reset-size6.size1 { font-size: 0.5em; } .katex .sizing.reset-size6.size2, .katex .fontsize-ensurer.reset-size6.size2 { font-size: 0.6em; } .katex .sizing.reset-size6.size3, .katex .fontsize-ensurer.reset-size6.size3 { font-size: 0.7em; } .katex .sizing.reset-size6.size4, .katex .fontsize-ensurer.reset-size6.size4 { font-size: 0.8em; } .katex .sizing.reset-size6.size5, .katex .fontsize-ensurer.reset-size6.size5 { font-size: 0.9em; } .katex .sizing.reset-size6.size6, .katex .fontsize-ensurer.reset-size6.size6 { font-size: 1em; } .katex .sizing.reset-size6.size7, .katex .fontsize-ensurer.reset-size6.size7 { font-size: 1.2em; } .katex .sizing.reset-size6.size8, .katex .fontsize-ensurer.reset-size6.size8 { font-size: 1.44em; } .katex .sizing.reset-size6.size9, .katex .fontsize-ensurer.reset-size6.size9 { font-size: 1.728em; } .katex .sizing.reset-size6.size10, .katex .fontsize-ensurer.reset-size6.size10 { font-size: 2.074em; } .katex .sizing.reset-size6.size11, .katex .fontsize-ensurer.reset-size6.size11 { font-size: 2.488em; } .katex .sizing.reset-size7.size1, .katex .fontsize-ensurer.reset-size7.size1 { font-size: 0.41666667em; } .katex .sizing.reset-size7.size2, .katex .fontsize-ensurer.reset-size7.size2 { font-size: 0.5em; } .katex .sizing.reset-size7.size3, .katex .fontsize-ensurer.reset-size7.size3 { font-size: 0.58333333em; } .katex .sizing.reset-size7.size4, .katex .fontsize-ensurer.reset-size7.size4 { font-size: 0.66666667em; } .katex .sizing.reset-size7.size5, .katex .fontsize-ensurer.reset-size7.size5 { font-size: 0.75em; } .katex .sizing.reset-size7.size6, .katex .fontsize-ensurer.reset-size7.size6 { font-size: 0.83333333em; } .katex .sizing.reset-size7.size7, .katex .fontsize-ensurer.reset-size7.size7 { font-size: 1em; } .katex .sizing.reset-size7.size8, .katex .fontsize-ensurer.reset-size7.size8 { font-size: 1.2em; } .katex .sizing.reset-size7.size9, .katex .fontsize-ensurer.reset-size7.size9 { font-size: 1.44em; } .katex .sizing.reset-size7.size10, .katex .fontsize-ensurer.reset-size7.size10 { font-size: 1.72833333em; } .katex .sizing.reset-size7.size11, .katex .fontsize-ensurer.reset-size7.size11 { font-size: 2.07333333em; } .katex .sizing.reset-size8.size1, .katex .fontsize-ensurer.reset-size8.size1 { font-size: 0.34722222em; } .katex .sizing.reset-size8.size2, .katex .fontsize-ensurer.reset-size8.size2 { font-size: 0.41666667em; } .katex .sizing.reset-size8.size3, .katex .fontsize-ensurer.reset-size8.size3 { font-size: 0.48611111em; } .katex .sizing.reset-size8.size4, .katex .fontsize-ensurer.reset-size8.size4 { font-size: 0.55555556em; } .katex .sizing.reset-size8.size5, .katex .fontsize-ensurer.reset-size8.size5 { font-size: 0.625em; } .katex .sizing.reset-size8.size6, .katex .fontsize-ensurer.reset-size8.size6 { font-size: 0.69444444em; } .katex .sizing.reset-size8.size7, .katex .fontsize-ensurer.reset-size8.size7 { font-size: 0.83333333em; } .katex .sizing.reset-size8.size8, .katex .fontsize-ensurer.reset-size8.size8 { font-size: 1em; } .katex .sizing.reset-size8.size9, .katex .fontsize-ensurer.reset-size8.size9 { font-size: 1.2em; } .katex .sizing.reset-size8.size10, .katex .fontsize-ensurer.reset-size8.size10 { font-size: 1.44027778em; } .katex .sizing.reset-size8.size11, .katex .fontsize-ensurer.reset-size8.size11 { font-size: 1.72777778em; } .katex .sizing.reset-size9.size1, .katex .fontsize-ensurer.reset-size9.size1 { font-size: 0.28935185em; } .katex .sizing.reset-size9.size2, .katex .fontsize-ensurer.reset-size9.size2 { font-size: 0.34722222em; } .katex .sizing.reset-size9.size3, .katex .fontsize-ensurer.reset-size9.size3 { font-size: 0.40509259em; } .katex .sizing.reset-size9.size4, .katex .fontsize-ensurer.reset-size9.size4 { font-size: 0.46296296em; } .katex .sizing.reset-size9.size5, .katex .fontsize-ensurer.reset-size9.size5 { font-size: 0.52083333em; } .katex .sizing.reset-size9.size6, .katex .fontsize-ensurer.reset-size9.size6 { font-size: 0.5787037em; } .katex .sizing.reset-size9.size7, .katex .fontsize-ensurer.reset-size9.size7 { font-size: 0.69444444em; } .katex .sizing.reset-size9.size8, .katex .fontsize-ensurer.reset-size9.size8 { font-size: 0.83333333em; } .katex .sizing.reset-size9.size9, .katex .fontsize-ensurer.reset-size9.size9 { font-size: 1em; } .katex .sizing.reset-size9.size10, .katex .fontsize-ensurer.reset-size9.size10 { font-size: 1.20023148em; } .katex .sizing.reset-size9.size11, .katex .fontsize-ensurer.reset-size9.size11 { font-size: 1.43981481em; } .katex .sizing.reset-size10.size1, .katex .fontsize-ensurer.reset-size10.size1 { font-size: 0.24108004em; } .katex .sizing.reset-size10.size2, .katex .fontsize-ensurer.reset-size10.size2 { font-size: 0.28929605em; } .katex .sizing.reset-size10.size3, .katex .fontsize-ensurer.reset-size10.size3 { font-size: 0.33751205em; } .katex .sizing.reset-size10.size4, .katex .fontsize-ensurer.reset-size10.size4 { font-size: 0.38572806em; } .katex .sizing.reset-size10.size5, .katex .fontsize-ensurer.reset-size10.size5 { font-size: 0.43394407em; } .katex .sizing.reset-size10.size6, .katex .fontsize-ensurer.reset-size10.size6 { font-size: 0.48216008em; } .katex .sizing.reset-size10.size7, .katex .fontsize-ensurer.reset-size10.size7 { font-size: 0.57859209em; } .katex .sizing.reset-size10.size8, .katex .fontsize-ensurer.reset-size10.size8 { font-size: 0.69431051em; } .katex .sizing.reset-size10.size9, .katex .fontsize-ensurer.reset-size10.size9 { font-size: 0.83317261em; } .katex .sizing.reset-size10.size10, .katex .fontsize-ensurer.reset-size10.size10 { font-size: 1em; } .katex .sizing.reset-size10.size11, .katex .fontsize-ensurer.reset-size10.size11 { font-size: 1.19961427em; } .katex .sizing.reset-size11.size1, .katex .fontsize-ensurer.reset-size11.size1 { font-size: 0.20096463em; } .katex .sizing.reset-size11.size2, .katex .fontsize-ensurer.reset-size11.size2 { font-size: 0.24115756em; } .katex .sizing.reset-size11.size3, .katex .fontsize-ensurer.reset-size11.size3 { font-size: 0.28135048em; } .katex .sizing.reset-size11.size4, .katex .fontsize-ensurer.reset-size11.size4 { font-size: 0.32154341em; } .katex .sizing.reset-size11.size5, .katex .fontsize-ensurer.reset-size11.size5 { font-size: 0.36173633em; } .katex .sizing.reset-size11.size6, .katex .fontsize-ensurer.reset-size11.size6 { font-size: 0.40192926em; } .katex .sizing.reset-size11.size7, .katex .fontsize-ensurer.reset-size11.size7 { font-size: 0.48231511em; } .katex .sizing.reset-size11.size8, .katex .fontsize-ensurer.reset-size11.size8 { font-size: 0.57877814em; } .katex .sizing.reset-size11.size9, .katex .fontsize-ensurer.reset-size11.size9 { font-size: 0.69453376em; } .katex .sizing.reset-size11.size10, .katex .fontsize-ensurer.reset-size11.size10 { font-size: 0.83360129em; } .katex .sizing.reset-size11.size11, .katex .fontsize-ensurer.reset-size11.size11 { font-size: 1em; } .katex .delimsizing.size1 { font-family: KaTeX_Size1; } .katex .delimsizing.size2 { font-family: KaTeX_Size2; } .katex .delimsizing.size3 { font-family: KaTeX_Size3; } .katex .delimsizing.size4 { font-family: KaTeX_Size4; } .katex .delimsizing.mult .delim-size1 > span { font-family: KaTeX_Size1; } .katex .delimsizing.mult .delim-size4 > span { font-family: KaTeX_Size4; } .katex .nulldelimiter { display: inline-block; width: 0.12em; } .katex .delimcenter { position: relative; } .katex .op-symbol { position: relative; } .katex .op-symbol.small-op { font-family: KaTeX_Size1; } .katex .op-symbol.large-op { font-family: KaTeX_Size2; } .katex .op-limits > .vlist-t { text-align: center; } .katex .accent > .vlist-t { text-align: center; } .katex .accent .accent-body { width: 0; position: relative; } .katex .overlay { display: block; } .katex .mtable .vertical-separator { display: inline-block; margin: 0 -0.125em; width: 0.25em; } .katex .mtable .arraycolsep { display: inline-block; } .katex .mtable .col-align-c > .vlist-t { text-align: center; } .katex .mtable .col-align-l > .vlist-t { text-align: left; } .katex .mtable .col-align-r > .vlist-t { text-align: right; } .katex .svg-align { text-align: left; } .katex svg { display: block; position: absolute; width: 100%; fill: currentColor; stroke: currentColor; fill-rule: nonzero; fill-opacity: 1; stroke-width: 1; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-dasharray: none; stroke-dashoffset: 0; stroke-opacity: 1; } .katex svg path { stroke: none; } .katex .vertical-separator svg { width: 0.25em; } .katex .stretchy { width: 100%; display: block; } .katex .stretchy:before, .katex .stretchy:after { content: \"\"; } .katex .hide-tail { width: 100%; position: relative; overflow: hidden; } .katex .halfarrow-left { position: absolute; left: 0; width: 50.1%; overflow: hidden; } .katex .halfarrow-right { position: absolute; right: 0; width: 50%; overflow: hidden; } .katex .brace-left { position: absolute; left: 0; width: 25.1%; overflow: hidden; } .katex .brace-center { position: absolute; left: 25%; width: 50%; overflow: hidden; } .katex .brace-right { position: absolute; right: 0; width: 25.1%; overflow: hidden; } .katex .x-arrow-pad { padding: 0 0.5em; } .katex .x-arrow, .katex .mover, .katex .munder { text-align: center; } .katex .boxpad { padding: 0 0.3em 0 0.3em; } .katex .fbox { box-sizing: border-box; border: 0.04em solid black; } .katex .fcolorbox { box-sizing: border-box; border: 0.04em solid; } .katex .cancel-pad { padding: 0 0.2em 0 0.2em; } .katex .mord + .cancel-lap, .katex .mbin + .cancel-lap { margin-left: -0.2em; } .katex .cancel-lap + .mord, .katex .cancel-lap + .mbin, .katex .cancel-lap + .msupsub { margin-left: -0.2em; } .katex .sout { border-bottom-style: solid; border-bottom-width: 0.08em; } #free-reward-panel .reward-users-modal main { padding: 0; } @charset \"UTF-8\"; /* * 变量 */ .reward-note-modal .v-modal { width: 620px; text-align: center; } .reward-note-modal .v-modal form { margin: 0 auto 25px auto; padding: 0 40px; } .reward-note-modal .v-modal .reward-intro { margin-top: 20px; margin-bottom: 20px; font-size: 16px; } .reward-note-modal .v-modal .reward-intro .avatar { cursor: default !important; width: 36px; height: 36px; margin-right: 10px; display: inline-block; } .reward-note-modal .v-modal .reward-intro .intro { margin-right: 5px; font-weight: bold; vertical-align: middle; } .reward-note-modal .v-modal .reward-intro i { color: #EA6F5A; vertical-align: middle; } .reward-note-modal .v-modal .main-inputs { margin: 25px 0; } .reward-note-modal .v-modal .main-inputs .amount-group { margin: 0 -5px; } .reward-note-modal .v-modal .main-inputs .amount-group input { display: none; } .reward-note-modal .v-modal .main-inputs .amount-group input:checked + .option { color: #EA6F5A; border-color: #EA6F5A; } .reward-note-modal .v-modal .main-inputs .amount-group .custom-amount:checked + .option .custom-text { opacity: 0; } .reward-note-modal .v-modal .main-inputs .amount-group .custom-amount:checked + .option .custom-amount-input { opacity: 1; } .reward-note-modal .v-modal .main-inputs .amount-group .option { position: relative; margin: 0 5px 15px; width: 156px; height: 56px; line-height: 54px; border: 1px solid #E6E6E6; border-radius: 4px; font-weight: normal; color: #999999; cursor: pointer; } .reward-note-modal .v-modal .main-inputs .amount-group .option i { font-size: 16px; vertical-align: middle; } .reward-note-modal .v-modal .main-inputs .amount-group .option .amount { font-size: 28px; vertical-align: middle; } .reward-note-modal .v-modal .main-inputs .amount-group .option .piece { font-size: 13px; vertical-align: sub; } .reward-note-modal .v-modal .main-inputs .amount-group .option .custom-amount-input { position: absolute; top: 0; z-index: -1; width: 100%; opacity: 0; } .reward-note-modal .v-modal .main-inputs .amount-group .option .custom-amount-input i { position: absolute; top: 0; left: 10px; } .reward-note-modal .v-modal .main-inputs .amount-group .option .custom-amount-input .piece { position: absolute; top: 4px; right: 10px; } .reward-note-modal .v-modal .main-inputs .amount-group .option .custom-amount-input input { display: block; margin: 0 auto; width: 80px; height: 54px; line-height: 54px; border: none; font-size: 28px; text-align: center; background: transparent; -moz-appearance: textfield; } .reward-note-modal .v-modal .main-inputs .amount-group .option .custom-amount-input input::-webkit-outer-spin-button, .reward-note-modal .v-modal .main-inputs .amount-group .option .custom-amount-input input::-webkit-inner-spin-button { -webkit-appearance: none !important; } .reward-note-modal .v-modal .main-inputs .message { padding: 15px 20px; margin-bottom: 0; font-size: 14px; border: 1px solid #E6E6E6; color: #333333; border-radius: 4px; background-color: rgba(180, 180, 180, 0.1); } .reward-note-modal .v-modal .main-inputs .message textarea { width: 100%; height: 44px; padding: 0; margin: 0; resize: none; background: none !important; border: none !important; -webkit-box-sizing: border-box; box-sizing: border-box; -webkit-box-shadow: none; box-shadow: none; } .reward-note-modal .v-modal .main-inputs .message textarea:focus { outline: none; } .reward-note-modal .v-modal .reward-info .amount { font-size: 28px; font-weight: bold; color: #EA6F5A; } .reward-note-modal .v-modal .reward-info .pay-method { font-size: 14px; } .reward-note-modal .v-modal .reward-info .pay-method a { color: #3194D0; } .reward-note-modal .v-modal .choose-pay { margin: 0 -5px; } .reward-note-modal .v-modal .choose-pay input { display: none; } .reward-note-modal .v-modal .choose-pay input:checked + .option { color: #EA6F5A; border-color: #EA6F5A; } .reward-note-modal .v-modal .choose-pay .option { margin: 20px 5px 10px; width: 156px; height: 56px; line-height: 54px; text-align: center; border: 1px solid #E6E6E6; border-radius: 4px; cursor: pointer; } .reward-note-modal .v-modal .choose-pay .option img { height: 30px; } .reward-note-modal .v-modal .choose-pay .option img.day.alipay, .reward-note-modal .v-modal .choose-pay .option img.night.alipay { min-width: 85px; } .reward-note-modal .v-modal .choose-pay .option img.day.wechat, .reward-note-modal .v-modal .choose-pay .option img.night.wechat { min-width: 112px; } .reward-note-modal .v-modal .choose-pay .option img.night { display: none; } .reward-note-modal .v-modal .choose-pay .tooltip { width: 230px; } .reward-note-modal .v-modal .modal-footer { padding: 0 15px 20px; border: none; background-color: transparent; text-align: center; } .reward-note-modal .v-modal .modal-footer .btn { padding: 8px 45px; font-size: 24px; } .reward-note-modal .v-modal .btn-pay { padding: 8px 25px; font-size: 16px; color: #ffffff; background-color: #F5A623; } .weixin-pay, .success-pay { text-align: center; } .weixin-pay .v-modal, .success-pay .v-modal { width: 350px; } .weixin-pay .ic-successed, .success-pay .ic-successed { font-size: 60px; color: #3db922; } .weixin-pay h2, .weixin-pay h3, .success-pay h2, .success-pay h3 { margin-bottom: 20px; color: #333333; } .weixin-pay h2, .success-pay h2 { margin: 0 0 40px 0; font-size: 24px; } .weixin-pay .bind-text, .success-pay .bind-text { position: relative; margin-bottom: 30px; font-size: 14px; color: #999999; } .weixin-pay .bind-text:before, .weixin-pay .bind-text:after, .success-pay .bind-text:before, .success-pay .bind-text:after { content: \"\"; border-top: 1px solid #999; display: block; position: absolute; width: 40px; top: 8px; } .weixin-pay .bind-text:before, .success-pay .bind-text:before { left: 30px; } .weixin-pay .bind-text:after, .success-pay .bind-text:after { right: 30px; } .weixin-pay .share-bind, .success-pay .share-bind { display: block; margin-bottom: 30px; } .weixin-pay .share-bind i, .success-pay .share-bind i { margin-right: 4px; font-size: 22px; vertical-align: middle; } .weixin-pay .share-bind.wechat i, .success-pay .share-bind.wechat i { color: #00BB29; } .weixin-pay .share-bind.weibo i, .success-pay .share-bind.weibo i { color: #E05244; } .weixin-pay .wx-qr-code, .success-pay .wx-qr-code { display: inline-block; } .weixin-pay .wx-qr-code img, .success-pay .wx-qr-code img { margin: 0 auto; padding: 10px; width: 200px; background-color: #ffffff; } .weixin-pay .pay-amount, .success-pay .pay-amount { margin: 20px 0; color: #787878; } .weixin-pay .pay-amount span, .success-pay .pay-amount span { color: #F5A623; } @charset \"UTF-8\"; /* * 变量 */ .v-modal-wrap { position: fixed; left: 0; top: 0; right: 0; bottom: 0; z-index: 9999; background-color: transparent; } .v-modal-wrap.modal-leave-active { -webkit-transition: opacity 0.3s; -o-transition: opacity 0.3s; transition: opacity 0.3s; } .v-modal-wrap.modal-enter-active .v-modal-mask, .v-modal-wrap.modal-leave-active .v-modal-mask { opacity: 0; } .v-modal-wrap.modal-enter-active .v-modal, .v-modal-wrap.modal-leave-active .v-modal { -webkit-transform: translate(-50%, -70%); -ms-transform: translate(-50%, -70%); transform: translate(-50%, -70%); opacity: 0; } .v-modal-wrap .v-modal-mask { background-color: rgba(255, 255, 255, 0.7); position: absolute; left: 0; right: 0; top: 0; bottom: 0; -webkit-transition: opacity 0.3s; -o-transition: opacity 0.3s; transition: opacity 0.3s; opacity: 1; } .v-modal-wrap .v-modal { position: absolute; left: 50%; top: 50%; -webkit-transform: translate(-50%, -50%); -ms-transform: translate(-50%, -50%); transform: translate(-50%, -50%); border-radius: 6px; border: 1px solid rgba(0, 0, 0, 0.1); background-color: #fff; -webkit-box-shadow: 0 5px 25px rgba(0, 0, 0, 0.1); box-shadow: 0 5px 25px rgba(0, 0, 0, 0.1); -webkit-transition: opacity 0.3s, -webkit-transform 0.3s; transition: opacity 0.3s, -webkit-transform 0.3s; -o-transition: opacity 0.3s, transform 0.3s; transition: opacity 0.3s, transform 0.3s; transition: opacity 0.3s, transform 0.3s, -webkit-transform 0.3s; opacity: 1; display: -webkit-box; display: -webkit-flex; display: -ms-flexbox; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; -webkit-flex-direction: column; -ms-flex-direction: column; flex-direction: column; overflow: hidden; } .v-modal-wrap .v-modal > header:before, .v-modal-wrap .v-modal > header:after, .v-modal-wrap .v-modal > main:before, .v-modal-wrap .v-modal > main:after, .v-modal-wrap .v-modal > footer:before, .v-modal-wrap .v-modal > footer:after { content: ''; clear: both; display: table; } .v-modal-wrap .v-modal > header { padding: 20px; border-bottom: 1px solid #F0F0F0; } .v-modal-wrap .v-modal > header h4 { margin: 0; color: #333; text-align: left; } .v-modal-wrap .v-modal .close { position: absolute; right: 16px; top: 20px; font-size: 26px; line-height: 20px; color: rgba(0, 0, 0, 0.8); } .v-modal-wrap .v-modal .close:hover { color: #000000; } .v-modal-wrap .v-modal > main { padding: 20px 20px 20px 20px; font-size: 15px; color: #333; -webkit-box-flex: 1; -webkit-flex-grow: 1; -ms-flex-positive: 1; flex-grow: 1; overflow-x: hidden; overflow-y: auto; } .v-modal-wrap .v-modal > footer { padding: 20px; background-color: #fff; } .v-modal-wrap .v-modal > footer button { padding: 0; margin: 0; background-color: transparent; border: 0; float: right; } .v-modal-wrap .v-modal > footer button:focus { outline: 0; } .v-modal-wrap .v-modal > footer .submit { padding: 4px 12px; border: 1px solid; border-radius: 20px; } .v-modal-wrap .v-modal > footer .cancel { margin-top: 5px; } .v-modal-wrap .v-modal > footer .cancel:hover { color: #333333; } .reader-night-mode .v-modal-wrap .v-modal-mask { background-color: rgba(63, 63, 63, 0.7); } .reader-night-mode .v-modal-wrap .v-modal { background-color: #3f3f3f; } .reader-night-mode .v-modal-wrap .v-modal header { border-color: #2F2F2F; } .reader-night-mode .v-modal-wrap .v-modal header h4 { color: #C8C8C8; } .reader-night-mode .v-modal-wrap .v-modal .close { color: #C8C8C8; } .reader-night-mode .v-modal-wrap .v-modal .close:hover { color: #ffffff; } .reader-night-mode .v-modal-wrap .v-modal main { color: #C8C8C8; } .reader-night-mode .v-modal-wrap .v-modal footer { background-color: #3f3f3f; } .reader-night-mode .v-modal-wrap .v-modal footer .cancel:hover { color: #C8C8C8; } @charset \"UTF-8\"; /* * 变量 */ .like[data-v-6ddd02c6] { display: inline-block; } .like .like-group[data-v-6ddd02c6] { position: relative; padding: 13px 0 15px 0; font-size: 0; border: 1px solid #EA6F5A; border-radius: 40px; } .like .like-group[data-v-6ddd02c6]:hover { background-color: rgba(236, 97, 73, 0.05); } .like .like-group .btn-like[data-v-6ddd02c6] { display: inline-block; font-size: 19px; } .like .like-group .btn-like[data-v-6ddd02c6]:before { content: ''; position: absolute; left: 12px; top: 2px; width: 50px; height: 50px; background-image: url(//cdn2.jianshu.io/assets/web/like_animation_steps-62a00a7b52377d3069927cdb8e61fd34.png); background-position: left; background-repeat: no-repeat; background-size: 1000px 50px; } .like .like-group .btn-like a[data-v-6ddd02c6] { position: relative; padding: 18px 30px 18px 55px; color: #EA6F5A; } .like .like-group .modal-wrap[data-v-6ddd02c6] { font-size: 18px; border-left: 1px solid rgba(236, 97, 73, 0.4); display: inline-block; margin-left: -15px; } .like .like-group .modal-wrap a[data-v-6ddd02c6] { color: #EA6F5A; padding: 18px 26px 18px 18px; } .like .like-group.like-animation[data-v-6ddd02c6], .like .like-group.active[data-v-6ddd02c6] { background-color: #EA6F5A; } .like .like-group.like-animation .btn-like a[data-v-6ddd02c6], .like .like-group.active .btn-like a[data-v-6ddd02c6] { color: white; } .like .like-group.like-animation .modal-wrap[data-v-6ddd02c6], .like .like-group.active .modal-wrap[data-v-6ddd02c6] { border-left: 1px solid white; } .like .like-group.like-animation .modal-wrap a[data-v-6ddd02c6], .like .like-group.active .modal-wrap a[data-v-6ddd02c6] { color: white; } .like .like-group.like-animation .btn-like[data-v-6ddd02c6]:before { -webkit-animation: likeBlast-data-v-6ddd02c6 0.6s 1 steps(19); animation: likeBlast-data-v-6ddd02c6 0.6s 1 steps(19); background-position: right; } @-webkit-keyframes likeBlast { 0% { background-position: left; } 100% { background-position: right; } } @keyframes likeBlast-data-v-6ddd02c6 { 0% { background-position: left; } 100% { background-position: right; } } .like .like-group.active .btn-like[data-v-6ddd02c6]:before { background-position: right; } @charset \"UTF-8\"; /* * 变量 */ .main { position: relative; margin: 0 auto; padding: 0 0 30px 0; width: 620px; } .main .title { padding-left: 8px; border-left: 3px solid #EA6F5A; line-height: 1; font-size: 15px; } .main .collection-settings { position: absolute; top: 2px; right: 0; font-size: 13px; color: #A0A0A0; } .main .collection-settings span { padding-left: 4px; } .main .include-collection { width: 100%; padding-top: 20px; display: -webkit-box; display: -webkit-flex; display: -ms-flexbox; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; -webkit-flex-direction: row; -ms-flex-direction: row; flex-direction: row; -webkit-box-pack: start; -webkit-justify-content: flex-start; -ms-flex-pack: start; justify-content: flex-start; -webkit-box-align: center; -webkit-align-items: center; -ms-flex-align: center; align-items: center; -webkit-flex-wrap: wrap; -ms-flex-wrap: wrap; flex-wrap: wrap; } .main .include-collection .item { display: inline-block; margin: 0 12px 12px 0; min-height: 32px; background-color: white; border: 1px solid #DCDCDC; border-radius: 4px; vertical-align: top; overflow: hidden; } .main .include-collection .item img { width: 32px; height: 32px; } .main .include-collection .item .name { display: inline-block; padding: 0 10px; font-size: 14px; } .main .include-collection .add-collection-wrap { margin: 0 12px 12px 0; } .main .include-collection .add-collection { padding: 8px 12px; font-size: 14px; border: 1px solid #DCDCDC; border-radius: 4px; } .main .include-collection .add-collection i { margin-right: 4px; color: #969696; } .main .recommend-note a { position: relative; margin: 20px 2px 0 0; width: 200px; height: 160px; display: inline-block; } .main .recommend-note a:after { content: \"\"; position: absolute; width: 200px; height: 160px; border-radius: 0 0 4px 4px; -webkit-box-shadow: inset 0px -80px 50px -22px rgba(0, 0, 0, 0.6); box-shadow: inset 0px -80px 50px -22px rgba(0, 0, 0, 0.6); top: 0; left: 0; z-index: 1; } .main .recommend-note .name { position: absolute; bottom: 40px; left: 10px; right: 10px; font-size: 17px; font-weight: bold; color: #ffffff; z-index: 2; } .main .recommend-note .author { position: absolute; bottom: 10px; left: 10px; right: 10px; z-index: 2; } .main .recommend-note .avatar { width: 20px; height: 20px; display: inline-block; } .main .recommend-note .avatar img { border-radius: 50%; } .main .recommend-note .author-name { font-size: 12px; color: #ffffff; display: inline-block; vertical-align: -1px; } .main .show-more { margin: 0 12px 12px 0; font-size: 14px; color: #A0A0A0; } #featured-comment-list { margin-top: 30px; margin-bottom: -15px; } @charset \"UTF-8\"; /* * 变量 */ .pc-bind-phone-modal .modal-content, .pc-bind-phone-modal .modal-body { overflow: visible; } .pc-bind-phone-modal .dropdown-menu { max-height: 300px; overflow: auto; } .pc-bind-phone-modal .dropdown-menu .tag { background-color: #efefef; color: #4A4A4A; height: 28px; line-height: 28px; padding-left: 25px; font-size: 12px; } .reader-night-mode .pc-bind-phone-modal .dropdown-menu .tag { background-color: #2F2F2F; color: #999999; } @charset \"UTF-8\"; /* * 变量 */ .tips-card-loading[data-v-f3bf5228], .tips-card[data-v-f3bf5228] { width: 460px; position: relative; left: 0; top: 0; border-radius: 6px; -webkit-box-sizing: border-box; box-sizing: border-box; background-color: #ffffff; -webkit-box-shadow: 0 5px 25px rgba(0, 0, 0, 0.1); box-shadow: 0 5px 25px rgba(0, 0, 0, 0.1); border: 1px solid #d9d9d9; } .tips-card-loading[data-v-f3bf5228] { height: 200px; display: -webkit-box; display: -webkit-flex; display: -ms-flexbox; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; -webkit-flex-direction: row; -ms-flex-direction: row; flex-direction: row; -webkit-box-pack: center; -webkit-justify-content: center; -ms-flex-pack: center; justify-content: center; -webkit-box-align: center; -webkit-align-items: center; -ms-flex-align: center; align-items: center; position: relative; } .tips-card-loading div[data-v-f3bf5228] { background-color: #EAEAEA; } .tips-card-loading .avatar[data-v-f3bf5228] { width: 72px !important; height: 72px !important; border-radius: 50%; position: absolute; left: 20px; top: 20px; } .tips-card-loading .name[data-v-f3bf5228] { width: 120px; height: 20px; position: absolute; left: 110px; top: 31px; } .tips-card-loading .content[data-v-f3bf5228] { position: absolute; left: 110px; top: 62px; width: 238px; height: 39.2px; background-color: transparent; } .tips-card-loading .content .text[data-v-f3bf5228], .tips-card-loading .content .text-delay[data-v-f3bf5228] { height: 14px; position: absolute; left: 0; width: 100%; } .tips-card-loading .content .text[data-v-f3bf5228] { top: 2px; -webkit-animation: loading-data-v-f3bf5228 1s ease-in-out infinite; animation: loading-data-v-f3bf5228 1s ease-in-out infinite; } .tips-card-loading .content .text-delay[data-v-f3bf5228] { bottom: 3px; -webkit-animation: loading-data-v-f3bf5228 1s ease-in-out -0.5s infinite; animation: loading-data-v-f3bf5228 1s ease-in-out -0.5s infinite; } @keyframes loading-data-v-f3bf5228 { 0% { width: 60%; } 50% { width: 100%; } 100% { width: 60%; } } @-webkit-keyframes loading { 0% { width: 60%; } 50% { width: 100%; } 100% { width: 60%; } } .tips-card-loading .meta[data-v-f3bf5228] { width: 30px; height: 42px; position: absolute; bottom: 20px; background-color: transparent; } .tips-card-loading .meta.meta-1[data-v-f3bf5228] { left: 30px; } .tips-card-loading .meta.meta-2[data-v-f3bf5228] { left: 90px; } .tips-card-loading .meta.meta-3[data-v-f3bf5228] { left: 150px; } .tips-card-loading .meta .count[data-v-f3bf5228], .tips-card-loading .meta .type[data-v-f3bf5228] { position: absolute; } .tips-card-loading .meta .count[data-v-f3bf5228] { left: -5px; top: 6px; height: 18px; width: 40px; } .tips-card-loading .meta .type[data-v-f3bf5228] { left: 1px; bottom: 2px; height: 13px; width: 28px; } .tips-card-loading .button[data-v-f3bf5228] { position: absolute; bottom: 17px; width: 90px; height: 40px; border-radius: 40px; } .tips-card-loading .message[data-v-f3bf5228] { right: 120px; } .tips-card-loading .follow[data-v-f3bf5228] { right: 17px; } .tips-card[data-v-f3bf5228] { z-index: 10; } .tips-card .card-content[data-v-f3bf5228] { padding: 20px 20px 0 20px; } .tips-card .card-content .summary[data-v-f3bf5228] { padding: 8px 0 20px 90px; min-height: 92px; position: relative; } .tips-card .card-content .summary .avatar[data-v-f3bf5228] { position: absolute; left: 0; top: 0; width: 72px; height: 72px; cursor: pointer; border-radius: 50%; background-color: #EAEAEA; background-position: center; background-repeat: no-repeat; background-size: cover; } .tips-card .card-content .summary .name[data-v-f3bf5228] { height: 26px; margin-right: 3px; margin-bottom: 8px; display: -webkit-box; display: -webkit-flex; display: -ms-flexbox; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; -webkit-flex-direction: row; -ms-flex-direction: row; flex-direction: row; -webkit-box-pack: start; -webkit-justify-content: flex-start; -ms-flex-pack: start; justify-content: flex-start; -webkit-box-align: center; -webkit-align-items: center; -ms-flex-align: center; align-items: center; } .tips-card .card-content .summary .name .nickname[data-v-f3bf5228] { color: #333333; font-size: 19px; font-weight: bold; overflow: hidden; -o-text-overflow: ellipsis; text-overflow: ellipsis; white-space: nowrap; cursor: pointer; } .tips-card .card-content .summary .name .sex[data-v-f3bf5228], .tips-card .card-content .summary .name .badge[data-v-f3bf5228] { -webkit-flex-shrink: 0; -ms-flex-negative: 0; flex-shrink: 0; display: inline-block; } .tips-card .card-content .summary .name .sex[data-v-f3bf5228] { font-size: 19px; width: 19px; margin: 0 4px; } .tips-card .card-content .summary .intro[data-v-f3bf5228] { overflow: hidden; -o-text-overflow: ellipsis; text-overflow: ellipsis; display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; margin-bottom: 12px; font-size: 14px; line-height: 1.5; color: #333333; } .tips-card .card-content .summary .intro.block[data-v-f3bf5228] { color: #999999; } .tips-card .card-content .summary .list .item[data-v-f3bf5228] { display: block; margin-bottom: 5px; font-size: 13px; color: #999999; cursor: pointer; overflow: hidden; -o-text-overflow: ellipsis; text-overflow: ellipsis; white-space: nowrap; } .tips-card .card-content .summary .list .item i[data-v-f3bf5228] { margin-right: 2px; } .tips-card .card-footer[data-v-f3bf5228] { border-top: 1px solid #F0F0F0; padding: 15px; display: -webkit-box; display: -webkit-flex; display: -ms-flexbox; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; -webkit-flex-direction: row; -ms-flex-direction: row; flex-direction: row; -webkit-box-pack: justify; -webkit-justify-content: space-between; -ms-flex-pack: justify; justify-content: space-between; -webkit-box-align: center; -webkit-align-items: center; -ms-flex-align: center; align-items: center; overflow: hidden; _zoom: 1; } .tips-card .card-footer .profile[data-v-f3bf5228] { width: 198px; overflow: hidden; _zoom: 1; float: left; } .tips-card .card-footer .profile div[data-v-f3bf5228] { float: left; width: 60px; height: 44px; display: -webkit-box; display: -webkit-flex; display: -ms-flexbox; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; -webkit-flex-direction: column; -ms-flex-direction: column; flex-direction: column; -webkit-box-pack: center; -webkit-justify-content: center; -ms-flex-pack: center; justify-content: center; -webkit-box-align: center; -webkit-align-items: center; -ms-flex-align: center; align-items: center; } .tips-card .card-footer .profile div span[data-v-f3bf5228] { display: block; width: 100%; text-align: center; } .tips-card .card-footer .profile div .type[data-v-f3bf5228] { font-size: 13px; color: #999999; } .tips-card .card-footer .profile div .count[data-v-f3bf5228] { font-size: 18px; color: #333333; } .tips-card .card-footer .social[data-v-f3bf5228] { display: -webkit-box; display: -webkit-flex; display: -ms-flexbox; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; -webkit-flex-direction: row; -ms-flex-direction: row; flex-direction: row; -webkit-box-pack: end; -webkit-justify-content: flex-end; -ms-flex-pack: end; justify-content: flex-end; -webkit-box-align: center; -webkit-align-items: center; -ms-flex-align: center; align-items: center; float: right; overflow: hidden; _zoom: 1; } .tips-card .card-footer .social .message[data-v-f3bf5228] { border: 1px solid rgba(59, 194, 29, 0.7); color: #42C02E; margin: 0 10px 0 16px; font-size: 15px; padding: 8px 0; width: 90px; border-radius: 40px; text-align: center; cursor: pointer; float: left; -webkit-box-sizing: border-box; box-sizing: border-box; } .tips-card .card-footer .social .message[data-v-f3bf5228]:hover { border: 1px solid #42C02E; color: #42C02E; background-color: rgba(59, 194, 29, 0.05); } .tips-card .card-footer .social .user-follow-button[data-v-f3bf5228] { font-size: 15px; padding: 8px 0; width: 100px; } .arrow[data-v-f3bf5228] { position: absolute; width: 100%; height: 10px; left: 0; z-index: 20; pointer-events: none; } .arrow i[data-v-f3bf5228] { position: absolute; left: 50%; margin: 0; margin-left: -10px; border-width: 10px; border-color: transparent; padding: 0; } .arrow em[data-v-f3bf5228] { display: block; position: absolute; left: -9px; border-width: 9px; border-color: transparent; margin: 0; padding: 0; } .arrow-type-top[data-v-f3bf5228] { bottom: 1px; } .arrow-type-top i[data-v-f3bf5228] { border-top-color: #d9d9d9; border-style: solid dashed dashed; top: 0; } .arrow-type-top em[data-v-f3bf5228] { border-style: solid dashed dashed; border-top-color: #ffffff; top: -10px; } .arrow-type-bottom[data-v-f3bf5228] { top: 1px; } .arrow-type-bottom i[data-v-f3bf5228] { border-bottom-color: #d9d9d9; border-style: dashed dashed solid; top: -10px; } .arrow-type-bottom em[data-v-f3bf5228] { border-style: dashed dashed solid; border-bottom-color: #ffffff; top: -8px; } .reader-night-mode .tips-card-loading[data-v-f3bf5228] { background-color: #3F3F3F; border-color: #2F2F2F; } .reader-night-mode .tips-card-loading .avatar[data-v-f3bf5228], .reader-night-mode .tips-card-loading .name[data-v-f3bf5228], .reader-night-mode .tips-card-loading .text[data-v-f3bf5228], .reader-night-mode .tips-card-loading .text-delay[data-v-f3bf5228], .reader-night-mode .tips-card-loading .count[data-v-f3bf5228], .reader-night-mode .tips-card-loading .type[data-v-f3bf5228], .reader-night-mode .tips-card-loading .button[data-v-f3bf5228] { background-color: #545454; } .reader-night-mode .tips-card[data-v-f3bf5228] { background-color: #3F3F3F; border-color: #2F2F2F; } .reader-night-mode .tips-card .card-content .summary .name .nickname[data-v-f3bf5228] { color: #C8C8C8; } .reader-night-mode .tips-card .card-content .summary .name .nickname[data-v-f3bf5228]:hover { color: #ffffff; } .reader-night-mode .tips-card .card-content .summary .intro[data-v-f3bf5228] { color: #C8C8C8; } .reader-night-mode .tips-card .card-footer[data-v-f3bf5228] { border-top-color: #2F2F2F; } .reader-night-mode .tips-card .card-footer .profile div .count[data-v-f3bf5228] { color: #C8C8C8; } .reader-night-mode .arrow.arrow-type-top em[data-v-f3bf5228] { border-top-color: #3F3F3F; } .reader-night-mode .arrow.arrow-type-top i[data-v-f3bf5228] { border-top-color: #2F2F2F; } .reader-night-mode .arrow.arrow-type-bottom em[data-v-f3bf5228] { border-bottom-color: #3F3F3F; } .reader-night-mode .arrow.arrow-type-bottom i[data-v-f3bf5228] { border-bottom-color: #2F2F2F; } .v-tooltip-container, .v-tooltip-content { display: inline-block; } .v-tooltip-container { position: relative; } .v-tooltip-container .v-tooltip-content { -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; } .v-tooltip-container .v-tooltip-wrap { position: absolute; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-top { bottom: 100%; left: 50%; -webkit-transform: translateX(-50%); -ms-transform: translateX(-50%); transform: translateX(-50%); padding-bottom: 10px; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-bottom { top: 100%; left: 50%; -webkit-transform: translateX(-50%); -ms-transform: translateX(-50%); transform: translateX(-50%); padding-top: 10px; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-left { top: 50%; right: 100%; -webkit-transform: translateY(-50%); -ms-transform: translateY(-50%); transform: translateY(-50%); padding-right: 10px; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-right { top: 50%; left: 100%; -webkit-transform: translateY(-50%); -ms-transform: translateY(-50%); transform: translateY(-50%); padding-left: 10px; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-top-start { bottom: 100%; left: 0; padding-bottom: 10px; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-top-end { bottom: 100%; right: 0; padding-bottom: 10px; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-bottom-start { top: 100%; left: 0; padding-top: 10px; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-bottom-end { top: 100%; right: 0; padding-top: 10px; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-left-start { top: 0; right: 100%; padding-right: 10px; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-left-end { bottom: 0; right: 100%; padding-right: 10px; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-right-start { top: 0; left: 100%; padding-left: 10px; } .v-tooltip-container .v-tooltip-wrap.v-tooltip-wrap-right-end { bottom: 0; left: 100%; padding-left: 10px; } @charset \"UTF-8\"; /* * 变量 */ .like-button[data-v-cdecbe24] { position: relative; padding-left: 23px; } .like-button[data-v-cdecbe24]:before { content: ''; position: absolute; left: -16px; top: -16px; width: 50px; height: 50px; background-image: url(//cdn2.jianshu.io/assets/web/zan_animation_steps-8d65a474b670eb6a022516f4e0b8e9a4.png); background-position: left; background-repeat: no-repeat; background-size: 1050px 50px; } .like-button[data-v-cdecbe24]:hover:before { background-position: -50px; } .like-button.zan-animation span[data-v-cdecbe24], .like-button.active span[data-v-cdecbe24] { color: #333333; } body.reader-night-mode .like-button.zan-animation span[data-v-cdecbe24], body.reader-night-mode .like-button.active span[data-v-cdecbe24] { color: #C8C8C8; } .like-button.zan-animation[data-v-cdecbe24]:before { -webkit-animation: likeBlast-data-v-cdecbe24 0.6s 1 steps(19); animation: likeBlast-data-v-cdecbe24 0.6s 1 steps(19); background-position: right; } @-webkit-keyframes likeBlast { 0% { background-position: -50px; } 100% { background-position: right; } } @keyframes likeBlast-data-v-cdecbe24 { 0% { background-position: -50px; } 100% { background-position: right; } } .like-button.active[data-v-cdecbe24]:before { background-position: right; } 写文章 注册 登录 夜间模式 开 关 宋体 黑体 简 繁 首页 下载App × 伪分布式 Hadoop 部署 Mac版 SpikeKing 关注 2017.09.03 18:39* 字数 1059 阅读 374评论 1喜欢 1 欢迎Follow我的GitHub, 关注我的简书. 配置Hadoop，单机伪分布式模式，用于学习Hadoop的原理，实际工作仍需要Hadoop集群。设备为Mac操作系统。 Hadoop SSH 开启本机的远程登录，位于 系统偏好设置 -&gt; 共享 SSH 登录本机 ➜ ~ ssh localhost Last login: Sun Sep 3 08:02:53 2017 默认需要键入密码，可以复制已有的SSH密匙至本机的验证密匙，避免每次都需要输入密码。 cat $HOME/.ssh/id_rsa.pub &gt;&gt; $HOME/.ssh/authorized_keys Homebrew 使用Homebrew安装Hadoop，默认会设置一些系统参数，避免手动修改，Homebrew官网。 执行安装命令 ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" 安装失败的卸载命令 ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall)\" /Library/Caches/权限不足，导致错误 ==&gt; Cleaning up /Library/Caches/Homebrew... ==&gt; Migrating /Library/Caches/Homebrew to /Users/wangchenlong/Library/Caches/Homebrew... ==&gt; Deleting /Library/Caches/Homebrew... Warning: Failed to delete /Library/Caches/Homebrew. 修改文件夹归属到当前用户 sudo chown -R $USER /usr/local/* sudo chown -R $USER /Users/wangchenlong/Library/* 安装成功 ➜ ~ brew --version Homebrew 1.3.1 Homebrew/homebrew-core (git revision 1278; last commit 2017-09-02) 在修改用户权限时，导致pip的python实效，需要重新安装pip，报错 pip installation /usr/local/opt/python/bin/python2.7: bad interpreter: No such file or directory 修复pip，参考 重新安装pip curl https://bootstrap.pypa.io/ez_setup.py -o - | sudo python sudo easy_install pip Hadoop安装 使用brew安装hadoop ➜ ~ brew install hadoop ==&gt; Downloading https://www.apache.org/dyn/closer.cgi?path=hadoop/common/hadoop-2.8.1/hadoop-2.8.1.tar.gz ==&gt; Best Mirror http://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/hadoop-2.8.1/hadoop-2.8.1.tar.gz ######################################################################## 100.0% ==&gt; Caveats In Hadoop's config file: /usr/local/opt/hadoop/libexec/etc/hadoop/hadoop-env.sh, /usr/local/opt/hadoop/libexec/etc/hadoop/mapred-env.sh and /usr/local/opt/hadoop/libexec/etc/hadoop/yarn-env.sh $JAVA_HOME has been set to be the output of: /usr/libexec/java_home ==&gt; Summary 🍺 /usr/local/Cellar/hadoop/2.8.1: 25,233 files, 2.1GB, built in 1 minute 1 second Hadoop的安装位置：/usr/local/Cellar/hadoop/2.8.1 显示目录归属的用户，确保为当前用户 ls -lad /usr/local /usr/local/Cellar 为了使用方便，设置Hadoop的环境变量HADOOP_HOME，我使用的Shell是oh-my-zsh，默认的配置是.zshrc，在末尾添加环境变量即可，参考 #Hadoop Settings export HADOOP_HOME=/usr/local/Cellar/hadoop/2.8.1/libexec 测试 ➜ ~ echo $HADOOP_HOME /usr/local/Cellar/hadoop/2.8.1/libexec ➜ ~ vi /etc/hosts，添加本机的地址映射 127.0.0.1 bd01.wangchenlong.org HDFS配置 重启电脑后，Hadoop服务全部关闭，需要重新启动。 进入Hadoop的配置目录 ➜ ~ cd ${HADOOP_HOME}/etc/hadoop ➜ hadoop git:(master) ✗ pwd /usr/local/Cellar/hadoop/2.8.1/libexec/etc/hadoop ➜ hadoop git:(master) ✗ ls capacity-scheduler.xml kms-env.sh configuration.xsl kms-log4j.properties container-executor.cfg kms-site.xml core-site.xml log4j.properties hadoop-env.sh mapred-env.sh hadoop-metrics.properties mapred-queues.xml.template hadoop-metrics2.properties mapred-site.xml hadoop-policy.xml mapred-site.xml.template hdfs-site.xml slaves httpfs-env.sh ssl-client.xml.example httpfs-log4j.properties ssl-server.xml.example httpfs-signature.secret yarn-env.sh httpfs-site.xml yarn-site.xml kms-acls.xml ➜ hadoop git:(master) ✗ 配置HDFS，编辑core-site.xml文件 ➜ hadoop git:(master) ✗ vi core-site.xml ➜ hadoop git:(master) ✗ open core-site.xml 添加两个属性，hadoop.tmp.dir用于存储HDFS的临时文件，fs.default.name用于指定HDFS的访问端口。临时文件，如果使用/tmp文件夹，每次重启电脑都会清空，因此，我们创建永久性质的临时文件夹./Hadoop/opt/data/tmp，提前使用mkdir创建。 &lt;configuration&gt; &lt;property&gt; &lt;name&gt;hadoop.tmp.dir&lt;/name&gt; &lt;!-- 永久存储的tmp文件. --&gt; &lt;value&gt;/Users/wangchenlong/Hadoop/opt/data/tmp/hadoop-${user.name}&lt;/value&gt; &lt;description&gt;A base for other temporary directories.&lt;/description&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;fs.default.name&lt;/name&gt; &lt;value&gt;hdfs://bd01.wangchenlong.org:8020&lt;/value&gt; &lt;/property&gt; &lt;/configuration&gt; 编辑hdfs-site.xml文件，HDFS在存储时的复制数量dfs.replication，我们是单机，只需要存储1份。 &lt;configuration&gt; &lt;property&gt; &lt;name&gt;dfs.replication&lt;/name&gt; &lt;value&gt;1&lt;/value&gt; &lt;/property&gt; &lt;/configuration&gt; 格式化HDFS hdfs namenode -format 如果在临时文件夹./Hadoop/opt/data/tmp/hadoop-wangchenlong/dfs/中，创建了dfs文件夹，则表示格式化成功。检查dfs/name/current文件夹 -rw-r--r-- 1 wangchenlong staff 218 Sep 3 14:36 VERSION -rw-r--r-- 1 wangchenlong staff 329 Sep 3 14:36 fsimage_0000000000000000000 -rw-r--r-- 1 wangchenlong staff 62 Sep 3 14:36 fsimage_0000000000000000000.md5 -rw-r--r-- 1 wangchenlong staff 2 Sep 3 14:36 seen_txid fsimage是持久化存储的文件，fsimage.md5是文件的校验，seen_txid是HDFS的版本 VERSION的信息，namespaceID是NameNode的唯一ID；clusterID是集群ID，NameNode与DataNode的集群ID一致，表示同一个集群 namespaceID=742879587 clusterID=CID-679809f6-9f1f-4d6c-a35f-ac519ad543c2 cTime=1504420584572 storageType=NAME_NODE blockpoolID=BP-1330604992-169.254.59.178-1504420584572 layoutVersion=-63 JPS(Java Virtual Machine Process Status Tool)是JDK提供的一个显示当前所有Java进程pid的命令，也可以用于显示Hadoop的进程信息。 ➜ ~ jps 767 Jps ➜ ~ Hadoop的命令，都位于sbin中，使用hadoop-daemon.sh启动NameNode ➜ ~ cd ${HADOOP_HOME}/sbin ➜ sbin git:(master) ✗ ls distribute-exclude.sh refresh-namenodes.sh stop-all.sh hadoop-daemon.sh slaves.sh stop-balancer.sh hadoop-daemons.sh start-all.sh stop-dfs.sh hdfs-config.sh start-balancer.sh stop-secure-dns.sh httpfs.sh start-dfs.sh stop-yarn.sh kms.sh start-secure-dns.sh yarn-daemon.sh mr-jobhistory-daemon.sh start-yarn.sh yarn-daemons.sh ➜ sbin git:(master) ✗ ./hadoop-daemon.sh start namenode starting namenode, logging to /usr/local/Cellar/hadoop/2.8.1/libexec/logs/hadoop-wangchenlong-namenode-wangchenlong.local.out ➜ sbin git:(master) ✗ jps 840 NameNode 907 Jps ➜ sbin git:(master) ✗ 启动DataNode。如果无法启动DataNode，因为多次格式化NameNode，可能会导致VERSION中的namespaceID不一致，删除hadoop-${user.name}文件夹，重新格式化即可。 ➜ sbin git:(master) ✗ ./hadoop-daemon.sh start datanode starting datanode, logging to /usr/local/Cellar/hadoop/2.8.1/libexec/logs/hadoop-wangchenlong-datanode-wangchenlong.local.out ➜ sbin git:(master) ✗ jps 840 NameNode 984 Jps 启动SecondaryNameNode ➜ sbin git:(master) ✗ ./hadoop-daemon.sh start secondarynamenode starting secondarynamenode, logging to /usr/local/Cellar/hadoop/2.8.1/libexec/logs/hadoop-wangchenlong-secondarynamenode-wangchenlong.local.out ➜ sbin git:(master) ✗ jps 1105 SecondaryNameNode 1139 Jps 840 NameNode 最终情况的Java进程，需要NameNode、DataNode、SecondaryNameNode都存在。 ➜ sbin git:(master) ✗ jps 1105 SecondaryNameNode 2484 DataNode 840 NameNode 2522 Jps 在HDFS上，创建文件夹demo-test，上传一个任意文件wcl.txt。 ➜ sbin git:(master) ✗ hdfs dfs -mkdir /demo-test ➜ sbin git:(master) ✗ hdfs dfs -ls / Found 1 items drwxr-xr-x - wangchenlong supergroup 0 2017-09-03 15:19 /demo-test ➜ ~ hdfs dfs -put wcl.txt /demo-test ➜ ~ hdfs dfs -ls /demo-test Found 1 items -rw-r--r-- 1 wangchenlong supergroup 23 2017-09-03 15:21 /demo-test/wcl.txt ➜ ~ 关闭HDFS的命令汇总 ./hadoop-daemon.sh stop namenode ./hadoop-daemon.sh stop secondarynamenode ./hadoop-daemon.sh stop datanode 启动HDFS的命令汇总 cd $HADOOP_HOME/sbin ./hadoop-daemon.sh start namenode ./hadoop-daemon.sh start secondarynamenode ./hadoop-daemon.sh start datanode 配置Yarn 进入配置目录，复制MapReduce的模板 cd ${HADOOP_HOME}/etc/hadoop cp mapred-site.xml.template mapred-site.xml 编辑mapred-site.xml，MapReduce的框架设置为Yarn。 &lt;configuration&gt; &lt;property&gt; &lt;name&gt;mapreduce.framework.name&lt;/name&gt; &lt;value&gt;yarn&lt;/value&gt; &lt;/property&gt; &lt;/configuration&gt; 配置Yarn的属性，yarn-site.xml。yarn.nodemanager.aux-services是Yarn的NodeManager，用于管理node，使用MR的随机洗牌模式；yarn.resourcemanager.hostname是Yarn的资源管理器（ResourceManager），使用本机地址。 &lt;configuration&gt; &lt;!-- Site specific YARN configuration properties --&gt; &lt;property&gt; &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt; &lt;value&gt;mapreduce_shuffle&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt; &lt;value&gt;bd01.wangchenlong.org&lt;/value&gt; &lt;/property&gt; &lt;/configuration&gt; 启动NodeManager和ResourceManager，先进入命令文件夹，再启动yarn-daemon脚本，最后使用jps检查是否成功。 ➜ sbin git:(master) ✗ ./yarn-daemon.sh start nodemanager starting nodemanager, logging to /usr/local/Cellar/hadoop/2.8.1/libexec/logs/yarn-wangchenlong-nodemanager-wangchenlong.local.out ➜ sbin git:(master) ✗ ./yarn-daemon.sh start resourcemanager starting resourcemanager, logging to /usr/local/Cellar/hadoop/2.8.1/libexec/logs/yarn-wangchenlong-resourcemanager-wangchenlong.local.out ➜ sbin git:(master) ✗ jps 3028 SecondaryNameNode 2966 DataNode 3736 ResourceManager 2905 NameNode 3769 Jps 3661 NodeManager ➜ sbin git:(master) ✗ Yarn的端口是8088，访问 http://bd01.wangchenlong.org:8088/ Yarn MR作业 MR的数据存储使用HDFS，MR的框架使用Yarn，执行MR作业 - 单词统计。 在./Hadoop/opt/data中，创建文本wc.input hadoop mapreduce hive hbase spark storm sqoop hadoop hive spark hadoop 将文件上传至HDFS的demo-test文件夹 ➜ data hdfs dfs -put wc.input /demo-test ➜ data hdfs dfs -ls /demo-test Found 2 items -rw-r--r-- 1 wangchenlong supergroup 71 2017-09-03 16:05 /demo-test/wc.input -rw-r--r-- 1 wangchenlong supergroup 23 2017-09-03 15:21 /demo-test/wcl.txt ➜ data 进入Hadoop的示例文件夹share ➜ data cd ${HADOOP_HOME}/share/hadoop/mapreduce ➜ mapreduce git:(master) ✗ ls hadoop-mapreduce-client-app-2.8.1.jar hadoop-mapreduce-client-jobclient-2.8.1-tests.jar lib hadoop-mapreduce-client-common-2.8.1.jar hadoop-mapreduce-client-jobclient-2.8.1.jar lib-examples hadoop-mapreduce-client-core-2.8.1.jar hadoop-mapreduce-client-shuffle-2.8.1.jar sources hadoop-mapreduce-client-hs-2.8.1.jar hadoop-mapreduce-examples-2.8.1.jar hadoop-mapreduce-client-hs-plugins-2.8.1.jar jdiff ➜ mapreduce git:(master) ✗ 执行MR作业 yarn jar hadoop-mapreduce-examples-2.8.1.jar wordcount /demo-test/wc.input /demo-output/ 查看输出结果 ➜ mapreduce git:(master) ✗ hdfs dfs -cat /demo-output/part-r-00000 17/09/03 16:12:27 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable hadoop 3 hbase 1 hive 2 mapreduce 1 spark 2 sqoop 1 storm 1 ➜ mapreduce git:(master) ✗ 开启Yarn的历史服务 cd ${HADOOP_HOME}/sbin ./mr-jobhistory-daemon.sh start historyserver 停止命令汇总 ./mr-jobhistory-daemon.sh stop historyserver ./yarn-daemon.sh stop nodemanager ./yarn-daemon.sh stop resourcemanager 启动命令汇总 ./yarn-daemon.sh start nodemanager ./yarn-daemon.sh start resourcemanager ./mr-jobhistory-daemon.sh start historyserver MR作业的执行日志，The url to track the job可能无法访问，替换为相应的host即可。 INFO client.RMProxy: Connecting to ResourceManager at bd01.wangchenlong.org/127.0.0.1:8032 INFO input.FileInputFormat: Total input files to process : 1 INFO mapreduce.JobSubmitter: number of splits:1 INFO mapreduce.JobSubmitter: Submitting tokens for job: job_1504434568655_0001 INFO impl.YarnClientImpl: Submitted application application_1504434568655_0001 INFO mapreduce.Job: The url to track the job: http://localhost:8088/proxy/application_1504434568655_0001/ INFO mapreduce.Job: Running job: job_1504434568655_0001 17/09/03 18:30:13 INFO mapreduce.Job: Job job_1504434568655_0001 running in uber mode : false 17/09/03 18:30:13 INFO mapreduce.Job: map 0% reduce 0% 17/09/03 18:30:32 INFO mapreduce.Job: map 100% reduce 0% 17/09/03 18:30:52 INFO mapreduce.Job: map 100% reduce 100% 17/09/03 18:30:53 INFO mapreduce.Job: Job job_1504434568655_0001 completed successfully OK, that's all! Enjoy it! 文章都看到这了, 那就捧个\"钱场\"呗! 赞赏支持 数据挖掘📒 © 著作权归作者所有 举报文章 关注 SpikeKing 写了 103258 字，被 10085 人关注，获得了 4182 个喜欢 美图云视觉技术部 春雨医生 中科院自动化所 北京交通大学 本科及硕士 微信公众号：深度算法 ID：DeepAlgorithm 欢迎Follow我的GitHub: https://github.com/SpikeKing 2018 新作《高级Android开发强化实战》 京东：https://item.jd.com/12385680.html 喜欢 1 下载app生成长微博图片 更多分享 登录 后发表评论 1条评论 只看作者 关闭评论 按时间倒序按时间正序 小H109 2楼 · 2017.09.11 19:14 这种伪分布式部署，后期要扩容要如何扩容？ 赞 回复 被以下专题收入，发现更多相似内容 程序员Python 运维我爱编程 HDFS 随着全球经济的不断发展，大数据时代早已悄悄到来，而Hadoop又是大数据环境的基础，想入门大数据行业首先需要了解Hadoop的知识。2017年年初apache发行了Hadoop3.0，也意味着一直有一群人在对Hadoop不断的做优化，不仅如此，各个Hadoop的商业版本也有... CatherinePlans Hadoop、HBase、Hive、Spark分布式系统架构 Hadoop、HBase、Hive、Spark分布式系统架构，本文通过全套部署方法来让大家深入系统内部以充分理解分布式系统架构和他们之间的关系。 机器学习、数据挖掘等各种大数据处理都离不开各种开源分布式系统，hadoop用户分布式存储和map-reduce计算，spar... 0o失魂鱼o0 hadoop 完全分布式搭建指南 简述 hadoop 集群一共有4种部署模式，详见《hadoop 生态圈介绍》。完全分布式模式将hadoop部署在至少两台机子上，数据块副本的数量通常也设置为2以上，拥有Namenode和Secondary Namenode。 所有四种模式的部署指南见：hadoop 伪分布式... 浊流 Hadoop、HBase、Hive、Spark分布式系统架构 引用：http://www.jianshu.com/p/575b912a4781 Hadoop、HBase、Hive、Spark分布式系统架构，本文通过全套部署方法来让大家深入系统内部以充分理解分布式系统架构和他们之间的关系。 机器学习、数据挖掘等各种大数据处理都离不开各种... 纤尘22 hadoop 伪分布式搭建指南 简述 hadoop 集群一共有4种部署模式，详见《hadoop 生态圈介绍》。伪分布式模式将hadoop安装在一台机器上，通常用来用作实验、开发和调试用。 所有四种模式的部署指南见：hadoop 伪分布式搭建指南hadoop 完全分布式搭建指南hadoop HA高可用集群模... 浊流 河北宣化：公益团队送温暖 蔚州大地献爱心 中国公益在线：（公益记者 冯永军 李宝龙摄影/孙明进）河北宣化讯：2016年10月15日早8点，公益记者随同宣化区公E时代、宣化区爱心公益促进会以及北京黄家村助学小组（公E时代代表）组成蔚县北口村联合助学团队，开始了蔚县助学之旅。在去的途中，由于高速封闭，助学团被迫走上了颠... 中国公益在线 iOS 几种延时执行方法 1 GCD double delayInSeconds = 2.0; // 延时2秒执行返回 dispatch_time_t popTime = dispatch_time(DISPATCH_TIME_NOW, (int64_t)(delayInSeconds * NSEC... 来敲代码 SWIFT3.0 富文本的使用 class funcchangeStringColor(content:String,rang:NSRange,color:UIColor,fontSize:Int) -&gt;NSMutableAttributedString{ letattributeString =NSMu... 害羞的猪 记录高考·day11【17.6.19】 哇刚过十我就给因为“学习繁忙”给忘了 …主要还是在唠嗑吧，每天都超后悔自己这一天没做什么事情，特别是现在自己这么匆忙，总觉得可能别人更重要吧，又给自己带来重创。 晚上说话有点驴头不对马嘴，可能这就是准高三有时的迷茫吧 坐在盾上吃包子 {\"user_signed_in\":false,\"locale\":\"zh-CN\",\"os\":\"mac\",\"read_mode\":\"day\",\"read_font\":\"font2\",\"note_show\":{\"is_author\":false,\"is_following_author\":false,\"is_liked_note\":false,\"follow_state\":0,\"uuid\":\"ec8e77f6-a773-42af-be16-397367d8ad42\"},\"note\":{\"id\":16636676,\"slug\":\"bca08edaf0c8\",\"user_id\":749674,\"notebook_id\":15168437,\"commentable\":true,\"likes_count\":1,\"views_count\":374,\"public_wordage\":1059,\"comments_count\":1,\"featured_comments_count\":0,\"total_rewards_count\":0,\"is_author\":false,\"paid_type\":\"free\",\"paid\":false,\"paid_content_accessible\":false,\"author\":{\"nickname\":\"SpikeKing\",\"total_wordage\":103258,\"followers_count\":10085,\"total_likes_count\":4182}}} (function(){ var bp = document.createElement('script'); var curProtocol = window.location.protocol.split(':')[0]; if (curProtocol === 'https') { bp.src = 'https://zz.bdstatic.com/linksubmit/push.js'; } else { bp.src = 'http://push.zhanzhang.baidu.com/push.js'; } var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(bp, s); })(); #yddContainer{display:block;font-family:Microsoft YaHei;position:relative;width:100%;height:100%;top:-4px;left:-4px;font-size:12px;border:1px solid}#yddTop{display:block;height:22px}#yddTopBorderlr{display:block;position:static;height:17px;padding:2px 28px;line-height:17px;font-size:12px;color:#5079bb;font-weight:bold;border-style:none solid;border-width:1px}#yddTopBorderlr .ydd-sp{position:absolute;top:2px;height:0;overflow:hidden}.ydd-icon{left:5px;width:17px;padding:0px 0px 0px 0px;padding-top:17px;background-position:-16px -44px}.ydd-close{right:5px;width:16px;padding-top:16px;background-position:left -44px}#yddKeyTitle{float:left;text-decoration:none}#yddMiddle{display:block;margin-bottom:10px}.ydd-tabs{display:block;margin:5px 0;padding:0 5px;height:18px;border-bottom:1px solid}.ydd-tab{display:block;float:left;height:18px;margin:0 5px -1px 0;padding:0 4px;line-height:18px;border:1px solid;border-bottom:none}.ydd-trans-container{display:block;line-height:160%}.ydd-trans-container a{text-decoration:none;}#yddBottom{position:absolute;bottom:0;left:0;width:100%;height:22px;line-height:22px;overflow:hidden;background-position:left -22px}.ydd-padding010{padding:0 10px}#yddWrapper{color:#252525;z-index:10001;background:url(chrome-extension://eopjamdnofihpioajgfdikhhbobonhbb/ab20.png);}#yddContainer{background:#fff;border-color:#4b7598}#yddTopBorderlr{border-color:#f0f8fc}#yddWrapper .ydd-sp{background-image:url(chrome-extension://eopjamdnofihpioajgfdikhhbobonhbb/ydd-sprite.png)}#yddWrapper a,#yddWrapper a:hover,#yddWrapper a:visited{color:#50799b}#yddWrapper .ydd-tabs{color:#959595}.ydd-tabs,.ydd-tab{background:#fff;border-color:#d5e7f3}#yddBottom{color:#363636}#yddWrapper{min-width:250px;max-width:400px;}"}],"posts":[{"title":"","slug":"kafka架构","date":"2019-02-26T07:21:41.757Z","updated":"2019-02-26T08:57:42.241Z","comments":true,"path":"2019/02/26/kafka架构/","link":"","permalink":"http://yoursite.com/2019/02/26/kafka架构/","excerpt":"","text":"kafka是一个高性能，高可靠性的消息系统，具体来说： kakfa维护了不同topics的消息流 支持对消息流的发布/订阅 通过多服务器备份进行FT 高效I/O，batch和compression 对消费者和生产者解耦 另外，kafka还提供了消息存储的功能，一定程度上可以当一个分布式存储系统用，它将数据存储在disk上 kafka架构 Kafka主要组成部分： Broker：kafka集群的服务器，类似于node的概念，一个broker上可以有多个topics Topic：每条发布到kafka的消息都有一个类别，这个类别就是topic Commit Log：由message，offset等组成 Producer：生产者，向broker发消息 Consumer：消费者，从broker取消息 offset：在partition中的每条信息都会被分配一个唯一的顺序id叫做offset，consumer会track这个offset Partitions：topics在物理上的分组，每个topic可能分成多个partition，每个partition都是有序的队列，kafka只保证一个partition的顺序，而不能保证partition间的顺序，具体消息会到哪个partition，由hash算法或者round robin决定 Zookeeper：用来存储和维护集群配置信息，选举算法和集群切换；在0.8以前还支持追踪offset，后面被取代 在这个图中只有一个topic：zerg.hydra，它包括三个partition，分别是P0，P1，P2，每个partition在不同broker上又有replication，这里每个partition有3个replica，但其中只有一个是leader（图中边框加粗），对这个partition所有的读写只能走leader，针对每个partition的读写都可以并发进行。 Kafka特性保证： kafka保证了每个topic的partition的内容会按照其发送的顺序增加 consumer看到信息的顺序和其存储在log中的顺序相同 如果想保证全局顺序，有两种方案：只使用一个parttion；在consumer应用中增加全局顺序的处理（例如在storm的topology中） 消息传递：At Least Once(default)：消息不会丢失但可能被多次递送，为了做到这个，需要满足： 在发送信息的时候保证信息的持久性 在读取信息时保证持久性 produce发送但没收到ack时-&gt;检查最近的commit值 consumer要保存offset 消息传递的方式： 消息广播：把消息发送给所有consumer 订阅发布：消息发送个单个consumer 通过consumer group的方式实现 对于订阅发布，每个consumer对应一个独立的consumer group即可，而对于广播，则可以把所有的consumer放在一个consumer group里。不论每个group里有多少个consumer thread（小于等于partitions），对应多个partition，这个consumer thread总会消费全部的partition。因此，最好的设计便是consumer group下的thread与partition数量相等，这样效率最高。 发送信息： 可以选择同步/异步，同步在发送时会进入阻塞，异步可以实现高吞吐率 异步时将信息batching化 当queue满之后异步producer可能造成消息的丢失 发现leader： producers：不与zookeeper直接接触，而是通过bootstraping的方式，让boostrap server（broker）通知producer有哪些存活的broker以及如何找到对应的partition leader。而boostrap broker是通过zk来知道的。 Rebalancing：每个topic的partition对应的conusmer是在运行时动态分配的，这个过程会造成rebalancing（因为机器会坏或者consumer会因为一些原因挂掉）会发生rebalance的情况包括： consumer加入或离开consumer group（例：通过createMessageStreams()为topic注册consumer） broker加入或离开（例：当broker无法发送heartbeat给zookeeper） topic由于filter而造成的 ”加入/离开“ 为什么kafka那么快？ Zero Copy的使用：即使用sendfile()系统调用代替了传统I/O中的read()和write()，使数据由MDA从磁盘直接读取到内核buffer中，然后从内核buffer直接复制到socket buffer（而不用从kernel buffer-&gt;application buffer-&gt;socket buffer），减少了其中的copy和上下文切换 I/O过程中batch化数据 串行硬盘写入 大量依赖linux PageCache（页缓存）：自动使用机器上的所有可用内存 可扩展性强 注意：每次启动kafka前需要先启动zookeeper，kafka和zookeeper都需要在每台机子上都运行start程序（不同于hdfs）","categories":[],"tags":[{"name":"big data","slug":"big-data","permalink":"http://yoursite.com/tags/big-data/"}]},{"title":"Pig & Hive使用整理总结","slug":"Pig && Hive 简介","date":"2019-02-13T06:52:26.807Z","updated":"2019-02-13T12:55:52.133Z","comments":true,"path":"2019/02/13/Pig && Hive 简介/","link":"","permalink":"http://yoursite.com/2019/02/13/Pig && Hive 简介/","excerpt":"","text":"Pig &amp;&amp; Hive 简介pig和hive简单来说是使用类sql的语言来做mapreduce jobs数据查询与处理的框架。对于比较复杂的MR程序，可以直接使用缝钻噶后的Pig Latin或者HQL来做，由框架将其转化为hadoop jobs。pig属于大规模数据处理系统，而hive则属于hadoop的一个数据仓库应用。 Pig虽然被淘汰了，但还是要简单了解一下pig，毕竟是曾经风靡一时的框架。先简单看一下pig的代码： 123456789101112users = load 'users.csv' as (username: chararray, age: int);users_1825 = filter users by age&gt;=18 and age&lt;=25; -- 这里的filter和上面的load可以在一个map里完成，减少shuffle内容pages = load 'pages.csv' as (username: chararray, url: chararray);joined = join users_1825 by username, pages by username;grouped = group joined by url;summed = foreach grouped generate group as url, COUNT(joined) as views;sorted = order summed by views desc;top_5 = limit sorted 5;store top_5 into 'top_5_sites.csv'; Pig 好处：使用pig latin的好处有： pig latin懒加载，可以在pipeline中存储任意节点，而sql无法存储中间结果（可以说pig latin是将sql分拆成单个子语句）。 使用pig latin而不是直接写hadoop jobs可以极大的减少代码量，减轻程序员负担。 pig latin的运行效率不会太慢，同一个job所用时间不超过原生MR jobs的两倍。 语言特性： Keywords：Load, Filter, Foreach, Group By等，与sql相似 Aggregations：Count, Avg, Sum,Max等，这些操作一般来说会shuffle job Schema：在load数据的时候就需要声明schema User Defined Functions(UDFs)：用户定义的函数，需要先定义在jar包里，然后在pig latin里用register注册对应jar包从而进行调用 Pig 简单架构如图： 注意：基于效率原因，pig后面使用Tez取代直接做mapreduce jobs。 TezHadoop2.x对hadoop的架构进行了大规模的改动，其中比较重要的是： 使用Yarn进行资源管理 将Tez作为Pig和hive的执行引擎（而不是直接用mapreduce） 提供了各种各样的用户api，支持更多应用 Tez执行步骤：Tez是一个基于DAG的框架，具体运行pig步骤为： 将pig的数据处理过程表示成一个DAG图 Tez本身可以用来执行基于DAG的计算过程，在此过程中可以优化mapreduce的流程，提高效率。 Hivehive是一个基于hadoop的数据仓库组件，提供了总结，查询和分析等功能。实际使用时，Hive很像SQL database，HQL的命令也和SQL很像。 Hive安装与启动 从apache官方下载hive 在conf/下新建hive-site.xml，配置mysql，hdfs等相关设置 修改conf/hive-env.sh，配置HADOOP_HOME和HIVE_CONF_DIR hive直接进入cli，hiveserver2 &amp; 可以开启hive server Hive数据模型hive处理的是结构化的数据，有三个层次： Tables（path/warehouse/t） 每列都有类型（int，string，boolean） 与关系型数据库的table很像 每个表对应了hdfs的一个文件目录 支持list、map，类似json的数据 Partitions (path/warehouse/t/2) 由数据在表里的分布决定（例如基于范围的partition） 每个partition在表的目录下都有自己的子目录 Buckets (path/warehouse/t/2/part-00000.part) partition可以进一步被分成buckets 每个bucket被存在目录下的一个文件里 HiveQL命令HQL的命令主要有三类 Data Definition Language(DDL)：例如create，table，drop table等 Data Manipulation Language(DML)：load和insert命令等 Query Statements：select，join，union等 Create:1234567891011Create table student( id int, name string)partitioned by (province string)clustered by (id)sorted by (id)into 4 bucketsrow format delimitedfields terminated by &apos;\\t&apos;stored as textfile; 在使用create时要声明： schema：（类似RDBMS） partitions：partitioned by(province string)来确定partitions的名字，其中partition的列名不能是schema中已有的 bucket：则通过clustered/sorted by (id)来实现，其中的列名必须是schema中已有的，还要明确分成几个bucket format：指原数据的分隔符是什么，如果表声明为’\\t’，而text文件用空格分开，则load的数据皆为null stored：存储形式，推荐用orc Load:12Load data local inpath 'path of local file system' overwrite into table student partition(province='shanxi') -- 加载本地text文件Load data inpath ... -- 加载hdfs里的文件 对于有partition的表，在load数据时一定要声明partition，否则会报错 Hive整体架构 注意hive主要的组件包括： Shell：也就是CLI，允许用户像RDBMS一样交互查询 Driver：session的handle、fetch和execute Compiler：针对hql的parse，plan和optimize Execution：基于stage的DAG图（mr，hdfs，metadata） Metastore：包括表定义、表的命名空间和partition信息等，可以存在mysql等关系型数据库里 Problemmysql会报关于ssl访问的warning，但不影响操作？ 在hive-site.xml里的mysql配置里声明useSSL=false，如下： 1234&lt;property&gt; &lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt; &lt;value&gt;jdbc:mysql://localhost:3306/hive?createDatabaseIfNotExist=true&amp;amp;useSSL=false&lt;/value&gt; &lt;!--注意这里的&amp;是用了&amp;amp;否则报错--&gt;&lt;property&gt; update和delete无法使用，报错信息【Attempt to do update or delete using transaction manager that does not support these operations.】? 要明白hive的文件存储格式主要有： textfile：默认格式，行存储，磁盘开销大，数据解析开销大，hive无法进行合并和拆分，压缩的text文件，load最快 sequencefile：二进制，以&lt;key，value&gt;形式序列化，行存储，可分割压缩，与hadoop api中mapfile兼容，需要通过text来转化load rcfile：数据按行分块，每块列存储，读尽量涉及最少block，性能不如sequencefile，load最慢 orc：数据按行分块，每块列存储，效率比rcfile高（推荐） 自定义格式 这四种，只有orc是支持update和delete操作的，其他都不可以。我之前stored as textfile，自然报错。 hive分bucket的时候mr jobs没动，如何处理？ 我使用了tez替代hive-mr来作为hive的执行引擎，网上说这样可以提高3倍效率。 hive on tez如何配置？ apache官网下载tez 在hadoop/etc/hadoop/下创建tez-site.xml文件，加上配置： 123456&lt;configuration&gt; &lt;property&gt; &lt;name&gt;tez.lib.uris&lt;/name&gt; &lt;value&gt;/user/tez/tez.tar.gz&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt; 把位于apache-tez-0.9.0-bin/share下的tez.tar.gz放在hdfs的/user/tez下 修改hadoop-env.sh追加下面配置 123TEZ_CONF_DIR=xxx/tez-site.xmlTEZ_JARS=xxx/apache-tez-0.9.0-binexport HADOOP_CLASSPATH=$&#123;HADOOP_CLASSPATH&#125;:$&#123;TEZ_CONF_DIR&#125;:$&#123;TEZ_JARS&#125;/*:$&#123;TEZ_JARS&#125;/lib/* 重启hadoop以及hive hive里写set hive.execution.engine=tez; (可以直接配在hive-site.xml里，如果想恢复可以写set hive.execution.engine=mr;) 如何开启Hive CLI的debug模式？ hive –hiveconf hive.root.logger=INFO,console 启动hive，这样可以直接在cli里看到log内容","categories":[],"tags":[{"name":"big data","slug":"big-data","permalink":"http://yoursite.com/tags/big-data/"}]},{"title":"Zookeeper使用整理","slug":"Zookeeper简介","date":"2019-01-22T05:55:35.996Z","updated":"2019-01-29T03:42:21.416Z","comments":true,"path":"2019/01/22/Zookeeper简介/","link":"","permalink":"http://yoursite.com/2019/01/22/Zookeeper简介/","excerpt":"","text":"好久没更新博客，主要是前段时间看了一点机器学习的东西，公式不好打字，后来准备面试又看了很多java的基础，过几天会把java的基础整理一下丢在博客上。 今天主题是zookeeper，bigdata课上老师讲了zookeeper的内容，再加上自己也试了一下，就放在这里整理了。整理只为了自己看，离精通或者熟悉还差着一万八千里呢！ Zookeeper简介用途zk是一个高扩展和高可用的服务，主要用来支持 Distributed configuration Consensus Group Membership Leader Election Naming Coordination 基础架构Zookeeper分布在不同的服务器上，每个节点是一个server，其中有一个会作为leader，如图： 具体来说，zk的架构有如下特点： 所有的server都有一份数据、logs、硬盘snipshots的拷贝，被存在内存数据库中（它并不存储真正的数据，所以上面空间通常只有几十M，仅用来存必要的一些配置等） 在启动时会选择一个作为leader client可以选择任何一个server链接 当大多数（超过一半）server完成了一个改变，那这个修改就被认为成功，并返回update response（可能造成读取旧数据） ZK的数据模型zk的service到底是什么呢？其实就是一个被全部server追踪的分布式文件系统（这个角度来看有点像hdfs），它也是层次命名空间（类似linux），上面的每个节点称为一个znode。每一个znode都存储着一定的数据，并且可能有子的znode。 Znode的主要特点： 基于Key对象来实现/维护分布式一致性信息 通过数据改变的版本信息、ACL改变和timestamp来维护一致性 每次改变版本号都会增加 Znode不是用来存数据的，只是用来存储一些configuration和meta-data 每个znode可以存timestamp和version信息 Znode的类型： Persist vs. Ephemeral persist节点：一旦被创建不会轻易丢失，即使数据库重启也依然在，每个persist可以包含数据，也可以包含子节点 ephemeral节点：在session结束或过期后自动删除。服务器的重启也会导致ephemeral接触（可以用于做分布式锁） Sequence vs. Non-sequence sequence节点：创建出的节点名在指定名称后带有10位10进制数的序号。多克客户端创建同一名称的节点时，都能创建成功，只是序号不同 non-sequence节点：多客户端在同时创建同一non-sequence节点时，只有一个可创建成功，其他失败。创建出的节点与指定名称完全相同 Watch机制： 主动推送：当watch被触发时，zk服务器辉主动将更新推送给client，而不是靠client的轮询（观察者模式） 一次性触发：watch只会被触发一次，后续更新通知必须重新注册一个watch Session的特点： session是每个client到server的连接，zk支持每个client在保存同个session的基础上切换到不同的server 内建超时机制 执行顺序的保证是基于同个session的（即会话一致性） Zookeeper的一致性数据一致性：一致性是指多副本中数据的一致性，以下是个简单整理（程度由强到弱）： 强一致性：有原子一致性、线性一致性，有两个要求： 任何一次读都能读到某个数据最近一次写到数据 系统中所有进程，看到的操作顺序都和全局时钟下看到的顺序一致 顺序一致性：也有两个要求： 任何一次读都能读到最近一次写的数据 系统的所有进程顺序一致，但不一定和全局时钟下看到的数据一致 弱一致性：指数据更新后，有些操作可能访问不到，最终一致性是一种弱一致性，是指任意时刻节点上同一份数据不一定相同，但一段时间后，数据总会达到一致。里面有根据访问分为： 因果一致性：如果A通知B它更新了一个数据（A,B有因果关系），那么B后续访问只能看到更新过的值 读写一致性：当进程A自己更新一个值后，它自己只能访问到更新过的值（会话一致性同理） 单调一致性：当进程看到数据对象的某个值，它就不会再访问到那个值之前的值 补充一点：paxos是共识（consensus）机制，而不是一致性协议 ZK保证的一致性原则 FIFO一致性：对于同一个客户端，执行一个请求（get、delete这类操作）应该按照他们被发送的顺序；保证该客户端对于notification和状态改变的顺序一致 顺序一致性：所以客户端看到的并行写入操作的结果的顺序是一样的，ZAB实现，有点类似paxos 原子性：update操作要不成功要不失败，不会有中间结果 单系统镜像：同一个client不论连接那个server，看到的数据都应该是完全一致的。对于不同的client则可能看到不同的（因为有延迟）的数据 持续性（单调一致性）：当一个更新完成后，他会一直保持直到它被再次更新 高可用性：2F+1个服务器可以最多容忍F台服务器崩溃 最终一致性：数据在一段时间后最终辉达成一致 ZAB(zookeeper atomic broadcat)协议：目标可靠投递：如果一个事务被提交到一个服务器，那它最终会被提交到所有服务器全局有序：如果一台服务器上事务A在事务B之前提交，那么在所有服务器上事务A一定都在B之前提交因果有序：如果事务A在事务B之前发生（A,B有因果关系），如果一起被提交，一定是A在B之前执行 协议内容——广播为了保证一致性，所有写操作都要经过leader完成，由leader进行广播。广播是个简化的二阶段提交过程： leader收到消息请求后，给消息赋予一个全局唯一的64位自增id，叫zxid（类似于rdbms的事务id），通过zxid比较可以实现因果有序 leader通过fifo队列将带有zxid的proposal分发给所有follwer 当follwer收到proposal，先存下来，然后返回leader一个ack 当leader收到过半ack后，leader会向所有follwer发送commit命令，同时在本地执行该请求 follwer收到commit命令后，执行该请求 值得一提的是，写请求是通过leader广播完成的，但读请求leader或者follwer都可以直接处理，只要从本地内存中读取数据返回client即可 协议内容——恢复已经proposal的命令应该被备份。例如一些服务器在收到commit之前leader就挂掉了，这个时候就无法执行该请求。当它重启后应该重新执行（client如果挂掉也需要和server重新同步一下） 领导选举基于TCP的FastLeaderElection每个zookeeper的服务器都需要在数据文件夹下创建一个名为myid的文件（里面只有一个整数），用来唯一标识该服务器。而在配置文件必须与其一致，选票包括： logicClock：表示服务器发起投票轮数，自增整数 state：当前服务器状态 self_id：当前服务器myid self_zxid：当前服务器最大zxid vote_id：推举的服务器myid vote_zxid：被推举服务器上最大zxid 具体投票流程为： 初始化选票：清空票箱（票箱中记录了每个服务器最后一次投票） 发送初始化选票：每个服务器都通过广播票投给自己 接受外部投票：尝试从其他服务器获得选票，并计入自己票箱。 判断选举轮数（logicClock）：如果外部logicClock大于自己，则说明自己选举落后于其他服务器，立即清空票箱并将自己logicClock更新为收到的logicClock。再对比自己之前的投票和收到投票logicClock，确认是否需要更新；如果外部logicClock小于自己，则忽略这次投票；相等则进行下一步选票PK 选票PK：是基于myid和zxid的比较，即先选zxid大的，如果zxid相同再选myid比较大的 统计投票：如果半数服务器认可了自己的投票，则终止，否则继续 更新服务器状态：每个服务器根据投票结果更新服务器状态为leading或following 应用分布式一致性锁利用名称唯一性，枷锁操作时，只需要所有客户端创建/test/lock节点，只有一个创建成功，即可以获得锁。而解锁时，只要删除/test/lock节点，其他客户端通过watch机制可以继续进入竞争创建节点。如下图： 并发的惊群效应以上的实现非常简单，但会产生惊群效应，即当锁释放时，所以客户端都会被唤醒，但只有一个客户端可以获得锁。这个可以通过改良分布式锁实现的方式解决。 让所有客户端都在/lock下创建临时顺序节点，如果创建客户端自身节点编号是/lock下最小的节点，则获得锁。其他节点只监视比自己小的的最大节点（如创建节点1、2、5，1获得锁，2只监视1，5只监视2），只有当自己监视的节点释放锁自己才可以获得锁。这种其实是一种按照创建顺序排队的实现。","categories":[],"tags":[{"name":"big data","slug":"big-data","permalink":"http://yoursite.com/tags/big-data/"}]},{"title":"Distributed Data Analytics Systems","slug":"Distributed Data Analytics Systems","date":"2018-11-18T14:27:02.392Z","updated":"2018-12-09T08:41:10.145Z","comments":true,"path":"2018/11/18/Distributed Data Analytics Systems/","link":"","permalink":"http://yoursite.com/2018/11/18/Distributed Data Analytics Systems/","excerpt":"","text":"Distributed Data Analytics SystemsHadoopDrawbacks of traditional distributed Framework,Why this? Drawback: Data exchange requires synchronization Difficult to cope with partial system failure Why Hadoop: Reliability: handle partial failures Scalability: Automatically scales to more computing nodes Programmability: written in high-level code How HDFS works? When a client application wants to read a file, it communicates with the name node to determine which blocks make up the file, and which datanodes those blocks reside in.Then it communicate directly with the datanodes to read the data. MapReduce Execution: Pre-loaded local input data Intermediate data from mappers Values exchanged by shuffle process Reducing process generates outputs Outputs stored in HDFS MapReduce bottleneck: Problem: huge data transfer takes lot of time in shuffle step. Solution:Hadoop will start transfer data from mappers to reduces as the mappers finish work Problem: straggler problem exist indeed, while no reducer can start before every mapper has finished Solution: Hadoop uses speculative execution, specifically, if a mapper appears to be running significantly more slowly than others, a new instance of the mapper will start on another machine, operating same data, the first result will be used and the running mapper will be killed Problem: Data must be passed to reducer, which result in a lot of network traffic Solution: Combiner, like a “mini-reduce”, runs locally on single mapper’s output, and the codes are often identical with reducer. Problem: potential performance issues or secondary sort is needed. Solution: Write you own Custom Partitioners HaLoopDrawbacks of traditional distributed Framework,Why this? Drawbacks: Hard to handle recursive program, for example: Graph analytics, machine learning, data mining or some recursive queries. mapreduce: Load and Shuffle data on each iteration Why HaLoop: TaskTracker (Cache management) Scheduler (Cache awareness) Programming model (multi-step loop bodies, cache control) It is a efficient common runtime for recursive languages: Map, Reduce, Fixpoint. Solution: Inter-iteration caching: Mapper input cache (MI) Reducer input cache (RI) Reducer output cache (RO) RI - Reducer Input Cache: Access to loop invariant data without map/shuffle, used by reducer function. RO - Reducer Output Cache: Distributed access to output of previous iteration, used by fixpoint evaluation MI - Mapper Input Cache: Access to non-local mapper input on later iterations, used during scheduling of map tasks. Architecture: Loop Control Caching Indexing FlumeJavaDrawbacks of traditional distributed Framework,Why this? When meet long and complicated data-parallel pipelines, it is difficult to program and manage, besides each mapreduce job needs to keep intermediate results, what’s more, high overhead at synchronization barrier between different mapreduce jobs. Why flume? Expressiveness Abstractions Performance (lazy evaluation and Dynamic optimization) Usability &amp; deployability (implemented as a java library) Optimization: Sink flatten ParallelDo fusion MSCR fusion DryadDrawbacks of traditional distributed Framework,Why this? General-purpose execution engine for coarse-grained data-parallel applications Easy to write simple programs, execution engine automatically manages scheduling, distribution, FT, etc. Why Dryad? Job = Directed Acyclic Graph Computational “vertices” connected by communication “channels”(edges) What GDL (Graph Description Language)? A lower-level programming model than SQL Architecture? Job Manager Name Server Daemons SparkDrawbacks of traditional distributed Framework,Why this? complex applications interactive ad-hoc queries Reuse of intermediate results across multiple computatios RDD (Resilient Distributed Datasets)? Restricted form of distributed shared memory, only be built through coarse-grained deterministic transformations Fault recovery using lineage (Log transformations used to build a dataset, log enough info how it was derived from other RDDs) RDD good for: Apply the same operation to all elements of a dataset (coarse-grained operation) Remember each transformation as one step in a lineage graph Recovery of lost partitions without having to log large amounts of data Not good for: asynchronous fine-grained updates to shared state Task Scheduler: Dryad-like DAGs NaiadDrawbacks of traditional distributed Framework,Why this? Iterative processing on streaming data, interactive queries on a fresh, consistent view of the results. Whay Naiad? A new computational model: timely dataflow Solusion: iteractive and incremental computations : Structured loops allowing feedback in the dataflow, stateful dataflow vertices capable of consuming and producing records without global coordination producing consistent results -&gt; notifications for vertices once they have received all records for a given round of input or loop iteration. Key point: Timestamp: in the graph, every stateful vertices receive timestamped message along directed edges. In nested cycle, use timestamp to distiguish data in different input and loop iterations Two methods: Supports asynchronous and fine-grained synchronous execution Batching: sychronous, one-to-one correspondence between input and output Streaming: asychronous, overlapping computation (latency is low) Low latency? programming model: Asynchronous and fine-grained synchronous execution. Distributed progress tracking protocol: enables processes to deliver notifications promptly. HuskyDrawbacks of traditional distributed Framework,Why this? High performance, flat learning curve, good reusability, low maintenance cost and high compatibility Why husky? A new computational model that makes Husky general and expressive Architecure? Master-Worker architecture master: keeps worker information and data partitioning scheme Does not sit on the data path and don’t compute coordinates work among workers and monitors the progress of workers Worker: Read/write data, communicate with other workers. compute in parallel Send heartbeat to master periodically Implementation: Channel-based messaging subsystem -&gt; makes streaming computation posible Store attribute lists as in a column-store Better locality, more oppotunity to optimize (vectorization). Adding attributes without recompiling, useful for interactive data analysis.","categories":[],"tags":[]},{"title":"笔试和面试准备","slug":"面试和笔试的准备","date":"2018-10-24T12:54:57.115Z","updated":"2019-02-22T06:25:57.806Z","comments":true,"path":"2018/10/24/面试和笔试的准备/","link":"","permalink":"http://yoursite.com/2018/10/24/面试和笔试的准备/","excerpt":"","text":"由于不想错过秋招，并且为明年春招做准备，之后会不定期的在这里整理一些问题。 语言——java、python、cpp、scala并发编程、java内存模型（Java Memory Model）：线程之间的通信机制有两种： 共享内存 ：不同线程共享内存中的公共状态来隐式的通行，比较典型的就是通过共享对象来进行通信。对于线程的同步必须是显式的，即程序员手动指定某个方法或者某段代码必须在线程之间互斥的进行。 消息传递：线程之间没有公共状态，线程之间必须通过明确的发送信息进行显式通信，比较典型的就是调用wait()或者notify()等函数的方式。同步是隐式的，因为消息的发送必须在消息接受前。 内存模型： 每个线程都有自己的本地内存，然后也有主内存。本地内存中有一份共享变量的副本。线程A刷新了自己本地内存中的变量x，但AB需要通信时，会先通过副本刷新主内存中的x，然后线程B再读取主内存中的x，此时B的本地内存中x也成了新值。 内存模型的实现 所有的原始类型变量都在stack中，一个线程中的本地变量对另一个线程是不可见的。而java创建的对象，以及原始类型的封装类则存在heap中（不管是成员变量还是方法中的本地变量）。heap中的变量是可以被共享的，只要另一个线程获得了这个对象，那它就可以访问这个对象的成员变量。 Volatile和sychronized区别首先要理解线程安全的两个方面： 执行控制：目的是控制代码执行顺序及是否可以并发进行 内存可见：线程执行的结果在内存中的可见性 特征： synchronized：是解决执行控制的问题，即阻止其他线程获得当前对象的监控锁，使得被synchronized保护的代码块无法被其他线程所访问，也就无法并发执行。 volatile：解决的是内存可见性的问题。使得所有对volatile变量对读写都直接刷新到主存，即保证了变量的可见性，但只能保证对原始类型变量（除了double、long）的操作原子性。 区别： volatile本质是告诉jvm这个变量值是不确定的，需要从主内存中取，而synchronized则是直接锁定当前变量。 volatile只能针对变量，而synchronized可以用在变量、方法或类的级别。 volatile只能实现对变量修改的可见性，而无法保证原子性。synchronized则可以保证原子性 volatile不会造成线程阻塞，而synchronized会造成 volatile标记变量不会被编译器优化，而synchronized则会被优化。 happen-before原则：一个线程内，按照代码执行顺序，书写在前面的操作先行发生于书写在后面的操作。 内存栅栏：为了提高性能，cpu通常不按照顺序执行指令，而是通过重排指令来提高存储器的利用率，但这也意味着会有不可预测的问题发生。内存栅栏就是解决指令重排问题的方法，具体来说，是指处理器在重排时，不能采用先执行栅栏后的内存访问，在执行栅栏前内存访问的方式。这也是volatile的实现方式。 GC回收机制：类加载机制：其他：大数据相关mysql数据库mysql主键和唯一索引之前不太了解唯一索引，这次才知道。唯一索引就是mysql里的unique，可以在创建表时或者建表后增加，如建表后可以用： 1CREATE UNIQUE INDEX nm on PERSON(name); 执行成功后，如果在原表已经有一条类似 (‘1’,’max’,’1995-12-12’)类似的记录后，还要插入如下： 1INSERT INTO person(name,birthday) values (&apos;max&apos;,&apos;1995-12-13&apos;); 会直接报错，告诉用户name是唯一索引，无法再插入相同。这个有个使用场景，即在高并发下为了保证某一个键不会插入重复信息，需要给这个键增加唯一索引。 主键和唯一索引的区别： 唯一索引允许空值，但主键不能为空 主键创建后一定包含一个唯一索引，但唯一索引不一定是主键 主键可以被其他表引为外间，但唯一索引不能 一个表只能有一个主键，但可以有多个外键 mysql里key其实包含三种：PRI（主键）,UNQ（唯一索引）,MUL（普通key，可以重复） 外键：一个表的主键可以作为它从表的一个外键，外键本质是一种约束。外键要求和主键Type完全相同（int(10)和int(11)的差别都不可以），用如下语句可以创建外键约束： 1alter table my_profile add CONSTRAINT id foreign key(id) references person(id) on delete cascade on update no action; 注意后面可以对这个键的delete、update进行约定，确定是否进行级联操作。 注意：外键只有InnoDB支持，而MyISAM不支持。 InnoDB和MyISAM的几点区别： InnoDB支持事物和外键，而MyISAM不支持 InnoDB支持行及锁，MyISAM只支持表级锁 InnoDB不支持全文索引，而MyISAM支持 MyISAM相对简单，提供了告诉存储和检索，在效率上要优于InnoDB，适合管理非事物表，适合有大量的select的程序。 InnoDB则更安全，多用户的并发性能更好，适合有大量insert、update的事物处理的应用程序。 MySQL的锁机制：mysql有几种类型的锁： 排他锁（写锁，X锁）：如果事务T对A加上排他锁，那其他事务不能对A加任何类型的锁。获得排他锁既能读数据也能写数据。 共享锁（读锁，S锁）：如果事务T对A加上共享锁，则其他事务不能对A加排他锁，获得共享锁的事务只能读数据，不能写数据。 行级锁：行级锁氛围共享锁和排他锁，行级锁是mysql中锁定粒度最细的锁。行级锁开销大，加锁慢，锁定力度小，发生锁冲突的概率最低，并发度最高。 表级锁：表级锁分为表共享锁和表独占锁。表级锁开销小，加锁快，锁定粒度大，发生冲突概率高，并发度低。 悲观锁：即悲观并发控制，简称PCC。悲观锁是指在数据处理过程中加锁，使数据处于锁定状态，使用数据库锁机制实现。注意在mysql中使用悲观锁要关闭mysql的自动提交。——安全，但产生额外开销，增加产生死锁机会。 乐观锁：通过记录数据版本的方式实现。为数据增加一个版本标识，读取数据时，将版本标识一起取出，数据每更新一次，就对版本标识进行更新。 语句示例： 1234#共享锁SELECT * FROM person WHERE ... LOCK IN SHARE MODE;#排他锁SELECT * FROM person WHERE ... FOR UPDATE; 实现： InnoDB实现行级锁需要在表上增加索引，InnoDB会对索引项加锁，即当InnoDB没有索引项时，也只能进行表锁。 InnoDB中MVCC的一些理解mvcc（multiversion concurrency control），即多版本并发控制技术，它使得行锁不再简单通过锁来进行并发控制。它本身希望同一个数据有多个版本，版本号是单向增长的。而读事务只读在该事务开始前的数据库的快照。实质是用来解决读写冲突的无锁并发控制。乐观锁就是这种思路。 算法相关其他","categories":[],"tags":[{"name":"career","slug":"career","permalink":"http://yoursite.com/tags/career/"}]},{"title":"elasticsearch使用整理","slug":"elasticsearch基本概念","date":"2018-10-17T09:08:43.297Z","updated":"2018-10-18T02:22:57.658Z","comments":true,"path":"2018/10/17/elasticsearch基本概念/","link":"","permalink":"http://yoursite.com/2018/10/17/elasticsearch基本概念/","excerpt":"","text":"最近项目要使用elasticsearch。。。这里总结一下看elasticsearch文档的一些总结吧。 基本概念elasticsearch是一个全文本搜索的服务，比如github从几百亿行代码中搜索某个代码就用了elasticsearch。在mac下可以通过brew安装和管理，注意还要再安装一个kibana来进行可视化和管理（可以在kibana的console跑各种请求）。es默认跑在9200，kibana默认跑在5601端口。 这里注意对于中文场景要安装elasticsearch-analysis-ik进行分词，ik还支持自定义词典，可以在es-path/config/analysis-ik/custom下自定义dic。 概念对应关系如下表 传统数据库 ElasticSearch Database Index Table Type Row Document Column Field schema mapping elasticsearch的所有内容都是通过json格式传递的。每个文档都是一个json的形式。一般文档包括下面三个metadata： _index：文档存储的地方（类似于database） _type：文档代表的对象的类（类似于table） _id：文档的唯一标示（类似于主见，可以自定义，也可以让es帮你生成） es是支持分布式的，当然也有对应的shard和replica机制。 单机操作api创建：12345PUT /&#123;index&#125;/&#123;type&#125;/&#123;id&#125; &#123; \"field\":\"value\", ...&#125; 获取：12GET /&#123;index&#125;/&#123;type&#125;/&#123;id&#125;?_source=title,text#可以获取特定字段（包含metadata）GET /&#123;index&#125;/&#123;type&#125;/&#123;id&#125;/_source#只获取_source字段，而无metadata 存在：1HEAD /&#123;index&#125;/&#123;type&#125;/&#123;id&#125;#判断document是不是存在，只返回状态码而没有具体数据 更新：由于elasticsearch中的文档是不可变的，所以修改只能通过重建或者脚本的方式更新 123456789PUT /&#123;index&#125;/&#123;type&#125;/&#123;id&#125;&#123; ...&#125;#也可以用post，注意put和post的区别主要是post可以默认自动生成idPOST /&#123;index&#125;/&#123;type&#125;&#123; ...&#125; 脚本的方式： 1234567891011POST &#123;index&#125;/&#123;type&#125;/&#123;id&#125;/_update#注意最后是一个_update&#123; \"script\" : &#123; \"source\":\"stx._source.tags.add(params.tag)\", \"lang\":\"painless\", \"params\" : &#123; \"tag\":\"blue\" &#125; &#125;&#125;#想增加一个字段tags的内容 删除：1DELETE /&#123;index&#125;/&#123;type&#125;/&#123;id&#125;#删除某个文档 搜索：elasticsearch最重要的功能就是搜索，搜索的姿势也是很多的 1234GET /_search#在所有索引类型中搜索GET /&#123;index1&#125;,&#123;index2&#125;/_search#在index1和index2两种索引类型中搜索GET /&#123;index&#125;/&#123;type&#125;/_search#在某个type中搜索GET /_all/&#123;type&#125;,&#123;type&#125;/_search#在所有索引的某些type上搜索 对于搜索的结果，可以用size分页，用from决定从哪里出发 当然平时比较多的是查找字符串 12GET /_all/&#123;type&#125;/_search?q=tweet:elasticsearch#查找某个type中tweet：elasticsearch的文档GET /_all/_doc/_search?q=%2bdescribtion%3amax#查找某个类中describtion字段包含max的文档 第二个要重点解释一下，其实在url encode之前为： +describtion:max 如果要放在查询中，就要进行urlencode（percent encode），然后放在q后，即： q=%2bdescribtion%3amax 这里的查询不仅限于字符串查找，还可以是特定条件下的查找，如 name字段包含&quot;mary&quot;或&quot;john&quot; date晚于2014-09-10 _all字段包含&quot;aggregations&quot;或&quot;geo&quot; 这个可以用 1+name:(mary john) +date:&gt;2014-09-10 +(aggregations geo) 来表示，最后urlencode即可进行查询。 mapping和Analysises的mapping对应了传统数据库的schema，其中es会对不同的字段类型进行猜测，得到对应的mapping，在这种情况下，对某个field的类型猜测可能会是date，但如果用_all搜索这个field则认为他是string，从而带来搜索结果的不同。 对于一个搜索引擎，与数据库最本质的区别在于确切值和全文文本之间。 传统数据库需要在where语句里的特定匹配，但es则希望如下： 一个针对&quot;UK&quot;的查询将返回涉及&quot;United Kingdom&quot;的文档 一个针对&quot;jump&quot;的查询同时能够匹配&quot;jumped&quot;， &quot;jumps&quot;， &quot;jumping&quot;甚至`”leap” 等等等场景，为此引出了es最关键的技术——倒排索引。 Analysis对于大小写或者同源词等原本是不能匹配的，需要通过特定的分析过程才能被检索，具体过程如下： 首先，标记化一个文本快为适用于倒排索引的term 标准化这些term为标准行事，提高可搜索率和查全率 一个完成的分析器（analyzer）包括三部分： 字符过滤器：去掉一些html标签，或者转化&amp;为and等 分词器：通过空格或逗号分词（中文需要特定分词工具ik） 标记过滤：将词进行大小写转换、去掉一些停用词（a、the这些）或者增加词（同义词） 可以通过如下方式测试analyzer 12345678910111213141516171819202122232425GET _analyze?pretty&#123; \"analyzer\": \"ik_smart\", \"text\":\"王者荣耀真好玩\"&#125;#output:&#123; \"tokens\": [ &#123; \"token\": \"王者荣耀\", \"start_offset\": 0, \"end_offset\": 4, \"type\": \"CN_WORD\", \"position\": 0 &#125;, &#123; \"token\": \"真好玩\", \"start_offset\": 4, \"end_offset\": 7, \"type\": \"CN_WORD\", \"position\": 1 &#125; ]&#125; 如果想使用某个特定analyzer，而不是系统自带的standard，就需要通过mapping。 查看map需要用： 1GET /&#123;index&#125;/_mapping/&#123;type&#125; 这样得到mappings的内容，注意现在一些field的类型是keyword（而不是text）是因为keyword不会自动分词并建立索引，但text会这么做。 1234567891011121314151617PUT final&#123; \"mappings\": &#123; \"_doc\": &#123; \"properties\": &#123; \"name\": &#123; \"type\": \"text\" &#125;, \"blob\": &#123; \"type\": \"text\", \"analyzer\":\"ik_smart\" &#125; &#125; &#125; &#125;&#125;","categories":[],"tags":[{"name":"big data","slug":"big-data","permalink":"http://yoursite.com/tags/big-data/"}]},{"title":"最近写openrice爬虫遇到的一些问题（未完待续）","slug":"基于pyhusky的爬虫）","date":"2018-10-12T14:12:42.304Z","updated":"2018-10-14T11:49:23.583Z","comments":true,"path":"2018/10/12/基于pyhusky的爬虫）/","link":"","permalink":"http://yoursite.com/2018/10/12/基于pyhusky的爬虫）/","excerpt":"","text":"最近项目中需要写爬虫，需要爬openrice，其中有一些tips需要记录一下。 tor and polipoTortor是一个socks5代理工具，可以实现匿名访问网页，本质其实是利用了分布在世界各地的一些肉机做请求转发。 tor有两部分，tor和ControlPort，他们都需要在tor/config下手动配置： tor，一般绑定在9050端口，socks5代理服务器，如果在mac下，可以通过brew下载并通过brew services进行管理 ControlPort，一般绑定在9051端口，用来管理本地的tor，在python下用TorCtl包来操作。开启前要通过tor –keygen设置passphrase 在linux下可以用lsof -i:port-num来查看有没有正确开启这两个服务。 可以通过Control向tor发送不同的signal的方式来实现对tor的管理，例如获取新ip可以 123def getNewIp(): conn = TorCtl.connect(controlAddr=\"127.0.0.1\", controlPort=9051, passphrase=\"my password\") conn.send_signal(\"NEWNYM\") Polipo由于tor是通过sock5代理的，但实际使用的很多python库只支持http/https代理，例如requests、urllib3等，这样需要一个web服务器来进行转化。polipo就是这样的工具。 mac端可以通过brew来下载和管理polipo，但polipo的config不会自动生成，需要我手动去/usr/local/etc下mkdir polipo文件并自己写config，我的config如下 12345proxyAddress = \"::0\"allowedClients = 127.0.0.1, 192.168.1.0/24proxyAddress = \"0.0.0.0\"socksParentProxy = \"localhost:9050\"socksProxyType = socks5 这里一个坑是我刚开始在polipo的config里没有写proxyaddress = “0.0.0.0”，会有很多问题 polipo默认绑定端口是8123，如果成功开启，在python可以通过 123456proxy_manager = urllib3.ProxyManager( 'http://127.0.0.1:8123', timeout=urllib3.Timeout(connect=10, read=10), retries=urllib3.Retry(5), maxsize=5) proxy_manager可以正常访问web页面，但是速度较慢。 Pyhusky可以通过husky的map来运行下载任务，提高分布式效率。 首先需要在本地启动husky的master和daemon任务（目前遗留了一个问题：每个任务只能跑一次，第二次跑不了？），然后在python通过 123env.pyhusky_start('127.0.0.1', 20000)pages = env.parallelize(url_list)tuple = pages.map(lambda url: mapper_process(url)).collect() 来运行的，注意这里有一个坑是parallelize分成几份会由master config的 [worker] 下的配置决定的，所以如果发现本机只跑了所有任务的一半或三分之一，就去check一下husky的master config有无问题。","categories":[],"tags":[{"name":"crawler","slug":"crawler","permalink":"http://yoursite.com/tags/crawler/"}]},{"title":"pyhusky的单机编译与运行遇到的坑","slug":"pyhusky的编译与运行","date":"2018-10-10T11:20:22.632Z","updated":"2018-10-14T11:49:43.670Z","comments":true,"path":"2018/10/10/pyhusky的编译与运行/","link":"","permalink":"http://yoursite.com/2018/10/10/pyhusky的编译与运行/","excerpt":"","text":"由于项目要用到husky的python版，pyhusky。所以要在本机运行husky。不得不说，c++的项目的可移植性和兼容性真的差java好几条街，所以编译这个看起来简单，但实操坑非常多。 坑1 —— zeromq我很早以前就在mac上通过brew装好了zeromq，这次在编译husky的时候还报了找不到。最后发现homebrew安装的zmq只是一个底层的c版本，而不是合适版本。这里我只好手动下载了libzmq和cppzmq。clone下来后大概流程就是： mkdir build &amp; cd build make .. make -j4 make install 可以说是build一个项目最典型的操作了。刚开始不理解学长讲的要把hpp放在系统的include里，后来了解了一下原来cpp会把自己的一些hpp文件（类似快捷方式）放在/usr/local/include文件目录下，其他proj就可以去调用了。而make install里面集成了这一步。 坑2 —— libhdfs3这个库是cpp用来连接hdfs的，但放弃维护了，所以只能找别人的，这里我找到了一个可用的 12345git clone git@github.com:ContinuumIO/libhdfs3-downstream.gitmkdir build &amp; cd build../bootstrap --prefix=/usr/local --dependency=$(brew --prefix openssl)makemake install 这个需要提前装好gtest和gmock，就要去下载gtest和gmock，还是一样的build 坑3 —— build完Master依然不存在在make master之后，应该出现Master应用程序，但我的程序里没出现。后来才知道因为mac的默认文件格式是不支持大小写敏感的，所以会有问题。这样我需要去改master下build的CMakeList.txt，如下： 12345# MasterHuskyadd_executable(MasterHusky master.cpp $&#123;master_plugins&#125;)target_link_libraries(MasterHusky $&#123;husky&#125;)target_link_libraries(MasterHusky $&#123;EXTERNAL_LIB&#125;)set_property(TARGET MasterHusky PROPERTY CXX_STANDARD 14) 原来这里的MasterHusky叫Master，与build出的master文件冲突，所以要将它改成MasterHusky的名字，下面相应的地方都要改，然后再重新cmake就可以了。 坑4 —— Daemon无法执行刚开始不知道要跑起来master以后再跑daemon，daemon也是build出来的，但刚开始不能跑，我需要装好libhdfs3以后，先运行master，再运行daemon（master不能停顿太久，因为可能挂掉了） 坑5 —— bindings路径问题这个是最大的一个坑，我需要把husky目录下的bindings放在自己执行./Daemon和./Master的地方才可以！！！ 例如我是直接在release里执行的，就需要把bindings文件夹和crawler下的hcrawl都放在release目录下！","categories":[],"tags":[{"name":"database","slug":"database","permalink":"http://yoursite.com/tags/database/"}]},{"title":"降维的常用方法总结（未完待续）","slug":"数据降维","date":"2018-10-10T11:19:12.720Z","updated":"2018-10-14T11:50:00.299Z","comments":true,"path":"2018/10/10/数据降维/","link":"","permalink":"http://yoursite.com/2018/10/10/数据降维/","excerpt":"","text":"课上讲了常见的数据降维的方法PCA，感觉比较有用，再结合一下网上看到的比较新的方法，总结在这里吧。 常见的词汇最近都只看英文，所以相关的很多词汇中文不太熟悉，以后面试内地的话不太好聊，先把中文翻译放在这里 rank of matrix：矩阵的秩 determinant：行列式 conjugate transpose：转置 orthonormal matrix：正交矩阵 similarity matrix：相似矩阵 diagonal matrix：对角矩阵 diagonal element：对角元素 Singular Value Decomposition (SVD)：奇异值分解 ：） Eigen-Decomposition：特征分解 eigenvector：特征向量 eigenpair：特征值 Priciple Component Analysis (PCA) ：主成分分析 SVD (Singular Value Decomposition)奇异值分解是一种提取特征值的很好的方法。公式如下： A可以通过这样的方式分解，而当：rank（A）= r时，有如下： U：左奇异向量 Σ：奇异值 V：右奇异向量 这个总是成立的如果U,V是正交矩阵并且Σ为对角矩阵并且所有元素降序非负","categories":[],"tags":[{"name":"big data","slug":"big-data","permalink":"http://yoursite.com/tags/big-data/"}]},{"title":"流数据挖掘算法","slug":"数据流挖掘","date":"2018-09-29T14:06:01.697Z","updated":"2018-10-01T09:05:18.915Z","comments":true,"path":"2018/09/29/数据流挖掘/","link":"","permalink":"http://yoursite.com/2018/09/29/数据流挖掘/","excerpt":"","text":"流数据，顾名思义，就是针对流数据（例如google查询、twitter的状态更新这类数据）的一些挖掘。不同于普通数据集，流数据源源不断地产生，而我们的存储空间是有限的。所以要采取一些办法，： Samping data from stream Queries over sliding windows Filtering a data streaming Sampling data from stream由于我们不能存储整个stream，所以要存一些sample，具体有两种方式 Sample一个stream的固定比例 维护一个固定大小的随机Sample —— 蓄水池采样 固定比例以用户的查询为例：假设有s个单次查询，有d个两次查询，即总共有s+2d次查询，sample率为p（0&lt;p&lt;=1），求用户两次查询的比例 正确答案：d/(s+d) 按照条件推倒：dp^2/(sp+dp^2+2p(1-p)d) 这个准确率问题还是比较大的，为了改良，可以采用以取用户sample的方式。 固定大小的sample —— 蓄水池采样很好玩的问题：假如有一本非常厚的电话簿，你要随机挑1000个人打电话，并且保证每个人被选中的几率相等，你要怎么做？ 这里的电话簿就像数据流，你不能先数一遍总共有多少人，再产生一千个随机数这样，效率太低。 解决方法： 先选前1000人，然后后面的每一位以k/n的概率决定替换掉前面的任意一位。其中n是当前总共人数，k是蓄水池大小。例如第1001位就有1000/1001的概率替换掉前面1000个人中任意一个。 证明： 条件: sample size: k，total size: n，probability of each element: s/n 求证: 对于n-&gt;n+1的情况，probability of each element: k/n+1，即无论n多大，每个元素被选中概率均等 证明: 每个元素被选中概率：k/n n-&gt;n+1后，每个被替换前面概率：k/n+1 而假设A而原来在sample里的，仍然还在的概率为: (1-k/n+1) + (k/n+1)*(k-1/k) = n/n+1，这个公式前者是n+1这个元素没被选中，后者是没替换自己的概率 那么A的概率就是：k/n * n/n+1 = k/n+1 综上，概率相等～ Sliding Windows就是滑动窗口，简单来说：最多储存N bits,当又来一个新bit时，吐出第N+1个bits（也就是窗口里最老的那个）。 问题：如果我们要统计N中有一个1，那必须全部存储N中的内容，但窗口的存储空间有限，因此这里用了DGIM方法-&gt;exponential Window。 DGIM算法它是通过Bucket来对滑动窗口进行划分，每个桶包括： 桶最右边的timestamp（O(logN) bits） 在每个桶中1刀数量（O(log logN)bits） 桶的限制：每个桶里的1的数量是2的次方。 桶的特征： 只有1个或者2个桶有相同数目的2的次方个1 桶和桶的timestamps不会重叠 桶是按照大小有序的 当桶的end-time &gt; N的时候（即整个桶已经从窗口中走了），桶会消失 DGIM算法中数据结构的更新（2048式更新）： 每一个新的位进入滑动窗口后，最左边一个位从窗口中移出（同时从桶中移出）；如果最左边的桶的时间戳是当前时间戳减去N（也就是说桶里已经没有处于窗口中的位），则放弃这个桶； 对于新加入的位，如果其为0，则无操作；否则建立一个包含新加入位的大小为1的桶； 由于新增一个大小为1的桶而出现3个桶大小为1，则合并最左边的两个桶为一个大小为2的桶；合并之后可能出现3个大小为2的桶，则合并最左边两个大小为2的桶得到一个大小为4的桶……依次类推直到到达最左边的桶。 如何估计最新N窗口中1的数目呢？ 将除了最后一个的所有的bucket大小（这里大小都是指1的数目）加起来 再加上最后一个bucket的一半大小 准确率：&gt;= 50% Filtering Data Streams问题：垃圾邮件的过滤问题，我们知道有10亿个好的email address，如果邮件来自这些address，那么它就不是spam。即现在有一封邮件{“address”:”contents”}，如果key可以匹配10亿email address就不是spam。 Bloom Filter设S是刚刚好的email address集合，而B是大小为n，全部初始化为0的一个bit array 使用k个相互独立的hash函数h1,h2……hk，他们可以将元素映射到[0,n]的bit array上。将S中元素通过k个hash函数映射，映射到的地方设置为1 这里的x1，x2就是S的元素。 当判断一个元素y1，y2是否在集合S中时，就通过相同的hash函数将其映射到B上，如果任何一个hash函数映射到的地方存在0，那y就不在S中，反之则证明在S上，或者是一个false positive（将错的分到对的里）。 如图y1就不在S中，y2或是在S中，或是一个false positive。但这种方法不存在true negative（将对的分到错的里）。","categories":[],"tags":[{"name":"data mining","slug":"data-mining","permalink":"http://yoursite.com/tags/data-mining/"}]},{"title":"MongoDB使用整理","slug":"MongoDB使用整理","date":"2018-09-25T06:14:39.539Z","updated":"2018-11-11T06:56:12.499Z","comments":true,"path":"2018/09/25/MongoDB使用整理/","link":"","permalink":"http://yoursite.com/2018/09/25/MongoDB使用整理/","excerpt":"","text":"最近project需要mongo做存储，因此在这里总结一些mongo的东西 基本概念Mongo是一个开源的文档型数据库，它提供了高性能、高可用和自动扩展的特性。 概念对应关系如下表： SQL术语/概念 MongoDB术语/概念 解释/说明 database database 数据库 table collection 数据库表/集合 row document 数据记录行/文档 column field 数据字段/域 index index 索引 table joins 表连接,MongoDB不支持 primary key primary key 主键,MongoDB自动将_id字段设置为主键 aggregation(group by) aggregation pipeline 聚合函数 transactions transactions 事物 mongo支持包括mongo shell、c++、java、python、php等几乎所有主流语言。只需要下好对应的driver即可，下面的操作我们使用pymongo来完成。 CURD操作CURD是数据库基本操作。这里用pymongo来创建mongo client。 1234567from pymongo import MongoClient#首先要创建一个mongo client来运行mongo instanceclient = MongoClient('localhost', 27017)#选中需要操作的database（test）和collection（inventory）inventory = client['test']['inventory'] Read操作123456result = collection.find_one(&#123;filter&#125;)results = collection.find(&#123;filter&#125;).limit(5)#examplevalues = inventory.find(&#123;\"type\": &#123;\"$regex\": \"Event\"&#125;&#125;) Update操作1234collection.update_one(&#123;filter&#125;,&lt;&#123;$set&#125;&gt;)#exampleinventory.update_one(&#123;\"id\": \"2614896652\"&#125;, &#123;\"$set\": &#123;\"type\": \"CreateEvent\"&#125;&#125;) Create操作1234567#在这里我读取一个json文件，然后存入数据库中data = []with open(\"/data/test.json\", 'r', encoding=\"utf-8\") as f: for content in f.readlines(): data.append(json.loads(content))inventory.insert_many(data) Delete操作1234collection.delete_many(&#123;filter&#125;)#exampleinventory.delete_many(&#123;&#125;) #删除全部记录 Bulk Write操作12345678from pymongo import InsertOne,DeleteMany,UpdateOne#第一个参数数组为operations数组，ordered表示是否顺序执行inventory.bulk_write([ InsertOne(data[0]), UpdateOne(&#123;\"id\": \"2614896652\"&#125;, &#123;\"$set\": &#123;\"type\": \"PushEvent\"&#125;&#125;), DeleteMany(&#123;&#125;)], ordered=True) Text Search操作1234567#mongo提供了针对文本内容search的方法，要想使用这个就要先对对应field创建text index#创建text indexdb.inventory.createIndex(&#123;\"type\":\"text\"&#125;)#文本搜索values = inventory.find(&#123;\"$text\": &#123;\"$search\": \"CreateEvent\"&#125;&#125;) Replication 一组replica只指存相同数据的节点集。其中只有一个被认为是primary节点，其他是secondary节点（类似于master-slave）。 只有primary节点可以接受所有的写操作，并且通过{w:”majority”}来确认通知。同时primary会把所有数据操作放在oplog里。 对于secondary节点，他们会备份primary节点的oplog，然后把log里的东西apply到自己的节点上，这样primary上的dataset也就映射到了secondary上。当primary不可用时，secondaries会通过选举决定谁是primary。 你可以额外增加一个叫arbiter的节点，arbiter不维护任何数据，它通过应答其他节点发出的心跳和选举请求，维护了投票时需要的法定人数。因为它本身不维护dataset，所以它占用的资源很少，也不要单独硬件。所以当节点数为偶数时，可以增加一个arbiter来维护。 Asynchronous Replicationsecondary本身异步地从primary复制。完成备份后，即使。 Automatic Failover当primary在一定时间（configured by electionTimeoutMillis，10s default）不与secondary通信时，有资格的secondary会提名自己参加选举，cluster会试图完成选举并恢复正常功能。 在选举阶段，这个replica set都无法进行写操作，个别secondary如果配置了允许读操作的话还是正常进行的。通常系统会在12s只能判定一个primary不可用并完成选举工作。 ShardingSharding是Mongo采用的一种在多台机器上分布数据的方法。对于在大量、高吞吐率的数据在单台服务器上无法承载，有两种方法来扩展机器： Vertical Scaling：增加单机的容量、内存，使用更好的cpu等方式。但这种受限于目前可用的技术能力。 Horizontal Scaling：增加机器的数量，每个机器只要handle一部分数据。比较便宜，但维护和部署基础设施成本较高。 Sharding cluster包含一下组件： Shard：每个shard包含总的一个子数据集。每个shard都可以被部署为备用数据集。 mongos：mongos作为query router，提供了client和sharded cluster之间的借口。 config servers：储存了metadata和cluster的配置设置。在mongo3.4，其必须被部署为一个备用数据集（CSRS）。 关系组图如下： MongoDB从collection层面来分割数据。 Shard KeysMongoDB是根据shard key来分割一个collection的。shard key是由目标collection中每个document都有的fields或者不变的field组成的。 在分割collection时要选择shard key，分割完后shard key就不能再改变了。 对于非空collection，必须有一个index是以shard key开头的；而对于空collection，MongoDB则会创建一个index。 shard keys的选择会影响sharded cluster的性能、效率、扩展性等问题，它和它背后的index也会影响你的集群可以使用的sharding策略。 ChunksMongoDB会数据分成一个个的chunks，其中包含了左闭右开的shard key范围。Mongo使用shared cluster balancer来实现在sharded cluster上的不同shards间移动chunks。 Sharded and Non-sharded Collections每个数据库都可以既有sharded collections又有un-sharded collections。unsharded collection存在数据库的primary shard上。每个数据库都有primary shard。 Connecting to a sharded Cluster 用户通过mongos router来实现和sharded cluster（包含sharded和unsharded collections）的交互。client做读写操作时不能只连接一个shard。 Sharding Strategy具体来说sharding的方式有两种： Hashed Sharding通过计算shard key的hash值来分到不同的chunk中。在使用hashed indexes来处理查询时，client不需要计算hash，这个由MongoDB自动完成。 对于那种很接近的shard key（例如单调递增的），hash通常会比较均匀地把他们分到不同的chunk里。这样存在个问题：当我要取一定范围内的数据时，需要从各个不同的chunk里取，造成较大范围的broadcast operations。 Ranged Sharding把shard key的值分成一定范围区间，然后分配。 这样相近的shard key实在同一个chunk里的，这样mongos只需要把operation route到包含这些数据的shards。 这个方式很依赖shard key的选择，不理想的话可能造成数据分配不平衡。 Zones in Sharded clusters在sharded clusters里，可以把几个shard对应到一个zone中，一个shard也可以对应到多个zone里。chunks只在相同zone下的几个shards中转移。 zones存在的目的是提高在大的sharded clusters里数据的本地化程度。","categories":[],"tags":[{"name":"big data","slug":"big-data","permalink":"http://yoursite.com/tags/big-data/"}]},{"title":"局部敏感哈希(LSH)——Locality Sensitive Hashing","slug":"局部敏感哈希","date":"2018-09-19T03:34:16.899Z","updated":"2018-09-19T05:12:12.981Z","comments":true,"path":"2018/09/19/局部敏感哈希/","link":"","permalink":"http://yoursite.com/2018/09/19/局部敏感哈希/","excerpt":"","text":"课上学了一种大数据计算相似性的算法，觉得很巧妙，在这里总结下。 使用场景求相似性的场景有很多，比如比较两图相似性从而做一些处理，或者搜索引擎比较文本相似性从而确定返回的搜索结果等等。这种场景常常面临的问题是要进行比较的数据特征量非常大，同时比较对象又非常多，不能直接比较。LSH正是解决了这个问题。 LSH流程LSH分为三步： Shingling: Convert documents to sets Min Hashing: Convert large sets to short signatures, while preserving similarity Locality Sensitive Hashing: Focus on pairs of signatures likely to b from similar documents - Candidate pairs! 要测相似性就要确定距离/相似性函数，LSH使用的是jaccard距离/相似性，具体如下： sim(C1,C2) = | C1 ∩ C2 | / | C1 U C2 | d(C1,C2) = 1 - | C1 ∩ C2 | / | C1 U C2 | 第一步：ShinglingShingling是将整个文档转化为一个set，这里我们不重视文档顺序、重要词等信息，所以shingling是最好选择。 K-shingle（k-gram）则是将文档分成以k个token为一个单位的序列，token可以是字符、单词或者其他。例如k=2，则对于文档D = abcab，2-shingle的set则是：C = S(D) = {ab, bc, ca}。k的取值： k = 5，对于比较短的文章 k = 10，对于很长的文章 随后可以将每一个shingle作为一个维度将所有文档联合起来构建一个0/1矩阵，这个 矩阵: Rows = elements (shingles) Columns = set(documents) 例如： C1 C2 C3 C4 Shingles1 1 1 1 0 Shingles2 1 1 0 1 … 0 1 0 1 … 0 0 0 1 很显然这个矩阵非常稀疏的。这样计算量非常大，所以有第二步来“压缩矩阵”。 第二步：Minhashminhash需要压缩矩阵，将原来100，000维的压缩到100维，采用了很聪明的方法：概率聚类大法！ 具体描述：将上述矩阵每一列随机排列，然后记录第一个1的对应位置（位置标注方式不一定是递增序列，而和产生随机的方式有关） 每一次随机都会产生1个signature，100次随机就针对每个文档产生一个长度100的signature，文档之前只要互相比较一下这个signature的相似性就相当于比较文档的相似性。 这个算法的可行性用公式表达则是： Pr[ min( π (C1 )) = min ( π (C2 )) ] = sim(C1,C2) 这个结论是可以证明的，此处略过。 由于这里要随机100次，这个显然是比较麻烦的，所以随机用hash方法来进行。 全局hash为： h_a,b(x) = (( a*x + b )mod p ) mod N 然后每次只要随机产生a，b两个值就好。之后按照产生的hash函数的大小顺序进行排列。hash产生重复的值也不要紧，signature就是产生的这个hash值即可。 这里解决了维度太多的问题，但相互比较问题还是没解决，因为文档很多，所以要非常多次比较。第三步将减少比较流程，只要候选文档之间相互比较即可。 第三步：Locality Sensitive Hashing这里先讲M矩阵分成了b个bands，每个bands里包含r行，如图： 之后再对每个内容进行hash，使其map到k个buckets中，如果C1,C2有大于等于一个band在同一buckets中，则对他们进行比较，如图： 这样将每个bands都map到Buckets的不同块里，如果map到同一个buckets的块里，则称为candidate pair，他们不一定相等，要进行比较。但如果map到不同的块里，表明这两个band一定不同，不需要进行比较。 下面验证一下这个算法的可行性。 假设C1和C2的相似度为t，b为bands数目，r为每个band多少row，可以得知： band中所有row相等（该band会映射到同一bucket块）概率： t^r band中row存在不相等row概率：1-t^r 没有一个band是相等的概率：(1 - t^r)^b 至少有一个band相等的概率：1 - (1 - t^r)^b 按照公式计算，当b取20，r取5，对于相似度30%的文档C1,C2（不希望有bands出现在同一buckets中），有4.7%的几率至少一个bands分在同一buckets中，我们花多余的代价去计算它概率比较小。而相对于相似度80%的文档，有99.96%的几率我们要去比较他们，我们会错过一对相似文档的概率不到0.04%，可以接受。 综上改算法是可行的。","categories":[],"tags":[{"name":"big data","slug":"big-data","permalink":"http://yoursite.com/tags/big-data/"}]},{"title":"图说mysql的四种join","slug":"图说mysql的四种join","date":"2018-09-14T02:58:13.621Z","updated":"2018-09-15T02:19:20.596Z","comments":true,"path":"2018/09/14/图说mysql的四种join/","link":"","permalink":"http://yoursite.com/2018/09/14/图说mysql的四种join/","excerpt":"","text":"","categories":[],"tags":[{"name":"database","slug":"database","permalink":"http://yoursite.com/tags/database/"}]},{"title":"MapReduce终极整理","slug":"MapReduce终极整理","date":"2018-09-13T06:33:26.110Z","updated":"2018-09-15T02:14:03.928Z","comments":true,"path":"2018/09/13/MapReduce终极整理/","link":"","permalink":"http://yoursite.com/2018/09/13/MapReduce终极整理/","excerpt":"","text":"这个礼拜的课都在讲mapreduce，自己也看了google那篇文章，感觉理解了很多，趁着刚学的知识正热乎着，赶紧在这里总结一下。 首先，关于HDFS的内容在另一篇博客中有了比较详细的介绍，这里直接谈MapReduce。 使用MapReduce的目的用一个工具只有知道他的目的和优点，才能找到最合适的使用场景。简单来说，mapreduce提供了一个自动并行和分布式计算的工具（接口），在大规模集群中性能出众。由于它隐藏了这些分布式系统的细节，所以很多不懂分布式的程序员也可以基于此搭建分布式系统。对于一些web服务器、爬虫、排序算法、机器学习、数据挖掘等都很有用。 MapReduce的架构和运行这是本文的重点，不多说，直接上图。 这幅图是直接从论文截下来的，生动的讲述了mapreduce的整个流程： 将用户input文件主动分割成成16-64MB大小的块，然后在集群中做一些备份（一般备份3份，其中两份在同一个机架上） master发挥作用，将选择一些idle的worker给其分配map或者reduce任务。 这时候worker就会去读那些被分割的文件，将一个key/value对读取到用户定义的map函数中。worker在读取这些文件时，会优先读取本地存着的，如果本地没有，选取离它最近的文件，减少网络传输代价。 map函数会产生一些中间过程数据，然后周期性的通过buffer将它存在本地磁盘上，然后将地址、文件名等信息通知master，这些中间文件通过hash(key) mod R的方式被分成R份（R是reduce worker的数量），master就会将这些块分配给对应的reducer。 reducer会通过RPC方式读取到这些中间过程数据，然后进行一个排序（shuffle），这个shuffle会让相同value聚在一起。这个很必要，因为不同key会映射到同一个reduce任务上。 只有在map全部结束后，reduce才会开始。在reducer中处理这个有序数据时，遇到相同key就会把value放在用户定义的reduce函数中。最终reduce函数会把结果文件输出到这个reduce partition中。 最终得到的结果其实就是part-r-00000这样形式的不同文件。用户没必要把output文件最后聚在一起，如果需要的话，这个结果还可以作为下一轮mapreduce的输入。 在有Combiner后过程的改良上面的过程是论文中解释的，但现在的程序都用了Combiner，Combiner其实和reduce的代码是一样的，那他是做什么用的呢？ Combiner其实是针对本地的map后的结果进行pre-reduce（或者叫mini-reduce），例如wordcount在map之后大概是(‘a’:1),(‘b’,1),(‘a’,1),(‘c’,1)这样，combiner将local的这些先做一次reduce，变成(‘a’,2),(‘b’,1),(‘c’,1)，之后再去shuffle和reduce。 综上mapreduce整个过程分为四步： ​ Map -&gt; Combiner -&gt; Shuffle -&gt; Reduce Master节点的任务和结构对于每个map任务或者reduce任务，都分成三种状态：idel, in-progress, completed。每个任务的这些状态都存在master节点上。 Master节点是作为map任务和reduce任务通信的管道的。master要存储并更新M个map任务产生的M R个块(每个map任务产生R个块)的位置信息、文件名等。即，master承担 O(M+R)个scheduling决策，存储 O(M R)个状态信息。 M：map是的m块数据，R: reduce时的r块数据，W: worker机器的数量；三者关系为： ​ M &gt; R &gt; W Worker的容错问题首先，master出错的话，没啥好说的，直接告诉用户就成。 worker一旦出错，master应该要感知到，有两种策略感知： Pull模型 ：worker通过发送heartbeat给master，master在感知到heartbeat之后在heartbeat response里给worker分配任务。 Push模型：master一直ping worker，当一段时间ping不通后说明worker失败了。 这个时候master会将worker的任务分配给其他的worker去执行。对于执行完的worker，状态会重新标定为idle，表示有资格接受任务。失败的worker也会被标定为idle，同样可以接受任务。 对于在失败的worker上completed的map任务，在其他worker上需要重新执行，因为他们存在本地的中间数据访问不到了。但对于在失败的worker上completed的reduce任务则不需要重新执行，因为他们的结果文件存在了global的文件系统下。 在执行mapreduce时对于一些straggler（落伍者），有两种处理方式： Job stealing: 对这个job进行分片，将没完成的部分交给其他的worker完成。 Speculative execution: master，这时候两个类似竞争的关系，当其中一个结束时，这个task会被标定为completed，同时另一个task将会被放弃。","categories":[],"tags":[{"name":"big data","slug":"big-data","permalink":"http://yoursite.com/tags/big-data/"}]},{"title":"课程信息整理","slug":"课程信息整理","date":"2018-09-13T05:00:48.157Z","updated":"2018-09-13T08:19:32.862Z","comments":true,"path":"2018/09/13/课程信息整理/","link":"","permalink":"http://yoursite.com/2018/09/13/课程信息整理/","excerpt":"","text":"之前好多课上记的乱七八糟的东西都丢在了博客上，显得很乱，以后笔记可能还是写在ppt上多一些，关于课程的信息和一些总结会丢在博客上，保证博客的质量。 CMSC5741 - Big Data Technology and Applicationstextbook: Mining of Massive Dataset（已借） Instructor: Prof. Michael R. Lyu Tutor: Zeng Jichuan exam: Nov.6 Midterm exam Assessment Scheme and Deadlines: 20% Assignment 40% Midterm examination 40% Project : Proposal, Presentation, Report Backgroud Knowledge: Tensorflow, Amazon EC2 CSCI5570 - Large Scale Data Processing Systemswebsite Account: Username : csci5570 Password : huskydatalab Instructor: Prof. James CHENG Tutor: Tatiana Jin Lecture/Lab: Tuesday 13:30 Lecture &amp;&amp; Lab Wednesday 14:30 Lecture Assessment Criteria: 30% Survey paper : select one topics (DDL: Dec 10, 2018) 70% project : deadline: DEC 20 CMSC5724Data Mining and Knowledge DiscoveryInstructor: Yufei Tao Tutor: Shangqi Lu Assessment Criteria: 30% Project 30% Short Tests (three times in class) 40% Final (Open-book) CMSC 5720 - Project IInstructor: Prof. James CHENG Options: NN-descent （kn-graph的近似算法） search with fa2ss（facebook的相似性检索库） multiprobe with tree（基于树的哈希方法） LSH for MZPS （lsh） 数据收集-&gt;存储-&gt;分析 系统 topic modeling on ps archetective -&gt; （LDA FlexPS-&gt;parameter server拓展） 调度算法，同步/异步 任务，在不同集群下测试算法，分布式，任务的表现 矩阵分解 Distributed MF（矩阵分解） on Actor Framework （nomad,lftf acf或者akka -&gt; cpu to gpu to scheduling） Clustering-aware query (database query optimizer)","categories":[],"tags":[{"name":"class note","slug":"class-note","permalink":"http://yoursite.com/tags/class-note/"}]},{"title":"地道的口语表达积累","slug":"地道的口语表达","date":"2018-09-01T07:40:05.605Z","updated":"2018-09-13T08:08:18.213Z","comments":true,"path":"2018/09/01/地道的口语表达/","link":"","permalink":"http://yoursite.com/2018/09/01/地道的口语表达/","excerpt":"","text":"1. 给别人加油不要再用fighting啦～ Go get‘em. 完整说法：Go get’em tiger. 追女生：go get her 2. 问别人想不想要不要再用do you want啦～ be up for something e.g: Are you up for going clubing? 你想去蹦迪吗？ be up三个意思： 醒着 Are you up? 下一个 who’s up next? 怎么了 what’s up？ 3. 和朋友约出去玩play with不行，一般是小朋友或者人和宠物，不适合成人一起玩 hang out 还可以用chill out，自己一个人出去玩 e.g. Do you wanna hang out with us? ###4. 如何约一场“夜生活” night out～(名词) e.g. It’s been a while since we had a girls’ night out. 姐妹们我们已经很久没有出去玩啦 have(need) a night out. e.g. If you are up for a boys’ night out~ 如果想约不会太晚的夜生活用：evening out Night owl 夜猫子","categories":[],"tags":[]},{"title":"daily life in HK 2","slug":"daily life in HK 2","date":"2018-08-30T01:45:38.758Z","updated":"2018-08-30T01:45:39.446Z","comments":true,"path":"2018/08/30/daily life in HK 2/","link":"","permalink":"http://yoursite.com/2018/08/30/daily life in HK 2/","excerpt":"","text":"Sigh~When you have to try your best to save money in all aspects of your life, it is obvious that you can’t enjoy your life. While, I come here not for enjoy the postgraduate career but for open my mind and learn something useful. Another feeling deeps me most is if I can’t speak english well, the embarrassment will rise upon my face. In the afternoon, I met with my project teacher about the future work. From what he said, I could speculate that the former students may make him disappointed. As for project, he gave us much freedom to do what we interested in based on our foundation. At night, I hung out with Doc.Lin, and it is my first time to meet with old friends after I came to HK. We walked around 中环 and 香港岛, where we smell at the taste of dollars. What a fame of capitalism! Then we returned to 九龙 by ship and ate dinner there. Life of Doc.Lin seemed as relaxed and funny as the time in SAP. It’s admired by everyone, right?","categories":[],"tags":[{"name":"life","slug":"life","permalink":"http://yoursite.com/tags/life/"}]},{"title":"daily life in HK  1","slug":"daily life in HK  1","date":"2018-08-27T10:44:40.328Z","updated":"2018-08-27T15:21:07.557Z","comments":true,"path":"2018/08/27/daily life in HK  1/","link":"","permalink":"http://yoursite.com/2018/08/27/daily life in HK  1/","excerpt":"","text":"Finally, I arrive at CUHK and now I sit in SINO building writing this words. After that, I will upgrade my daily life in CUHK in my blog unregularly. The journey from SZ to HK is tremendously hard for my. I took all my packages (more than 30kg, wooo~~~) comming in HK custom. At that time, I thought the most difficulty time had been gone though. I was wrong, cause it was just the start of my suffering. The long lines of bus station made me crying, at the same time, I realized that I forgot to take some change. Of course, as a freshman of HK, I have no HK card. So I had to beg all around. After two times of tranfer, I got to Sha Tin station. From the introduction of my room, I knew the building I live is not far from the station. While, I made the mistake for twice. Unfortunately, It lies on a unknown mountain, so I was supposed to climb mountain with huge bags. Finally, I got in my rooms and met with my new roommate, who is a programmer, too. He is a nice guy and I was looking forward to make more friends here. What was worth to mention is we have a free dinner organized by our college, other guys in my table feel embarrassed to pack the left-overs so I took it all back. It solved my two-day meal problems. Never be shamed with yourself, keep on doing what you believe in and you will make it sooner or later!","categories":[],"tags":[{"name":"life","slug":"life","permalink":"http://yoursite.com/tags/life/"}]},{"title":"20180811日记","slug":"title 20180811日记","date":"2018-08-10T16:43:11.578Z","updated":"2018-09-04T02:25:56.218Z","comments":true,"path":"2018/08/11/title 20180811日记/","link":"","permalink":"http://yoursite.com/2018/08/11/title 20180811日记/","excerpt":"","text":"估计要暂别电脑一段时间，转型去线下学数学了～刚买了统计学习方法，之前数学底子太差了，要看点基础的东西，感触什么的就写在纸质笔记本里了，等看差不多了就来这篇日记打卡，把下面的flag挨个叉掉！ Flag～ X Flag~ Flag~ Flag~","categories":[],"tags":[{"name":"life","slug":"life","permalink":"http://yoursite.com/tags/life/"}]},{"title":"mac在nginx下部署php遇到的坑","slug":"mac在nginx下部署php遇到的坑","date":"2018-08-08T16:43:26.827Z","updated":"2018-08-10T16:40:03.685Z","comments":true,"path":"2018/08/09/mac在nginx下部署php遇到的坑/","link":"","permalink":"http://yoursite.com/2018/08/09/mac在nginx下部署php遇到的坑/","excerpt":"","text":"受人之托，帮人部署一个网站，然后我想在本地的nginx里先调试一下。一开始，打开页面显示403，这个之前见过，nginx的权限问题，改了这个权限之后，发现访问php页面都是直接下载而没有解析，我想起来电脑可能没有php环境，就下了php，然后还是同样的问题。总之因为对php不太熟悉（之前都用xampp这类软件），所以花了一点时间才搞定。 首先要明白的是，nginx本身不能处理php，它只是一个web服务器，当前端请求php时，nginx需要把界面发给php解释器处理，然后把结果返回给前端。一般地，nginx是把请求发给fastcgi管理进程处理。如nginx中配置： 1234567location ~ \\.php$ &#123; root html; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;#这里原来不是$document_root，搞得我很蒙，还好网上查到改好了，不然会报file not found include fastcgi_params;&#125; 所以要启动一个fastcgi，这里就用到了php-fpm，它是一个php fastcgi管理器，只用于php语言（旧版php的要单独下php-fpm，我用的php-fpm已经集成了这个）。 这里有很多奇怪的问题。 第一次运行php-fpm failed: 找不到/private/etc/php-fpm.conf文件， Solution:但这个目录下有个php-fpm.conf.default的文件，所以cp了正确名字的新文件 第二次远行php-fpm Failed: 找不到/usr/var/log/php-fpm.log Solution：根本没有这个目录，到conf文件里改了但是没有效果，没办法我就通过下面的命令执行php-fpm(后面都用这个命令执行) 1php-fpm --fpm-config /private/etc/php-fpm.conf --prefix /usr/local/var 第三次运行php-fpm Failed: No pool defined. at least one pool section must be specified in config file Solution：到/etc/php-fpm.d/ 目录下有文件www.conf.default，cp一份名为www.conf的文件 第四次运行php-fpm Failed：端口被占用 Solution：杀掉这个进程 12sudo lsof -i tcp:9000#找到占用9000端口的进程号kill -9 port#杀！ 第五次运行php-fpm 成功！ ##补充： 在nginx上配的时候又有所一点不同，在mac上php-fpm直接listen了9000端口，但在服务器上它listen了php7.0-fpm.sock但socket文件，这种方式可能快一点，所以要在nginx上php的配置那边将 1fastcgi_pass 127.0.0.1:9000; 改成： 1fastcgi_pass unix:/run/php/php7.0-fpm.sock; 才能成功运行php 继续补充很有意思的一个东西，要上传27m的一个视频，nginx直接报了413 Request Entity Too Large，是我没设置… 到nginx的配置（set-enabled/default）里面添加 12345server &#123; ... client_max_body_size 80m; ...&#125; 重读配置、重启服务器 12nginx -s reloadservice nginx restart 然后还要去修改php.ini，在其中修改两条配置 12upload_max_filesize = 80Mpost_max_size = 80M 然后关掉php-fpm的进程，再重启即可～ ps：贺老师真的完全不研究的…mp4传不上去只是在系统里没添加这种类型，这种事都要我自己去找…难受 :( note：在ubuntu下现在比较推荐用apt而不是apt-get…so，是时候改变了！","categories":[],"tags":[{"name":"mac","slug":"mac","permalink":"http://yoursite.com/tags/mac/"}]},{"title":"看Husky的一点整理","slug":"Husky文档整理","date":"2018-08-08T02:34:42.580Z","updated":"2018-09-04T06:49:23.084Z","comments":true,"path":"2018/08/08/Husky文档整理/","link":"","permalink":"http://yoursite.com/2018/08/08/Husky文档整理/","excerpt":"","text":"Username : csci5570 Password : huskydatalab husky是一个通用的分布式的计算平台，就像mapreduce、spark这种，它是用c++写的（难受…） 配置12345678910111213# Requiredmaster_host=master#master跑的地方master_port=10086#master绑定的端口comm_port=12306#worker绑定的端口# Worker information[worker]info=worker1:4#worker1有4个线程info=worker2:4#worker2有4个线程#如果用了hdfs，配置hdfs路径hdfs_namenode=masterhdfs_namenode_port=9000 运行的时候用 1./program --conf=/path/to/config.ini 写入配置。 组件Object ListObject List（objList）是husky中最主要的对象，可以把任何对象都存在objlist中，两个objlist通过channel传递消息。 12345678class Obj &#123; public: using KeyT = int; KeyT key; const KeyT&amp; id() const &#123; return key; &#125; Obj() = default; explicit Obj(const KeyT&amp; k) : key(k) &#123;&#125;&#125;; 创建一个obj只要3步： 定义一个key的类型（keyT），一般都用int 写一个id（）函数来返回该对象对应的key 需要一个默认构造函数，还需要一个能够接收key参数的构造函数 接下来就可以创建、使用、删除Object List 123456789101112//创建名叫my_objlist的objlistauto&amp; objlist = ObjListStore::create_objlist&lt;Obj&gt;(\"my_objlist\");//将obj传入创建好的objlist中Obj obj(3);objlist.add_object(obj);//通过名字拿到对应的objlist，注意这里的auto关键字，自动判定类型，很舒服！auto&amp; objlist2 = ObjListStore::get_objlist&lt;Obj&gt;(\"my_objlist\"); //通过名字删除objlistObjListStore::drop_objlist(\"my_objlist\"); 为了让添加在objlist中的obj被其他线程感知并利用，在多线程情况下需要将objlist全局化一下，husky已经封装好该方法 1globalize(objlist); 接下来就是最重要的一个函数list_execute（），它规定了list里的每个object需要做的事，这个函数是用户自己定义的。它有两个参数： 第一个是要操作的objlist 第二个是这个objlist中每个obj要做的事，例如下面函数就是obj在log中打印id，包括之后用channel发送或接收消息也都是在这个函数里 123list_execute(objlist, [](Obj&amp; obj) &#123; base::log_msg(\"My id is: \" + obj.id());&#125;); Channelchannel就是object和object互相通信的工具，他们的关系类似于城市和公路。husky中有四种channel： Push Channel：最常见的点对点通信 Push Combined Channel：在push channel基础上增加了合并发给同个obj的 Broadcast Channel：将一个key-value广播出去，任何地方都可以通过key拿到值 Migrate Channel：用来migrate对象，将一个对象发送到另一个线程上 channel的创建、使用和drop（一定要主动销毁） 1234567891011121314// create PushChanneltemplate &lt;typename MsgT, typename DstObjT&gt; static PushChannel&lt;MsgT, DstObjT&gt;&amp; create_push_channel(ChannelSource&amp; src_list, ObjList&lt;DstObjT&gt;&amp; dst_list, const std::string&amp; name = \"\");// Get PushChannel through nametemplate &lt;typename MsgT, typename DstObjT&gt;static PushChannel&lt;MsgT, DstObjT&gt;&amp; get_push_channel(const std::string&amp; name = \"\");// Drop channel through namestatic void drop_channel(const std::string&amp; name); 下面通过例子来说明： 首先，要想创建channel，就要确定发消息的源objlist和目的objlist，当然，参数里的目的objlist必须是全局化的 12//创建一个push_channelauto&amp; ch = ChannelStore::create_push_channel&lt;int&gt;(src_list, dst_list); 一般来说，channel是放在list_execute（）函数里用的，要想清楚从哪个obj发，发什么，哪个obj接收（通过key来标注） 12345678910111213141516171819//push channel//发送端代码list_execute(src_list, [&amp;ch](Obj&amp; obj) &#123; ch.push(msg, key); // send msg to key&#125;);//接收端代码list_execute(dst_list, [&amp;ch](Obj&amp; obj) &#123; auto&amp; msgs = ch.get(obj); // The msgs is of type std::vector&lt;MsgT&gt;, MsgT is int in this case&#125;);//broadcast channelauto&amp; ch4 = ChannelStore::create_broadcast_channel&lt;int, std::string&gt;(src_list);list_execute(src_list, [&amp;ch4](Obj&amp; obj) &#123; ch4.broadcast(key, value); // broadcast key, value pair&#125;);list_execute(src_list, [&amp;ch4](Obj&amp; obj) &#123; auto msg = ch4.get(key); // get the broadcasted value through key.&#125;); ###Aggregator 用来执行一些聚合操作的类，可以用来做求前k大值，统计数量，计算机器学习梯度总数等。他的构造函数需要两个参数（或以上），一个是init值，另外是lambda函数 1Aggregator&lt;int&gt; agg(0, [](int&amp; a, const int&amp; b)&#123; a += b; &#125;); 这个lambda函数就是aggregate的规则。 在创建完agregator后，就要使用它了。可以用update函数或者update_any函数（比update可接受参数类型多）来进行aggregator，例如 1agg.update(1);//aggregator值加1 在聚合完之后，更新的值其实只在本地，为了让这个值在全局响应要用HuskyAggregatorFactory::sync()函数。另一种方式是通过HuskyAggregatorFactory::get_channel()来拿到通道，然后在list_execute中通过这个channel把消息传播出去，这种方法最后也会去调用sync()函数 12345678//两种方式AggregatorFactory::sync();// or using aggregator channelauto&amp; ac = AggregatorFactory::get_channel();list_execute(obj_list, &#123;&#125;, &#123;&amp;ac&#125;, [&amp;](OBJ&amp; obj) &#123; ... // here we can give updates to some aggregators&#125;); 当全局划这个聚合之后，就可以用get_value()函数得到值了 1int sum = agg.get_value() 这个值是被全局共享的，所以对他的修改会影响其他executor，并可能有线程安全问题","categories":[],"tags":[{"name":"CUHK","slug":"CUHK","permalink":"http://yoursite.com/tags/CUHK/"}]},{"title":"Hadoop了解一下","slug":"hadoop了解一下","date":"2018-08-05T14:20:47.264Z","updated":"2019-01-28T01:35:08.275Z","comments":true,"path":"2018/08/05/hadoop了解一下/","link":"","permalink":"http://yoursite.com/2018/08/05/hadoop了解一下/","excerpt":"","text":"搞分布式数据分析系统，hadoop绝对是不可绕过的一关，所以简单玩了一下，以下是总结。 map reduce automatic parallezation Fault tolerance a clean abstraction for programmers BSP model : Bulk sychronous parallel identity reducer？re 基本概念Apache Hadoop与HDFSHadoop是一个大的生态系统，最主要是hdfs和一个基于mapreduce的分布式计算引擎。hdfs就是一个文件系统，在mapreduce的时候（包括用spark的时候）都需要对应文件在hdfs里。 block块：HDFS在物理上是以block存储的，block大小可以通过配置参数（dfs.blocksize）来规定，默认128M，可以减少寻址开销。大文件会被切分成很多block来存，而小文件存储则不会占用整个块的空间。 NameNode：是master。负责管理文件系统的namespace（可以理解是指向具体数据的文件名、路径名这种）和客户端对文件的访问。data path？ (非Yarn)JobTracker：在NameNode上，协调在集群运行的所有作业，分配要在tasktracker上运行的map和reduce任务。 DataNode：是slave。datanode则负责数据的存储。 (非Yarn)TaskTracker：在datanode上，运行分配的任务并定期向jobtracker报告进度。 流式访问：指hdfs访问时像流水一样一点一点过。这样也决定了hdfs是一次写入、多次读取的特性，同时只能有一个wirhter。这样访问方式适合做数据分析，而不是网盘这种。 rack-aware（机架感知）：这是hdfs的复制策略。hdfs为了数据可靠一般会将数据复制几份（默认三份）。同一个机架的机器传输速度快，不需要通过交换机。为了提高效率，一台机器的数据会把一个备份放在同一机架（相同rack id）的机器里，另一个备份放在其他机架的机器上。机架的错误率很小，所以不影响可靠性。 hdfs的特点： 面对构成系统的组件数目很大，所以对硬件的快速检测错误并自动回复非常重要 hdfs需要流式访问他们的数据集 运行的数据集非常大，一个典型文件大小一般在几G到几T 文件访问模型是“一次写入、多次访问” 将计算移动到数据附近闭将数据移动到计算更好 Yarnyarn其实是解决了经典mapreduce中一些问题（例如：jobtracker太累导致的可扩展性问题）的新一代hadoop计算平台。 ResourceManager：代替jobtracker，以后台进程的形式运行。追踪有哪些可用的活动节点和资源，指出哪些程序应该何时或者这些资源。 ApplicationMaster：代替一个专用而短暂的JobTracker。用户提交一个应用程序时，会启动applicationmaster这个轻量级进程实例来协调程序内任务（监视进度、定时向resourcemanager发送心跳数据、负责容错等），计算数据需要的资源并向resourcemanager申请。它本身也是在一个container里运行的，且可能与它管理的任务运行在同一节点上。 Container：是yarn中资源的抽象，封装了某个节点上一定量的资源（如cpu和内存等资源）。它的分配是由applicationmaster向resourcemanager申请的；而它的运行则是applicationmaster向资源所在的nodemanager发起的。 NodeManager：代替tasktracker。拥有很多动态创建的资源Container。容器大小取决于它所包含资源量，而一个节点上的容器数量由配置参数和除用于后台进程和操作系统以外资源总量决定。 基本架构Hdfs采用了master/slave架构。一个hdfs集群由一个namenode和一群datanodes组成。简单来说，就是hdfs通过namenode暴露出了文件系统命名空间的操作，包括打卡、关闭、重命名文件等等。在这个文件系统对一块数据的操作会映射到具体的datanodes上。 所以一般是一台机器上搭namenode，然后datanode在其他各个机器上。 Hadoop Streamingjava这么规范的东西有人就是不喜欢，非得用python啥的写hadoop，所以就有了hadoop streaming，支持其他语言的hadoop操作。 Haddop Resource Managementhadoop的资源管理进化 基本操作单节点测试比较无聊，只是测一下能不能跑，不需要运行什么 12345$ cd Cellar/hadoop/3.1.0/libexec$ mkdir input#不能是别的名字$ cp etc/hadoop/*.xml input$ hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.0.jar grep input output 'dfs[a-z.]+'$ cat output/* 伪分布式测试（pseudo-distributed） 保证本机已经装好hadoop，java1.8（java9有些函数被废了会报错） 配置本机ssh，确保 1ssh localhost#mac默认不允许，需要手动去打开 可以运行。注意：mac默认不允许任何机器远程登录，需要到 系统偏好设置 -&gt; 共享 去勾选远程登录。 配置HDFS，包括core-site.xml文件和hdfs-site.xml文件。前者配置用于存储HDFS的临时文件目录和hdsf访问端口，后者确定复制份数 12345678910111213&lt;!-- core-site.xml --&gt;&lt;configuration&gt; &lt;property&gt; &lt;name&gt;hadoop.tmp.dir&lt;/name&gt; &lt;value&gt;[$HADOOP_HOME]/tmp&lt;/value&gt; &lt;!--如果无此目录则去mkdir一个--&gt; &lt;description&gt;A base for other temporary directories.&lt;/description&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;fs.default.name&lt;/name&gt; &lt;value&gt;hdfs://localhost:9000&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt; 123456789101112131415&lt;!-- hdfs-site.xml --&gt;&lt;configuration&gt; &lt;property&gt; &lt;name&gt;dfs.replication&lt;/name&gt; &lt;value&gt;1&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt; &lt;value&gt;[$HADOOP_HOME]/hdfs/namenode&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt; &lt;value&gt;[$HADOOP_HOME]/hdfs/datanode&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt; 格式化HDFS 1hdfs namenode -format 成功的话在tmp目录下可以看到dfs文件 启动各个节点 12345678#直接启动全部（包括hdfs和yarn）sbin/start-all.sh#分别启动hdfs --daemon start NameNode#启动namenodehdfs --daemon start DataNode#启动datanodehdfs --daemon start SecondaryNameNode#它是namenode的快照，保证了namenode的更新jps#用来查看这些节点是否真的启动了 在HDFS上创建文件夹及文件 123hdfs dfs -mkdir /demo#在hdfs上创建demo文件夹hdfs dfs -ls /demohdfs dfs -put test.input /demo#将本地的test.input文件发到hdfs上 配置Yarn的mapred-site.xml和yarn-site.xml 123456789101112&lt;!-- mapred-sited.xml --&gt;&lt;configuration&gt; &lt;property&gt; &lt;name&gt;mapreduce.framework.name&lt;/name&gt; &lt;value&gt;yarn&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;mapreduce.application.classpath&lt;/name&gt; &lt;value&gt;share/hadoop/mapreduce/*&lt;/value&gt; &lt;/property&gt; &lt;!-- 如果不加这个property，在后面运行mapreduce任务时会报找不到包 --&gt;&lt;/configuration&gt; 12345678910111213&lt;!-- yarn-site.xml --&gt;&lt;configuration&gt;&lt;!-- Site specific YARN configuration properties --&gt; &lt;property&gt; &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt; &lt;value&gt;mapreduce_shuffle&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt; &lt;value&gt;localhost&lt;/value&gt; &lt;/property&gt; &lt;/configuration 运行mapreduce任务 1hadoop jar hadoop-mapreduce-examples-3.1.0.jar wordcount /demo/test.input /demo-output/ 可以到对应文件里查看运行结果","categories":[],"tags":[{"name":"big data","slug":"big-data","permalink":"http://yoursite.com/tags/big-data/"}]},{"title":"Spark使用整理","slug":"spark使用整理","date":"2018-08-05T13:38:09.544Z","updated":"2018-09-24T10:08:41.377Z","comments":true,"path":"2018/08/05/spark使用整理/","link":"","permalink":"http://yoursite.com/2018/08/05/spark使用整理/","excerpt":"","text":"Recently I read the book &lt;\\&gt;, the summation about this book will be wrote down here. the notion of RDD(resilient distributed dataset)The RDD is the fundamental abstraction in spark it represents a collection of elements that is Immutable ( read-only ) Resilient ( fault-tolerant ) Distributed Immutable : allow xspark to provide important fault-tolerance guarantees in a straightforward manner. Distributed : machines are transparents to users, so working with RDDs is not much differents from working with a lists, maps and so on. Resilient: whereas other systems facilitate fault-tolerance by replicating data to multiple machines, RDDs provide falut-tolerant by logging the transformations used to build dataset rather than itself. When fault happens, it just need to repair a subset of dataset. Basic RDD Operationthere are two types of operations Transformations actions Transformations : like filter and map, perform some useful data manipulation and it will produce a new RDD actions : like count and foreach, trigger a computations to return a result. Spark SQLDataframe is a basic elements of Spark, similarily with other Dataframe in python or R, it represent a table-like data with named columns and declared column types. The different among them is it’s distributed nature and spark’s catalyst. Fundamental concepts: Spark Sql: Consult from Table catalog; Query from Relational DB, Read data from HDFS. Spark Application can using DataFrame DSL to submit spark job, as for non-spark client could connect though JDBC. Table catalog: It contains information about registered DataFrames and how to access their data. DataFrame: user reads its data from a table in a relational databases. Spark sql is supported by Hive. Hive is a distributed warehouse built as a layer of abstraction on the top of Hadoop’s MapReduce. It has its own dialect named HiveQL. Create DataFrameWe can create DataFrame in these three ways: Converting from RDDs Using RDDs containing row data as tuples Using case classes Specifying a schema Running SQL queries Loading external data Using RDDs containing row data as tuples : use toDF() method to convert RDD to DataFrame. However, all columns are of type String and nullable, which obviously is a bad solution. Using case classes : the case class like this: 1234567case class Post(commentCount:Option[Int],body:String,......) Nullable fields are declared to be of type Option[T]. Specify a schema: This format of schema like this: 1234val postSchema = StructType(Seq( StructField(\"commentCount\", IntegerType, true), StructField(\"id\",LongType,false))) Then invoke spark.createDataFrame(rowRDD, postSchema) to convert. DataFrame API BasicsSelect: 12val postIdBody = postsDF.select(\"id\",\"body\")val postIds = postsIdBody.drop(\"body\")//drop this column Filtering: 1val noAnswer = postsDf.filter(('postTypeId === 1) and ('acceptedAnswerId isNull))","categories":[],"tags":[{"name":"big data","slug":"big-data","permalink":"http://yoursite.com/tags/big-data/"}]},{"title":"homebrew使用整理","slug":"homebrew使用整理","date":"2018-08-02T04:05:26.949Z","updated":"2018-09-13T08:07:57.002Z","comments":true,"path":"2018/08/02/homebrew使用整理/","link":"","permalink":"http://yoursite.com/2018/08/02/homebrew使用整理/","excerpt":"","text":"现在新的mac基本都内置homebrew了吧，brew可以说是mac神器之一了。上手简单，但还是用法需要整理一下： ###brew常用命令 12345brew search 包名 #搜索包brew info 包名#包信息brew list #查看有哪些包brew install 包名#安装包brew uninstall 包名#删除包 brew管理服务brew还有个重要的任务就是管理服务，在我本机的： Kafka mysql nginx Redis zookeeper 都是用了brew进行管理，管理他们用 12brew services start 服务名#开启一个servicebrew services stop 服务名#关闭一个service 每次开启一个服务，就会在～/Library/LaunchAgents里面增加一个plist文件，用来存储这个服务的一些版本信息，同时，本机所有其他服务可以通过 123launchctl load *.plist #加载 launchctl unload *.plist #取消launchctl list#查看服务 来完成 brew其他命令1brew link 包名 这里的link是指symbollink（有点类似于windows里的创建快捷方式）。以hadoop为例，在brew刚下载的hadoop只是存在/usr/local/Cellar目录下的，在全局环境下不能用hadoop命令。只有将其link到bin里（hadoop产生了27个symbolink），才能全局使用hadoop命令。在用brew install时会默认完成link的操作，除非出现意外。 意外：在安装hadoop时出现了 1234Error: The `brew link` step did not complete successfullyThe formula built, but is not symlinked into /usr/localCould not symlink sbin/FederationStateStore/usr/local/sbin is not writable. 是因为我本机根本没有这个目录，同时权限也不够，所以我建了这个目录，然后用 1sudo chown -r $(whoami) $(brew --prefix)/* 修改了对应权限，成功安装。这里引出了 1brew --prefix 这个是指brew存在的目录，其他brew操作都是在这个目录下搞的（例如cellar就是在这个目录下）。","categories":[],"tags":[{"name":"mac","slug":"mac","permalink":"http://yoursite.com/tags/mac/"}]},{"title":"hip-hop中一些slang积累","slug":"hip-hop中一些slang积累","date":"2018-07-27T15:25:18.747Z","updated":"2018-09-15T02:21:21.625Z","comments":true,"path":"2018/07/27/hip-hop中一些slang积累/","link":"","permalink":"http://yoursite.com/2018/07/27/hip-hop中一些slang积累/","excerpt":"","text":"听了很久trap，很多都不太懂，之后不懂的就写在这里吧～ ###In my feelings - Drake （KIKI在b榜第一呆了一个月，我满耳朵都是kiki） Henny -&gt; Hennessy：轩尼诗（酒） wraith：幽灵、幻影（劳斯莱斯品牌） code to the safe：保险箱密码 Neck work：类似的表达有give me some neck，指吹喇叭，等同于blow job或者sucking或者blowing of one’s dick~ Netflix and chill：一个internet meme，指约pao net worth；资产净值（身价） Alright - Kendrick LamarMac-11：机械手枪的型号 Pussy&amp;Benjamin：指代女人和金钱 Chevy -&gt; chevrolet 雪弗兰 Get reaping everything I sow：收获我所播种的（种豆得豆） My karma：我的命运 Preliminary hearing：法庭的初审 fight my vice：和恶习斗争（vice除了副的还有恶习的意思） Popo：police，条子 Preacher：牧师，传道人 Regal：君主的，这里指别克君威车 Resentment：愤恨，不满 Self destruct：自我毁灭 Lucy -&gt; Lucifer：是指撒旦，Satan, the devil（貌似只有lamar称lucifer为lucy～） Bed - Nicki Minaj/Ariana Grande （沉迷黄歌，无法自拔～）wit’(with) your name on it：属于某人（不是真的指文字那种） Sheet：床单 Carter III：指Lil Wayne备受赞誉的专辑 A Milli：Carter III专辑中的一首歌 GOAT：greatest of all time 史上最佳 turn down：拒绝（don’t turn me down不要拒绝我） Lingerie：内衣如图，不解释 blow it like a feather on you：像一片羽毛xx你（撩的不行啊～） Starting five：指nba那种首发五人，也可以用 Starting Line-up（首发阵容） Thick skin：脸皮厚，不怕被骂～","categories":[],"tags":[{"name":"hiphop","slug":"hiphop","permalink":"http://yoursite.com/tags/hiphop/"}]},{"title":"pandas使用整理","slug":"pandas使用整理","date":"2018-07-24T14:55:02.595Z","updated":"2018-09-13T08:09:25.940Z","comments":true,"path":"2018/07/24/pandas使用整理/","link":"","permalink":"http://yoursite.com/2018/07/24/pandas使用整理/","excerpt":"","text":"之前看了numpy，这两天看了pandas，也在这里整理一下。 新建123456789101112131415import pandas as pddata = &#123; 'key1':['value11,value12'], 'key2':['value21','value22'] &#125;df = pd.DataFrame(data)df.index#描述dataframe的index的【开始/结束）和步长，注意这个是指df的index而非数据的iddf.columns#行名df.dtypes#类型df.size#数据总数df.shape#数据形式（行，列）df.ndim#维度df.T#转置 从数据库中得到数据 &amp;&amp; 将数据写入数据库1234567891011from sqlalchemy import create_engine#连接mysql数据库engine = create_engine('mysql+pymysql://root:qh129512@127.0.0.1:3306/testdb?charset=utf8')sql = 'select * from person'#下面有三种获取数据的方式，返回的formlist就是一个dataframeformlist = pd.read_sql_query(sql,con=engine)#参数为sql语句formlist = pd.read_sql_table(table,con=engine)#参数为表名formlist = pd.read_sql(sql,con=engine)#参数可以是sql语句，也可以表名 下面是将数据写入数据库 12345df = pd.DataFrame(data,columns=['name,birthday'])#这里的columns就是指dataframe里有哪些comlumn，这里没有的df里也不会有，如果不添加columns这个参数就默认data中全部数据df.to_sql(name='person',con=engine, if_exists='append',index=False)#if_exists:有三种fail-&gt;表存在就不写入；replace-&gt;表存在就删掉原来的表重新创建；append-&gt;在原表基础上追加数据。默认为fail#index：决定是否将行索引作为数据传入数据库，注意：如果数据库没有专门来存这个的就false，因为表里没有这里用true会有问题 使用dataframe直接取某个、某些数据 1234df['name'][0]df.name[:5]df[['name','birthday']][:2]df.head() 取数据的切片 1234567df.loc[:5,'name']#前一个参数为行索引，后一个是列索引名称df.iloc[0:2,1]#有条件的切片df.loc[(df['name'] == 'max'),:]#取name为max的切片df.iloc[(df['name'] == 'max').values,:] 这里有两个函数，loc和iloc，区别有 loc第一个参数可以为series，例如我传入一个条件，其实相当于一个Series([True,True,False…])这种形式；iloc不可以穿series，但能传一个array，所以可以通过.values的形式传入条件 行索引时loc是前后闭区间，而iloc是前闭后开区间（python中这种更常见） 删除数据 123456df.drop(labels=rang(9,10),axis=0,inplace=True)'''labels接收string、array，表示删除行/列的标签axis接收0、1，表示操作轴向，0为横，1为纵inplace接收boolean，代表操作是否对原数据生效''' 对dataframe中数据修改 12345#直接声明就可以添加一列，如df['prefix_name'] = 'MAC_' + df['name']#修改某个数据可以将其找出来然后直接赋值df.loc[(df.name == 'max'),'name'] = 'maxhh' 随机数的使用 1234series = pd.Series(np.random.randint(high=10000,low=1000,size=8))#产生一个随机seriesdf.loc[:,'net-worth'] = series#将series值付给df dataframe算数统计 12345df['net-worth'].mean()#平均值np.mean(df['net-worth'])#另一种计算平均值的方法df['net-worth'].min()#最小值df['net-worth'].describe()#描述，包含很多数据可以用！nullNum = df.shape[0] - df['name'].count()#统计有多少空值 Category类型的使用可以将某一列转化成category类型，这样相当于做了一次分类处理，这样得到的描述性信息会很多 123df['name'] = df['name'].astype('category')#注意这里是赋值而不是调用df['name'].describe() 时间类型pandas里有很多时间类型，不同类型用处不同。如timestamp主要用来记录时间，而timedelta用来做时间运算 12#有很多方法创建或转化出一个timestamptoday_date = pd.to_datetime('2018-8/5')#随意的一个string都可以识别 注意一个概念，从数据库一个datatime拿出来的时间如果调用dtype的话发现是(‘&lt;M8[ns]’)类似的类型，展开来说： 这个是属于机器的比较特别的类型:小端机器的类型：datatime[ns] == &lt;M8[ns]大端机器的类型：datatime[ns] == &gt;M8[ns]这个可以通过 12np.dtype('datetime64[ns]') == np.dtype('&lt;M8[ns]')#out: True 证明。所以当数据库中取出就是这种类型时，不需要再进行处理，但如果取出是个object，则用pd.to_datatime处理 1df['birthday'] = pd.to_datatime(df['birthday']) 这里要熟悉的操作有： 123user_birthday = [i.year for i in df['birthday']]#返回所有年份的listbirthday = df[df['birthday']&lt;=pd.datetime(1991,1,1)]#按条件取时间时，一定要那拿timestamp与对应的pdf.datetime()相比 还有时间做加减法也是支持的,timestamp可以加一个tmiedelta来做时间的计算。注意timedelta的参数为weeks,days,hours以及更小的时间直接用+，-符号就可以做计算了。相反的，想算两个时间差，只要用两个datetime做减法，即可得到timedelta类型的时间差距 12345aweek_after = date + pd.Timedelta(weeks = 1)today_date = pd.to_datetime('2018-8-5')time_delta = aweek_after - today_date#两个timestamp做减法，得到了一个timedelta类型的时间差 分组和聚合分组顾名思义，就是将数据按照一定条件进行分组，得到数据整体情况 12data_group = df.groupby(by='birthday')data_group.count() 这里的count()得到如下表结果 id name net-worth birthday 1987-01-10 1 1 1 1989-03-10 6 0 4 1993-08-05 1 1 1 1995-12-12 1 1 1 1996-10-12 1 1 1 分组的直接结果并不能直接看，因为它返回的只是一个地址，但可以方便的查分组后的一些属性，如：count，head，max等等 聚合，就是将一组数据做aggretate，聚合的函数自己定 123df['net-worth'].agg([np.sum,np.mean])#针对net-worth数据计算两种agg，分别以sum和meandf.agg(&#123;'net-worth':[np.sum,sp.mean]&#125;)#针对不同数据要进行不同的agg，可以用key-value的方式 agg函数的参数是计算函数，这个函数可以用numpy中一些简单的统计函数，如果复杂也可以自定义，如： 1234567def Trinum(data): return data.sum()*2 df['net-worth'].agg(Trinum)#agg函数的参数可以是函数，该函数将data传入做处理，然后返回即可#稍微注意下sum后面的括号，没有括号是函数，有括号的是执行，但必须声明参数df['net-worth'].agg(lambda x:x*2)#agg的参数可以是lambda函数 这里的一个例子： 1df.groupby(by='birthday').agg(np.mean)#完全等价于data_group.mean()，都是求每组的平均值 当然，apply函数、transform函数和agg函数也大部分相同，但apply方法不能用key-value类型来特定的处理，transform方法只有一个参数function 创建透视表可以通过pandas创建透视表 1pd.pivot_table(df[['id','name','net-worth']],index=['id'],columns='name',fill_value=0)#不显示无index的值 得到 net-worth name hape john johnny max id 1 0 0 0 6355 2 0 6567 0 0 4 0 0 8491 0 8 6872 0 0 0 但这不是pandas的重点，略～","categories":[],"tags":[{"name":"data science","slug":"data-science","permalink":"http://yoursite.com/tags/data-science/"}]},{"title":"看了一点zookeeper的心得","slug":"zookeeper整理","date":"2018-07-19T16:10:42.509Z","updated":"2018-09-15T02:20:32.623Z","comments":true,"path":"2018/07/20/zookeeper整理/","link":"","permalink":"http://yoursite.com/2018/07/20/zookeeper整理/","excerpt":"","text":"###Fast Paxos算法： 这个还没看，先留个坑把。 ###文件结构： zookeeper的文件结构大概是这个样子的： !å¾ 1 Zookeeper æ°æ®ç”æ](https://www.ibm.com/developerworks/cn/opensource/os-cn-zookeeper/image001.gif) znode（data node）： 其中的每个子目录就是一个znode，他们也可以有子的znode（临时znode除外）。 这些znode必须是绝对路径，不允许相对路径。 每个znode都维护一个stat structure（linux系统文件的结构），其中包括版本号，acl改变等等。每次更新数据会让版本号自增。 每个znode可以设置一个watches，当watch触发后，zookeeper将发给client一个提醒。 在znode中数据读写是原子性的。每个znode都有一个ACL（access control list）来控制其读写权限。zookeeper不是用来做数据库的，其中存储的数据可能都是几kb的配置/状态信息。大块数据都存在hdfs中。 Ephemeral node就是临时节点，每次会话结束这些节点都会清空，不允许有子节点。 ###Zookeeper Session： ###一致性的保证： zookeeper是一个非常高效、可扩展的服务。其一致性靠以下几点保证： 顺序的一致性。一个client的更新会依序发送给其他。 原子性。更新是原子操作，只有成功和失败，没有中间过程。 服务器会看到完全相同的服务，不论其连接了哪个服务器。 可靠性。一旦一个更新被部署，他会一直存在，直到被另一个更新覆盖。 及时性。client对系统的观察在一个时间段内将是最新的。也即系统的改变在这个时间段内client是看见的，或者可以探测到它失败。","categories":[],"tags":[{"name":"big data","slug":"big-data","permalink":"http://yoursite.com/tags/big-data/"}]},{"title":"numpy使用整理","slug":"numpy使用整理","date":"2018-07-18T02:26:21.042Z","updated":"2018-09-13T08:07:30.513Z","comments":true,"path":"2018/07/18/numpy使用整理/","link":"","permalink":"http://yoursite.com/2018/07/18/numpy使用整理/","excerpt":"","text":"最近看了一些numpy的基础，在这里整理一下。 创建：123456789101112import numpy as np#数组array1 = np.array([[1,2,3],[4,5,6]])np.eye(3)#单位多维数组np.diag([1,2,3,4])#对角多维数组np.arange(1,4)#[1,2,3]数组#矩阵np.mat(\"1 2 3;4 5 6;7 8 9\")#矩阵运算与多维数组运算结果不同，所以要用mat建矩阵，用分号隔开数据matrix = np.mat(array1)#可以用多维数组初始化矩阵matrix1 = np.bmat(\"array1 array2;array1 array2\")#创建分块矩阵 随机数：1234np.random.random(100)#完全随机np.random.rand(5,5)#5*5均匀分布np.random.randn(5,5)#5*5正态分布np.random.randint(2,50,size=(2,3),dtype='l')#大于等于2小于50的2*3的int64型整数 变换数组形态：123arr.reshape(3,3)#转变成3*3的数组，但要求原数组必须9个元素，否则不能reshapenp.hstack((arr1,arr2))#横向组合np.vsplit(arr4,3)#横向切割，即把横向由1列的变成3列（相当于横着切） 文件存储与读取12345678910#二进制存储与读取#存储file = \"./temp/save_arr.npy\"filez = \"./temp/save_arr.npz\"np.save(file,arr)#用save存，文件扩展名.npy，只能存一个数组np.savez(filez,arr1[,arr2...])#用savez存，文件扩展名.npz，可以存多个数组。注意：不按照要求扩展名，则系统自己添加对应扩展名；二进制存储的数组打开文件看不到真实数据#读取loaded_data = np.load(file)#存储可以省略扩展名，读取一定不可以loaded_dataz = np.load(filez)loaded_dataz[\"arr_0\"]#对于多个文件读取，这种方式可以得到单独数组 12345#文件存储与读取#存储np.savetxt(fname,x,fmt='%d',delimiter=',',newline='\\n',header='',footer='',comments='# ')#x为要存的数组，fmt='%d'表示整数方式存，delimiter表示存储时的分隔符，存储和读取时默认为空格#读取loaded_data = np.loadtxt(fname,delimiter=\",\")#一定也要带上啊delimiter且与文件中的分隔符一致 利用numpy做简单的统计分析1234567891011121314151617181920np.random.seed(10)#种子是伪随机数的开头，相同种子对应随机数都相同，一般种子会设为当前时间，确保得到真随机数（numpy默认也是这样）arr = np.random.randint(1,10,size=10)#排序arr.sort()#这个会直接将arr排序arr.sort(axis=0)#二维数组的sort参数axis可以为0、1，分别对应数组纵向和横向的排序#去重np.unique(arr)#重复np.tile(arr,3)#arr是重复哪个，3是重复次数np.repeat(arr,3,axis=0)#axis是重复的方向（tile没有这个参数）#注意：tile是对数组进行重复，repeat则是对每一个数组的每一个元素进行重复，打破了原来的数组。#常用统计函数np.sum(arr)#求和arr.sum(axis=0)#沿纵轴求和np.mean(arr)#计算数组均值arr.mean(axis = 0)#沿着纵轴计算数组均值np.std(arr)#计算标准差np.var(arr)#计算方差np.min(arr)#计算最小值np.max(arr)#计算最大值","categories":[],"tags":[{"name":"data science","slug":"data-science","permalink":"http://yoursite.com/tags/data-science/"}]},{"title":"最近在看的东西","slug":"20180716日记","date":"2018-07-16T09:12:39.376Z","updated":"2018-08-10T10:38:03.271Z","comments":true,"path":"2018/07/16/20180716日记/","link":"","permalink":"http://yoursite.com/2018/07/16/20180716日记/","excerpt":"","text":"最近都没有写博客，想更一篇了。 前几天在刷算法，这几天看了一些springboot的东西。之前对spring了解的也比较多，而且这次看的也比较浅，就这样吧。 感觉很慌。马上要找工作了，我却还没开始工作… spring-boot用的时候再看吧， 算法还是要接着刷， 接下来就做我的python了！","categories":[],"tags":[{"name":"life","slug":"life","permalink":"http://yoursite.com/tags/life/"}]},{"title":"anaconda基础整理","slug":"anaconda基础整理","date":"2018-07-04T12:20:26.782Z","updated":"2018-09-13T08:07:02.449Z","comments":true,"path":"2018/07/04/anaconda基础整理/","link":"","permalink":"http://yoursite.com/2018/07/04/anaconda基础整理/","excerpt":"","text":"这是一个python环境、包管理工具，这玩意很厉害。 插一个其他东西：在搞conda环境变量的时候在.zshrc里没有注意语句的顺序，变量使用在前，声明在后，导致path里没有这个。。。。。。以后要注意了！ ###使用原因： 和以前用的virtualenv有点像，可以创建一个独立的python环境，python版本，包都是独立于外部的。 自带很多数据科学的包，省的下。 可以将环境与远程同步，也可以clone别人的环境，开发效率高。 可以与pycharm等工具结合，通用性强。 Anaconda navigator是一个桌面应用，使用非常简单。 ###常用到的操作： 在命令行可以用conda来操作一些东西： 1234567891011121314151617conda create -n &lt;env-name&gt; &lt;package-name&gt;#创建conda环境conda remove -n &lt;env-name&gt;#删除conda环境conda env list#查看所有环境，其中带*的为当前环境，在当前环境下，用的python版本、包等都是anaconda的，而不是本机环境source activate &lt;env-name&gt;#激活某个环境，之后zsh前面会加上这个环境的名称source deactivate#退出某个环境conda install &lt;package-name&gt;[=versionInfo]#在当前环境下安装包，可以选定版本conda install -n &lt;env-name&gt; &lt;package-name&gt;#在特定环境中conda list#列出当前环境所有的包conda search &lt;package-name&gt;#查找某个包（模糊匹配） ###conda和pycharm的结合： pycharm可以直接用conda的environment来做，只要在选择interpreter的时候选conda环境对应的那个即可。","categories":[],"tags":[{"name":"data science","slug":"data-science","permalink":"http://yoursite.com/tags/data-science/"}]},{"title":"mac&linux命令整理","slug":"mac&linux命令整理","date":"2018-07-04T10:03:57.407Z","updated":"2019-02-13T09:24:21.952Z","comments":true,"path":"2018/07/04/mac&linux命令整理/","link":"","permalink":"http://yoursite.com/2018/07/04/mac&linux命令整理/","excerpt":"","text":"今天看了一些oh-my-zsh的东西，感觉还是要整理在博客中，不然太容易忘掉了。 命令：以后一些好用但是不熟悉的命令就都放在这里了，方便回忆： jq ： 命令行处理json的命令，，支持管道 用法： 针对一个json，直接 1head -n 1 xxx.json | jq '.' 就可以获得format之后的形式，如果想获得json某个key，只要 1head -n 1 xxx.json | jq '.key' 即可获得 wc ： 用于统计指定文件的字节数、字数、行数 df ： 查看磁盘大小和占用情况 du：查看磁盘大小，用du -sh可以查看当前文件大小，用du -lh –max-depth=1查看当前和下一层文件大小。l表示硬连接，h表示用人类可以看懂的方式 ranger ：文件查看和管理工具，界面舒服 nohup &amp;：这个以前经常用，最近不用差点忘了，在命令钱加nohup，后面加&amp;，才能让命令后台运行，而且和终端没关系 Docker:我有一句mmp一定要说出来！ mac下由于docker的实现原因，所以宿主机不会有docker0网卡，更无法ping通container的，即使我用了bridge模式。当然container之间是可以互相ping通的。。。 插件：zsh自带很多插件，可以在.zshrc的plugin里写入，就可以用这些插件了，我用的插件包括： z。可以直接跳转。它记录（统计）了一些常用的跳转，只要z+destination就可以 extract。可以直接解压，忽略tar后各种参数。与unzip类似。 zsh-autosuggestions。这个神器，之前输入的命令可以再提示出来，很方便用。 Web-search。可以在命令行直接用 google+要查的内容 即可打开搜索页面。 命令行快捷键： ctrl+q。可以直接删除整行命令。 ctrl+w。可以删除每一分段的命令。 ctrl+e。直接跳到命令最后。 ctrl+a。直接跳到命令最前面。 command+d 在iterm中分屏 comand+[ or ] 在iterm的分屏中切换 文件：/etc/motd : 改命令行打开的提示语 遇到的问题：ssh-key生成忘记有什么问题了。。。整理不及时呐～ scala2.11和autosuggestions配色问题有冲突，导致每次scala都会报错 Dockerfile的基础应用Dockerfile里有个from，就是指从哪个images拿过来的，可以是本地的，所以增量修改images就是新建一个dockerfile然后from原来的images。再加上自己的RUN，最后执行docker build .就可以～","categories":[],"tags":[{"name":"mac","slug":"mac","permalink":"http://yoursite.com/tags/mac/"}]},{"title":"Cryptocurrency Technologies","slug":"Cryptocurrency Technologies","date":"2018-04-30T08:27:54.000Z","updated":"2018-09-01T05:04:53.156Z","comments":true,"path":"2018/04/30/Cryptocurrency Technologies/","link":"","permalink":"http://yoursite.com/2018/04/30/Cryptocurrency Technologies/","excerpt":"","text":"Cryptocurrency TechnologiesCoursera course from Princeton University, here are some information and notes from the course. Cryptographic Hash Functionsbasic term: takes any string of any size as input fixed-size output (We’ll use 256 bits ) efficiently computable Security properties: collision-free hiding puzzle-friendly collision-freeDefinitionNobody can find x and y such that: x!=y and H(x) = H(y) So that is what we call collision-free. Actually collision do exist. But it merely be found ——that is guaranteed the work. ApplicationIf we know H(x) = H(y), it’s safe to assume that x = y. Hash function provide us with a efficient way to recognize the same things. The hash is small, which has only 256 bits, while the whole things might be really big. HidingDefinitionWe want something like this: Given H(x), it is infeasible to find x. high min-entropy : the distribution is “very spread out”. If r is chosen from a probability distribution that has high min-entropy, then given H(r | x), it is infeasible to find x. Application : CommitmentCommit to a value, reveal it later. com = H(key | msg) Hidding:Given H(key | msg), infeasible to find msg. Binding:Infeasible to find msg != msg’ such that H(key | msg) == H(key | msg’) Puzzle-friendlyfor every possible output value y, if k is chosen from a distribution with high min-entropy, then it is infeasible to find x such that H(k | x) = y. Application: Search puzzle given a “puzzle ID” id (from high min-entropy distrib), and a target set Y; try to find a “solution” x such that H(id | x) = y. Add:common hash function in shell 12345678910111213#md5md5 [-pqrtx] [-s string] [files ...]#more waysecho \"max\"|md5md5 &lt;&lt;&lt; \"max\"#sha-1 &amp;&amp; sha-256shasum -a 1 -t testshasum -a 256 &lt;&lt;&lt; \"max\"#encode and decode function -&gt; base64base64 -D &lt;&lt;&lt; \"max\" #decodebase64 &lt;&lt;&lt; \"max\" #encode bitcoin use sha256 as its hash function Topic from Prof.Yuensome keywordsZero-knoledge proff approach Linkable ring signature Lighting network IOTA Byteball Hdera/Hashgraph monero’s limitation RingCT 2.0 BulletRingCT","categories":[],"tags":[{"name":"block chain","slug":"block-chain","permalink":"http://yoursite.com/tags/block-chain/"}]}]}